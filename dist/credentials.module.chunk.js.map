{"version":3,"sources":["./node_modules/util/node_modules/inherits/inherits_browser.js","./node_modules/util/support/isBufferBrowser.js","./node_modules/util/util.js","./src/app/credentials/credentials.module.ts","./src/app/credentials/credentials.routing.ts","./src/app/credentials/delegation/delegation.component.css","./src/app/credentials/delegation/delegation.component.html","./src/app/credentials/delegation/delegation.component.ts","./src/app/credentials/login/login.component.css","./src/app/credentials/login/login.component.html","./src/app/credentials/login/login.component.ts","./src/app/credentials/register/register.component.css","./src/app/credentials/register/register.component.html","./src/app/credentials/register/register.component.ts","./src/app/credentials/staff-registry/staff-registry.component.css","./src/app/credentials/staff-registry/staff-registry.component.html","./src/app/credentials/staff-registry/staff-registry.component.ts","./src/app/credentials/wrong/wrong.component.css","./src/app/credentials/wrong/wrong.component.html","./src/app/credentials/wrong/wrong.component.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzkByC;AACM;AACA;AACiB;AACI;AACG;AACN;AAER;AAEA;AACS;AACM;AACW;AAC1B;AAEnD,2BAA4B,IAAgB;IAC9C,MAAM,CAAC,IAAI,uFAAmB,CAAC,IAAI,CAAC,CAAC;AACzC,CAAC;AA6BD;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QA3B7B,uEAAQ,CAAC;YACN,OAAO,EAAE;gBACL,qEAAY;gBACZ,mEAAW;gBACX,2EAAmB;gBACnB,qEAAY,CAAC,QAAQ,CAAC,8EAAgB,CAAC;gBACvC,4EAAe,CAAC,OAAO,CAAC;oBACpB,MAAM,EAAE;wBACJ,OAAO,EAAE,4EAAe;wBACxB,UAAU,EAAE,iBAAiB;wBAC7B,IAAI,EAAE,CAAC,wEAAU,CAAC;qBACrB;iBACJ,CAAC;aACL;YACD,YAAY,EAAE;gBACV,8EAAc;gBACd,uFAAiB;gBACjB,8FAAmB;gBACnB,yGAAsB;gBACtB,+EAAc;aACjB;YACD,OAAO,EAAE;gBACL,8EAAc;gBACd,uFAAiB;gBACjB,8FAA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","file":"credentials.module.chunk.js","sourcesContent":["if (typeof Object.create === 'function') {\r\n  // implementation from standard node.js 'util' module\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor\r\n    ctor.prototype = Object.create(superCtor.prototype, {\r\n      constructor: {\r\n        value: ctor,\r\n        enumerable: false,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n  };\r\n} else {\r\n  // old school shim for old browsers\r\n  module.exports = function inherits(ctor, superCtor) {\r\n    ctor.super_ = superCtor\r\n    var TempCtor = function () {}\r\n    TempCtor.prototype = superCtor.prototype\r\n    ctor.prototype = new TempCtor()\r\n    ctor.prototype.constructor = ctor\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/node_modules/inherits/inherits_browser.js\n// module id = ./node_modules/util/node_modules/inherits/inherits_browser.js\n// module chunks = credentials.module","module.exports = function isBuffer(arg) {\r\n  return arg && typeof arg === 'object'\r\n    && typeof arg.copy === 'function'\r\n    && typeof arg.fill === 'function'\r\n    && typeof arg.readUInt8 === 'function';\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/support/isBufferBrowser.js\n// module id = ./node_modules/util/support/isBufferBrowser.js\n// module chunks = credentials.module","// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar formatRegExp = /%[sdj%]/g;\r\nexports.format = function(f) {\r\n  if (!isString(f)) {\r\n    var objects = [];\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      objects.push(inspect(arguments[i]));\r\n    }\r\n    return objects.join(' ');\r\n  }\r\n\r\n  var i = 1;\r\n  var args = arguments;\r\n  var len = args.length;\r\n  var str = String(f).replace(formatRegExp, function(x) {\r\n    if (x === '%%') return '%';\r\n    if (i >= len) return x;\r\n    switch (x) {\r\n      case '%s': return String(args[i++]);\r\n      case '%d': return Number(args[i++]);\r\n      case '%j':\r\n        try {\r\n          return JSON.stringify(args[i++]);\r\n        } catch (_) {\r\n          return '[Circular]';\r\n        }\r\n      default:\r\n        return x;\r\n    }\r\n  });\r\n  for (var x = args[i]; i < len; x = args[++i]) {\r\n    if (isNull(x) || !isObject(x)) {\r\n      str += ' ' + x;\r\n    } else {\r\n      str += ' ' + inspect(x);\r\n    }\r\n  }\r\n  return str;\r\n};\r\n\r\n\r\n// Mark that a method should not be used.\r\n// Returns a modified function which warns once by default.\r\n// If --no-deprecation is set, then it is a no-op.\r\nexports.deprecate = function(fn, msg) {\r\n  // Allow for deprecating things in the process of starting up.\r\n  if (isUndefined(global.process)) {\r\n    return function() {\r\n      return exports.deprecate(fn, msg).apply(this, arguments);\r\n    };\r\n  }\r\n\r\n  if (process.noDeprecation === true) {\r\n    return fn;\r\n  }\r\n\r\n  var warned = false;\r\n  function deprecated() {\r\n    if (!warned) {\r\n      if (process.throwDeprecation) {\r\n        throw new Error(msg);\r\n      } else if (process.traceDeprecation) {\r\n        console.trace(msg);\r\n      } else {\r\n        console.error(msg);\r\n      }\r\n      warned = true;\r\n    }\r\n    return fn.apply(this, arguments);\r\n  }\r\n\r\n  return deprecated;\r\n};\r\n\r\n\r\nvar debugs = {};\r\nvar debugEnviron;\r\nexports.debuglog = function(set) {\r\n  if (isUndefined(debugEnviron))\r\n    debugEnviron = process.env.NODE_DEBUG || '';\r\n  set = set.toUpperCase();\r\n  if (!debugs[set]) {\r\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\r\n      var pid = process.pid;\r\n      debugs[set] = function() {\r\n        var msg = exports.format.apply(exports, arguments);\r\n        console.error('%s %d: %s', set, pid, msg);\r\n      };\r\n    } else {\r\n      debugs[set] = function() {};\r\n    }\r\n  }\r\n  return debugs[set];\r\n};\r\n\r\n\r\n/**\r\n * Echos the value of a value. Trys to print the value out\r\n * in the best way possible given the different types.\r\n *\r\n * @param {Object} obj The object to print out.\r\n * @param {Object} opts Optional options object that alters the output.\r\n */\r\n/* legacy: obj, showHidden, depth, colors*/\r\nfunction inspect(obj, opts) {\r\n  // default options\r\n  var ctx = {\r\n    seen: [],\r\n    stylize: stylizeNoColor\r\n  };\r\n  // legacy...\r\n  if (arguments.length >= 3) ctx.depth = arguments[2];\r\n  if (arguments.length >= 4) ctx.colors = arguments[3];\r\n  if (isBoolean(opts)) {\r\n    // legacy...\r\n    ctx.showHidden = opts;\r\n  } else if (opts) {\r\n    // got an \"options\" object\r\n    exports._extend(ctx, opts);\r\n  }\r\n  // set default options\r\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\r\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\r\n  if (isUndefined(ctx.colors)) ctx.colors = false;\r\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\r\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\r\n  return formatValue(ctx, obj, ctx.depth);\r\n}\r\nexports.inspect = inspect;\r\n\r\n\r\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\r\ninspect.colors = {\r\n  'bold' : [1, 22],\r\n  'italic' : [3, 23],\r\n  'underline' : [4, 24],\r\n  'inverse' : [7, 27],\r\n  'white' : [37, 39],\r\n  'grey' : [90, 39],\r\n  'black' : [30, 39],\r\n  'blue' : [34, 39],\r\n  'cyan' : [36, 39],\r\n  'green' : [32, 39],\r\n  'magenta' : [35, 39],\r\n  'red' : [31, 39],\r\n  'yellow' : [33, 39]\r\n};\r\n\r\n// Don't use 'blue' not visible on cmd.exe\r\ninspect.styles = {\r\n  'special': 'cyan',\r\n  'number': 'yellow',\r\n  'boolean': 'yellow',\r\n  'undefined': 'grey',\r\n  'null': 'bold',\r\n  'string': 'green',\r\n  'date': 'magenta',\r\n  // \"name\": intentionally not styling\r\n  'regexp': 'red'\r\n};\r\n\r\n\r\nfunction stylizeWithColor(str, styleType) {\r\n  var style = inspect.styles[styleType];\r\n\r\n  if (style) {\r\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\r\n           '\\u001b[' + inspect.colors[style][1] + 'm';\r\n  } else {\r\n    return str;\r\n  }\r\n}\r\n\r\n\r\nfunction stylizeNoColor(str, styleType) {\r\n  return str;\r\n}\r\n\r\n\r\nfunction arrayToHash(array) {\r\n  var hash = {};\r\n\r\n  array.forEach(function(val, idx) {\r\n    hash[val] = true;\r\n  });\r\n\r\n  return hash;\r\n}\r\n\r\n\r\nfunction formatValue(ctx, value, recurseTimes) {\r\n  // Provide a hook for user-specified inspect functions.\r\n  // Check that value is an object with an inspect function on it\r\n  if (ctx.customInspect &&\r\n      value &&\r\n      isFunction(value.inspect) &&\r\n      // Filter out the util module, it's inspect function is special\r\n      value.inspect !== exports.inspect &&\r\n      // Also filter out any prototype objects using the circular check.\r\n      !(value.constructor && value.constructor.prototype === value)) {\r\n    var ret = value.inspect(recurseTimes, ctx);\r\n    if (!isString(ret)) {\r\n      ret = formatValue(ctx, ret, recurseTimes);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  // Primitive types cannot have properties\r\n  var primitive = formatPrimitive(ctx, value);\r\n  if (primitive) {\r\n    return primitive;\r\n  }\r\n\r\n  // Look up the keys of the object.\r\n  var keys = Object.keys(value);\r\n  var visibleKeys = arrayToHash(keys);\r\n\r\n  if (ctx.showHidden) {\r\n    keys = Object.getOwnPropertyNames(value);\r\n  }\r\n\r\n  // IE doesn't make error fields non-enumerable\r\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\r\n  if (isError(value)\r\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\r\n    return formatError(value);\r\n  }\r\n\r\n  // Some type of object without properties can be shortcutted.\r\n  if (keys.length === 0) {\r\n    if (isFunction(value)) {\r\n      var name = value.name ? ': ' + value.name : '';\r\n      return ctx.stylize('[Function' + name + ']', 'special');\r\n    }\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    }\r\n    if (isDate(value)) {\r\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\r\n    }\r\n    if (isError(value)) {\r\n      return formatError(value);\r\n    }\r\n  }\r\n\r\n  var base = '', array = false, braces = ['{', '}'];\r\n\r\n  // Make Array say that they are Array\r\n  if (isArray(value)) {\r\n    array = true;\r\n    braces = ['[', ']'];\r\n  }\r\n\r\n  // Make functions say that they are functions\r\n  if (isFunction(value)) {\r\n    var n = value.name ? ': ' + value.name : '';\r\n    base = ' [Function' + n + ']';\r\n  }\r\n\r\n  // Make RegExps say that they are RegExps\r\n  if (isRegExp(value)) {\r\n    base = ' ' + RegExp.prototype.toString.call(value);\r\n  }\r\n\r\n  // Make dates with properties first say the date\r\n  if (isDate(value)) {\r\n    base = ' ' + Date.prototype.toUTCString.call(value);\r\n  }\r\n\r\n  // Make error with message first say the error\r\n  if (isError(value)) {\r\n    base = ' ' + formatError(value);\r\n  }\r\n\r\n  if (keys.length === 0 && (!array || value.length == 0)) {\r\n    return braces[0] + base + braces[1];\r\n  }\r\n\r\n  if (recurseTimes < 0) {\r\n    if (isRegExp(value)) {\r\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\r\n    } else {\r\n      return ctx.stylize('[Object]', 'special');\r\n    }\r\n  }\r\n\r\n  ctx.seen.push(value);\r\n\r\n  var output;\r\n  if (array) {\r\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\r\n  } else {\r\n    output = keys.map(function(key) {\r\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\r\n    });\r\n  }\r\n\r\n  ctx.seen.pop();\r\n\r\n  return reduceToSingleString(output, base, braces);\r\n}\r\n\r\n\r\nfunction formatPrimitive(ctx, value) {\r\n  if (isUndefined(value))\r\n    return ctx.stylize('undefined', 'undefined');\r\n  if (isString(value)) {\r\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\r\n                                             .replace(/'/g, \"\\\\'\")\r\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\r\n    return ctx.stylize(simple, 'string');\r\n  }\r\n  if (isNumber(value))\r\n    return ctx.stylize('' + value, 'number');\r\n  if (isBoolean(value))\r\n    return ctx.stylize('' + value, 'boolean');\r\n  // For some reason typeof null is \"object\", so special case here.\r\n  if (isNull(value))\r\n    return ctx.stylize('null', 'null');\r\n}\r\n\r\n\r\nfunction formatError(value) {\r\n  return '[' + Error.prototype.toString.call(value) + ']';\r\n}\r\n\r\n\r\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\r\n  var output = [];\r\n  for (var i = 0, l = value.length; i < l; ++i) {\r\n    if (hasOwnProperty(value, String(i))) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          String(i), true));\r\n    } else {\r\n      output.push('');\r\n    }\r\n  }\r\n  keys.forEach(function(key) {\r\n    if (!key.match(/^\\d+$/)) {\r\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\r\n          key, true));\r\n    }\r\n  });\r\n  return output;\r\n}\r\n\r\n\r\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\r\n  var name, str, desc;\r\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\r\n  if (desc.get) {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Getter/Setter]', 'special');\r\n    } else {\r\n      str = ctx.stylize('[Getter]', 'special');\r\n    }\r\n  } else {\r\n    if (desc.set) {\r\n      str = ctx.stylize('[Setter]', 'special');\r\n    }\r\n  }\r\n  if (!hasOwnProperty(visibleKeys, key)) {\r\n    name = '[' + key + ']';\r\n  }\r\n  if (!str) {\r\n    if (ctx.seen.indexOf(desc.value) < 0) {\r\n      if (isNull(recurseTimes)) {\r\n        str = formatValue(ctx, desc.value, null);\r\n      } else {\r\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\r\n      }\r\n      if (str.indexOf('\\n') > -1) {\r\n        if (array) {\r\n          str = str.split('\\n').map(function(line) {\r\n            return '  ' + line;\r\n          }).join('\\n').substr(2);\r\n        } else {\r\n          str = '\\n' + str.split('\\n').map(function(line) {\r\n            return '   ' + line;\r\n          }).join('\\n');\r\n        }\r\n      }\r\n    } else {\r\n      str = ctx.stylize('[Circular]', 'special');\r\n    }\r\n  }\r\n  if (isUndefined(name)) {\r\n    if (array && key.match(/^\\d+$/)) {\r\n      return str;\r\n    }\r\n    name = JSON.stringify('' + key);\r\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\r\n      name = name.substr(1, name.length - 2);\r\n      name = ctx.stylize(name, 'name');\r\n    } else {\r\n      name = name.replace(/'/g, \"\\\\'\")\r\n                 .replace(/\\\\\"/g, '\"')\r\n                 .replace(/(^\"|\"$)/g, \"'\");\r\n      name = ctx.stylize(name, 'string');\r\n    }\r\n  }\r\n\r\n  return name + ': ' + str;\r\n}\r\n\r\n\r\nfunction reduceToSingleString(output, base, braces) {\r\n  var numLinesEst = 0;\r\n  var length = output.reduce(function(prev, cur) {\r\n    numLinesEst++;\r\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\r\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\r\n  }, 0);\r\n\r\n  if (length > 60) {\r\n    return braces[0] +\r\n           (base === '' ? '' : base + '\\n ') +\r\n           ' ' +\r\n           output.join(',\\n  ') +\r\n           ' ' +\r\n           braces[1];\r\n  }\r\n\r\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\r\n}\r\n\r\n\r\n// NOTE: These type checking functions intentionally don't use `instanceof`\r\n// because it is fragile and can be easily faked with `Object.create()`.\r\nfunction isArray(ar) {\r\n  return Array.isArray(ar);\r\n}\r\nexports.isArray = isArray;\r\n\r\nfunction isBoolean(arg) {\r\n  return typeof arg === 'boolean';\r\n}\r\nexports.isBoolean = isBoolean;\r\n\r\nfunction isNull(arg) {\r\n  return arg === null;\r\n}\r\nexports.isNull = isNull;\r\n\r\nfunction isNullOrUndefined(arg) {\r\n  return arg == null;\r\n}\r\nexports.isNullOrUndefined = isNullOrUndefined;\r\n\r\nfunction isNumber(arg) {\r\n  return typeof arg === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\n\r\nfunction isString(arg) {\r\n  return typeof arg === 'string';\r\n}\r\nexports.isString = isString;\r\n\r\nfunction isSymbol(arg) {\r\n  return typeof arg === 'symbol';\r\n}\r\nexports.isSymbol = isSymbol;\r\n\r\nfunction isUndefined(arg) {\r\n  return arg === void 0;\r\n}\r\nexports.isUndefined = isUndefined;\r\n\r\nfunction isRegExp(re) {\r\n  return isObject(re) && objectToString(re) === '[object RegExp]';\r\n}\r\nexports.isRegExp = isRegExp;\r\n\r\nfunction isObject(arg) {\r\n  return typeof arg === 'object' && arg !== null;\r\n}\r\nexports.isObject = isObject;\r\n\r\nfunction isDate(d) {\r\n  return isObject(d) && objectToString(d) === '[object Date]';\r\n}\r\nexports.isDate = isDate;\r\n\r\nfunction isError(e) {\r\n  return isObject(e) &&\r\n      (objectToString(e) === '[object Error]' || e instanceof Error);\r\n}\r\nexports.isError = isError;\r\n\r\nfunction isFunction(arg) {\r\n  return typeof arg === 'function';\r\n}\r\nexports.isFunction = isFunction;\r\n\r\nfunction isPrimitive(arg) {\r\n  return arg === null ||\r\n         typeof arg === 'boolean' ||\r\n         typeof arg === 'number' ||\r\n         typeof arg === 'string' ||\r\n         typeof arg === 'symbol' ||  // ES6 symbol\r\n         typeof arg === 'undefined';\r\n}\r\nexports.isPrimitive = isPrimitive;\r\n\r\nexports.isBuffer = require('./support/isBuffer');\r\n\r\nfunction objectToString(o) {\r\n  return Object.prototype.toString.call(o);\r\n}\r\n\r\n\r\nfunction pad(n) {\r\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\r\n}\r\n\r\n\r\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\r\n              'Oct', 'Nov', 'Dec'];\r\n\r\n// 26 Feb 16:19:34\r\nfunction timestamp() {\r\n  var d = new Date();\r\n  var time = [pad(d.getHours()),\r\n              pad(d.getMinutes()),\r\n              pad(d.getSeconds())].join(':');\r\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\r\n}\r\n\r\n\r\n// log is just a thin wrapper to console.log that prepends a timestamp\r\nexports.log = function() {\r\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\r\n};\r\n\r\n\r\n/**\r\n * Inherit the prototype methods from one constructor into another.\r\n *\r\n * The Function.prototype.inherits from lang.js rewritten as a standalone\r\n * function (not on Function.prototype). NOTE: If this file is to be loaded\r\n * during bootstrapping this function needs to be rewritten using some native\r\n * functions as prototype setup using normal JavaScript does not work as\r\n * expected during bootstrapping (see mirror.js in r114903).\r\n *\r\n * @param {function} ctor Constructor function which needs to inherit the\r\n *     prototype.\r\n * @param {function} superCtor Constructor function to inherit prototype from.\r\n */\r\nexports.inherits = require('inherits');\r\n\r\nexports._extend = function(origin, add) {\r\n  // Don't do anything if add isn't an object\r\n  if (!add || !isObject(add)) return origin;\r\n\r\n  var keys = Object.keys(add);\r\n  var i = keys.length;\r\n  while (i--) {\r\n    origin[keys[i]] = add[keys[i]];\r\n  }\r\n  return origin;\r\n};\r\n\r\nfunction hasOwnProperty(obj, prop) {\r\n  return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/util/util.js\n// module id = ./node_modules/util/util.js\n// module chunks = credentials.module","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { ComponentsRoutes } from './credentials.routing';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { DelegationComponent } from './delegation/delegation.component';\r\nimport { StaffRegistryComponent } from './staff-registry/staff-registry.component';\r\nimport { WrongComponent } from './wrong/wrong.component';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule.forChild(ComponentsRoutes),\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient]\r\n            }\r\n        })\r\n    ],\r\n    declarations: [\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        DelegationComponent,\r\n        StaffRegistryComponent,\r\n        WrongComponent\r\n    ],\r\n    exports: [\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        DelegationComponent\r\n    ]\r\n})\r\nexport class CredentialsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/credentials/credentials.module.ts","import {Routes} from '@angular/router';\r\n\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport { DelegationComponent } from './delegation/delegation.component';\r\nimport {StaffRegistryComponent} from './staff-registry/staff-registry.component';\r\nimport {WrongComponent} from './wrong/wrong.component';\r\n\r\n\r\nexport const ComponentsRoutes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    }, {\r\n        path: 'register',\r\n        component: RegisterComponent\r\n    },\r\n    {\r\n        path: 'delegation',\r\n        component: DelegationComponent\r\n    },\r\n    {\r\n        path: 'staffRegistry',\r\n        component: StaffRegistryComponent\r\n    },\r\n    {\r\n        path: 'wrong',\r\n        component: WrongComponent\r\n    }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/credentials/credentials.routing.ts","module.exports = \"\\r\\n.required {\\r\\n  color: orange;\\r\\n}\\r\\n\\r\\n.content {\\r\\n  padding-top: 10vh;\\r\\n}\\r\\n\\r\\n.formFormat {\\r\\n  line-height: 1.07142857;\\r\\n  color: #AAAAAA;\\r\\n  margin: 16px 0 0 0;\\r\\n}\\r\\n\\r\\n.big-text {\\r\\n  font-size: 30px;\\r\\n  line-height: 25px;\\r\\n  font-weight: 600;\\r\\n  text-transform: uppercase;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.text-area {\\r\\n  margin:20px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/delegation/delegation.component.css\n// module id = ./src/app/credentials/delegation/delegation.component.css\n// module chunks = credentials.module","module.exports = \"<div class=\\\"login-page\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n        <div class=\\\"container\\\" *ngIf=\\\"!hasCode\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8 col-sm-6 col-md-offset-2 col-sm-offset-3\\\">\\r\\n\\r\\n                    <form (submit)=\\\"onSubmit()\\\">\\r\\n                        <div class=\\\"card card-login\\\">\\r\\n                            <div class=\\\"card-header\\\" data-background-color=\\\"orange\\\">\\r\\n                                <h4 class=\\\"card-title\\\"><b>{{ 'delegation.title' | translate }}</b></h4>\\r\\n                                <p class=\\\"category\\\">{{ 'delegation.subtitle' | translate }}</p>\\r\\n                            </div>\\r\\n\\r\\n                            <!--Contenido-->\\r\\n                            <div class=\\\"card-content\\\">\\r\\n                                <br>\\r\\n                                <span class=\\\"required\\\"><b>{{ 'delegation.labels.generalInformation' | translate }}</b></span>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-4\\\">\\r\\n                                        <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"delegation.institutionType\\\" name=\\\"institutionType\\\">\\r\\n                                            <option value=\\\"\\\" disabled=\\\"true\\\" >{{ 'delegation.fields.institutionType' | translate }}</option>\\r\\n                                            <option value=\\\"Colegio\\\">Colegio</option>\\r\\n                                            <option value=\\\"Unviersidad\\\">Unviersidad</option>\\r\\n                                            <option value=\\\"Otro\\\">Otro</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'delegation.fields.institutionName' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                   [(ngModel)]=\\\"delegation.institutionName\\\" name=\\\"institutionName\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'delegation.fields.delegatesNum' | translate}}<span class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.delegatesNum\\\" name=\\\"delegatesNum\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!--<div class=\\\"row\\\">-->\\r\\n                                    <!--<div class=\\\"col-md-8\\\">-->\\r\\n                                        <!--<div class=\\\"form-group form-black label-floating is-empty\\\">-->\\r\\n                                            <!--<label class=\\\"control-label\\\">{{ 'delegation.fields.contactName' | translate }}<span-->\\r\\n                                                    <!--class=\\\"required\\\">*</span></label>-->\\r\\n                                            <!--<input type=\\\"text\\\" class=\\\"form-control\\\"-->\\r\\n                                                   <!--[(ngModel)]=\\\"delegation.contactName\\\" name=\\\"contactName\\\">-->\\r\\n                                        <!--</div>-->\\r\\n                                    <!--</div>-->\\r\\n                                    <!--<div class=\\\"col-md-4\\\">-->\\r\\n                                        <!--<div class=\\\"form-group form-black label-floating is-empty\\\">-->\\r\\n                                            <!--<label class=\\\"control-label\\\">{{ 'delegation.fields.contactCel' | translate }}<span class=\\\"required\\\">*</span></label>-->\\r\\n                                            <!--<input type=\\\"text\\\" class=\\\"form-control\\\"-->\\r\\n                                                   <!--[(ngModel)]=\\\"delegation.conctatCel\\\" name=\\\"conctatCel\\\">-->\\r\\n                                        <!--</div>-->\\r\\n                                    <!--</div>-->\\r\\n                                <!--</div>-->\\r\\n\\r\\n                                <br>\\r\\n                                <hr>\\r\\n                                <span class=\\\"required\\\"><b>{{ 'delegation.labels.sponsorInformation' | translate }}</b></span>\\r\\n\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'delegation.fields.sponsorName' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                   [(ngModel)]=\\\"delegation.sponsorName\\\" name=\\\"sponsorName\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-4\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'delegation.fields.sponsorCel' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                   [(ngModel)]=\\\"delegation.sponsorCel\\\" name=\\\"sponsorCel\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-7\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'delegation.fields.sponsorEmail' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"email\\\" class=\\\"form-control\\\"\\r\\n                                                   [(ngModel)]=\\\"delegation.sponsorEmail\\\" name=\\\"sponsorEmail\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-5\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'register.fields.birth' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.birth\\\"\\r\\n                                                   name=\\\"birth\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-2\\\">\\r\\n                                        <!--<label for=\\\"sel1\\\">Type of Id</label>-->\\r\\n                                        <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"delegation.idType\\\" name=\\\"idType\\\">\\r\\n                                            <option value=\\\"\\\" disabled=\\\"true\\\">{{ 'register.fields.idType' | translate }}</option>\\r\\n                                            <option value=\\\"C.C\\\">C.C</option>\\r\\n                                            <option value=\\\"T.I\\\">T.I</option>\\r\\n                                            <option value=\\\"P.P\\\">Passport</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'register.fields.idNumber' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.idNumber\\\"\\r\\n                                                   name=\\\"idNumber\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-4\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'register.fields.cellphone' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.cellphone\\\"\\r\\n                                                   name=\\\"cellphone\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"delegation.country\\\" name=\\\"country\\\">\\r\\n                                            <option value=\\\"\\\" disabled=\\\"true\\\" >{{ 'register.fields.country' | translate }}</option>\\r\\n                                            <option *ngFor=\\\"let country of countries\\\">{{country.nombre}}</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'register.fields.city' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.city\\\" name=\\\"city\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <br>\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <div class=\\\"formFormat2\\\">{{ 'register.fields.vegetarian' | translate }}</div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-9\\\">\\r\\n                                        <div class=\\\"togglebutton\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"delegation.vegetarian\\\" name=\\\"vegetarian\\\">\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <br>\\r\\n                                <hr>\\r\\n                                <span class=\\\"required\\\"><b>{{ 'register.labels.emergencyData' | translate }}</b></span>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-2\\\">\\r\\n                                        <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"delegation.blood\\\" name=\\\"blood\\\">\\r\\n                                            <option value=\\\"\\\" disabled=\\\"true\\\">{{ 'register.fields.blood' | translate }}</option>\\r\\n                                            <option value=\\\"A+\\\">A+</option>\\r\\n                                            <option value=\\\"A-\\\">A-</option>\\r\\n                                            <option value=\\\"B+\\\">B+</option>\\r\\n                                            <option value=\\\"B-\\\">B-</option>\\r\\n                                            <option value=\\\"O+\\\">O+</option>\\r\\n                                            <option value=\\\"O-\\\">O-</option>\\r\\n                                            <option value=\\\"AB+\\\">AB+</option>\\r\\n                                            <option value=\\\"AB-\\\">AB-</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-5\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'register.fields.insurance' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.insurance\\\"\\r\\n                                                   name=\\\"insurance\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-5\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'register.fields.specialCondition' | translate }}</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.specialCondition\\\"\\r\\n                                                   name=\\\"specialCondition\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'register.fields.contactName' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.contactName\\\"\\r\\n                                                   name=\\\"contactName\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-6\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'register.fields.contactPhone' | translate }}<span\\r\\n                                                    class=\\\"required\\\">*</span></label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegation.contactPhone\\\"\\r\\n                                                   name=\\\"contactPhone\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <br>\\r\\n                                <hr>\\r\\n                                <span class=\\\"required\\\"><b>{{ 'delegation.labels.requires' | translate }}</b></span>\\r\\n\\r\\n\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-12\\\">\\r\\n                                        <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                            <label class=\\\"control-label\\\">{{ 'delegation.fields.requires' | translate }}</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                                   [(ngModel)]=\\\"delegation.requires\\\" name=\\\"requires\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                            <div class=\\\"footer text-center\\\">\\r\\n                                <button class=\\\"btn btn-warning btn-simple btn-wd btn-lg\\\" type=\\\"submit\\\">{{ 'delegation.generatorBtn' | translate }}<div class=\\\"ripple-container\\\"></div>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"container\\\" *ngIf=\\\"hasCode\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-8 col-sm-6 col-md-offset-2 col-sm-offset-3\\\">\\r\\n                    <div class=\\\"card card-login\\\">\\r\\n                        <div class=\\\"card-header\\\" data-background-color=\\\"orange\\\">\\r\\n                            <h4 class=\\\"card-title\\\"><b>Código</b></h4>\\r\\n                            <p class=\\\"category\\\">Este código permitirá relacionar en el sistema a los integrantes de la delegación con el Sponsor y agruparlos bajo la institución que representan, no olvides difundirlo y conservarlo adecuadamente.</p>\\r\\n                        </div>\\r\\n                        <br>\\r\\n                        <div class=\\\"card-content text-center\\\">\\r\\n                            <div class=\\\"big-text text-area\\\">{{code}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"footer text-center\\\">\\r\\n                            <div routerLink=\\\"/land\\\" class=\\\"btn btn-warning btn-simple btn-wd btn-lg\\\">\\r\\n                                <div class=\\\"ripple-container\\\">Regresar</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/delegation/delegation.component.html\n// module id = ./src/app/credentials/delegation/delegation.component.html\n// module chunks = credentials.module","import {Router} from '@angular/router';\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {DelegationService} from '../../services/delegation/delegation.service';\r\nimport {DelegateService} from '../../services/delegate/delegate.service';\r\nimport {isUndefined} from 'util';\r\nimport {CookiesService} from '../../services/cookies/cookies.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-delegation',\r\n    templateUrl: './delegation.component.html',\r\n    styleUrls: ['./delegation.component.css']\r\n})\r\nexport class DelegationComponent implements OnInit {\r\n    delegation = {\r\n        institutionType: '',\r\n        institutionName: '',\r\n        delegatesNum: '',\r\n        sponsorName: '',\r\n        sponsorCel: '',\r\n        sponsorEmail: '',\r\n        requires: '',\r\n        code: '',\r\n        birth: '',\r\n        idType: '',\r\n        idNumber: '',\r\n        cellphone: '',\r\n        country: '',\r\n        city: '',\r\n        institution: '',\r\n        degree: '',\r\n        vegetarian: '',\r\n        blood: '',\r\n        insurance: '',\r\n        specialCondition: '',\r\n        contactName: '',\r\n        contactPhone: ''\r\n    };\r\n    err: any;\r\n    code: string;\r\n    hasCode: boolean;\r\n    countries: string;\r\n    constructor(private delegationService: DelegationService, private delegateService: DelegateService, private translate: TranslateService, private cookiesService: CookiesService, public router: Router) {\r\n        /*Idioma*/\r\n        // translate.setDefaultLang(cookiesService.getCookie('lang'));\r\n        translate.setDefaultLang(cookiesService.getCookie('es'));\r\n        this.translate.use('es');\r\n\r\n        /*Paises*/\r\n        this.delegateService.getCountries()\r\n            .subscribe(countries => {\r\n                this.countries = countries;\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onSubmit() {\r\n        this.codeGenerator()\r\n        this.delegation.code = this.code;\r\n        // console.log(this.delegation);\r\n        this.delegationService.addDelegation(this.delegation)\r\n            .subscribe(\r\n                staff => {\r\n                    this.hasCode = true;\r\n                },\r\n                err => {\r\n                    swal({\r\n                        type: 'error',\r\n                        title: 'Oops...',\r\n                        text: err.json().message,\r\n                        confirmButtonColor: '#d33',\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    codeGenerator(): any {\r\n        const dataArray: String[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n        let data: String, pos: number, num: number;\r\n        for ( num = 0; num < 7; num++) {\r\n            if (dataArray.hasOwnProperty(num)) {\r\n                pos = Math.floor(Math.random() * (dataArray.length));\r\n                const tem: String = dataArray[pos];\r\n                if (!isUndefined(data)) {\r\n                    data =  `${tem}${data}`;\r\n                } else {\r\n                    data = tem;\r\n                }\r\n            }\r\n        }\r\n        this.code = data.toUpperCase().toString();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/credentials/delegation/delegation.component.ts","module.exports = \".login-page .content, .login-page>.content {\\r\\n  padding-top: 18vh;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/login/login.component.css\n// module id = ./src/app/credentials/login/login.component.css\n// module chunks = credentials.module","module.exports = \"<div class=\\\"full-page-background \\\" style=\\\"background-image: url(../../../assets/img/cover3.webp) \\\">\\r\\n    <div class=\\\"wrapper wrapper-full-page\\\">\\r\\n        <div class=\\\"full-page login-page\\\" filter-color=\\\"orange\\\">\\r\\n            <div class=\\\"content\\\">\\r\\n                <div class=\\\"container\\\">\\r\\n                    <div class=\\\"row \\\">\\r\\n                        <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\r\\n\\r\\n                            <form (submit)=\\\"onSubmit()\\\">\\r\\n                                <div class=\\\"card card-login\\\">\\r\\n                                    <div class=\\\"card-header\\\" data-background-color=\\\"orange\\\">\\r\\n                                        <h4 class=\\\"card-title\\\"><b>Ingresar</b></h4>\\r\\n                                        <p class=\\\"category\\\">Ingrese los datos a continuacion</p>\\r\\n                                    </div>\\r\\n\\r\\n                                    <!--Content-->\\r\\n                                    <div class=\\\"card-content\\\">\\r\\n                                        <div class=\\\"input-group\\\">\\r\\n                                    <span class=\\\"input-group-addon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">email</i>\\r\\n                                    </span>\\r\\n                                            <div class=\\\"form-group label-floating is-empty\\\">\\r\\n                                                <label class=\\\"control-label\\\">Correo</label>\\r\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.email\\\" name=\\\"email\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"input-group\\\">\\r\\n                                    <span class=\\\"input-group-addon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">lock_outline</i>\\r\\n                                    </span>\\r\\n                                            <div class=\\\"form-group label-floating is-empty\\\">\\r\\n                                                <label class=\\\"control-label\\\">Contraseña</label>\\r\\n                                                <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.password\\\" name=\\\"password\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n                                    <div class=\\\"footer text-center\\\">\\r\\n                                        <button class=\\\"btn btn-warning btn-simple btn-wd btn-lg\\\" type=\\\"submit\\\">Ingresar\\r\\n                                            <div class=\\\"ripple-container\\\"></div>\\r\\n                                        </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/login/login.component.html\n// module id = ./src/app/credentials/login/login.component.html\n// module chunks = credentials.module","import {Router} from '@angular/router';\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {StaffService} from '../../services/staff/staff.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    staff = {\r\n        email: '',\r\n        password: ''\r\n    };\r\n    err: any;\r\n\r\n    constructor(private staffService: StaffService, public router: Router) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    onSubmit() {\r\n        this.staffService.loginStaff(this.staff)\r\n            .subscribe(\r\n                staff => {\r\n                    this.router.navigate(['admin']);\r\n                },\r\n                err => {\r\n                    swal({\r\n                        type: 'error',\r\n                        title: 'Oops...',\r\n                        text: err.json().message,\r\n                        confirmButtonColor: '##d33',\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/credentials/login/login.component.ts","module.exports = \".register-page {\\r\\n\\r\\n}\\r\\n.required {\\r\\n  color: orange;\\r\\n}\\r\\n.content {\\r\\n  padding-top: 10vh;\\r\\n}\\r\\n.formFormat {\\r\\n  line-height: 1.07142857;\\r\\n  color: #AAAAAA;\\r\\n  margin: 16px 0 0 0;\\r\\n}\\r\\n.formFormat2 {\\r\\n  line-height: 1.07142857;\\r\\n  color: #AAAAAA;\\r\\n  margin: 0px 0 0 0 !important;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/register/register.component.css\n// module id = ./src/app/credentials/register/register.component.css\n// module chunks = credentials.module","module.exports = \"<div class=\\\"container register-page\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"card card-profile\\\">\\r\\n                    <div class=\\\"card-avatar\\\">\\r\\n                        <img class=\\\"img\\\" src=\\\"../../assets/img/sign.jpg\\\"/>\\r\\n                    </div>\\r\\n\\r\\n                    <div>\\r\\n                        <h4 class=\\\"card-title\\\">{{ 'register.message.title' | translate }}</h4>\\r\\n                        <p class=\\\"card-content\\\"> {{ 'register.message.subtitle' | translate }} <br><br> <a routerLink=\\\"/delegation\\\"><span class=\\\"required\\\">{{ 'register.message.here' | translate }} </span></a>\\r\\n                        </p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-9\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\" data-background-color=\\\"orange\\\">\\r\\n                        <h4 class=\\\"card-title\\\"><b>{{ 'register.title' | translate }} </b></h4>\\r\\n                        <p class=\\\"category\\\">{{ 'register.subtitle' | translate }}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-content\\\">\\r\\n\\r\\n                        <!--Formularo de registro-->\\r\\n                        <form (submit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                            <!--Content-->\\r\\n                            <br>\\r\\n                            <span class=\\\"required\\\"><b>{{ 'register.labels.generalInformation' | translate }}</b></span>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.name' | translate }}<span class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.name\\\" name=\\\"name\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.lastName' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.lastName\\\"\\r\\n                                               name=\\\"lastName\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.email' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.email\\\"\\r\\n                                               name=\\\"email\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.birth' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.birth\\\"\\r\\n                                               name=\\\"birth\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <!--<label for=\\\"sel1\\\">Type of Id</label>-->\\r\\n                                    <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"delegate.idType\\\" name=\\\"idType\\\">\\r\\n                                        <option value=\\\"\\\" disabled=\\\"true\\\">{{ 'register.fields.idType' | translate }}</option>\\r\\n                                        <option value=\\\"C.C\\\">C.C</option>\\r\\n                                        <option value=\\\"T.I\\\">T.I</option>\\r\\n                                        <option value=\\\"P.P\\\">Passport</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.idNumber' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.idNumber\\\"\\r\\n                                               name=\\\"idNumber\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.cellphone' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.cellphone\\\"\\r\\n                                               name=\\\"cellphone\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"delegate.country\\\" name=\\\"country\\\">\\r\\n                                        <option value=\\\"\\\" disabled=\\\"true\\\" >{{ 'register.fields.country' | translate }}</option>\\r\\n                                        <option *ngFor=\\\"let country of countries\\\">{{country.nombre}}</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.city' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.city\\\" name=\\\"city\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.institution' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.institution\\\"\\r\\n                                               name=\\\"institution\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.degree' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.degree\\\"\\r\\n                                               name=\\\"degree\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <br>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                    <div class=\\\"formFormat2\\\">{{ 'register.fields.vegetarian' | translate }}</div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-9\\\">\\r\\n                                    <div class=\\\"togglebutton\\\">\\r\\n                                        <label>\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"delegate.vegetarian\\\" name=\\\"vegetarian\\\">\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <br>\\r\\n                            <hr>\\r\\n                            <span class=\\\"required\\\"><b>{{ 'register.labels.emergencyData' | translate }}</b></span>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-2\\\">\\r\\n                                    <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"delegate.blood\\\" name=\\\"blood\\\">\\r\\n                                        <option value=\\\"\\\" disabled=\\\"true\\\">{{ 'register.fields.blood' | translate }}</option>\\r\\n                                        <option value=\\\"A+\\\">A+</option>\\r\\n                                        <option value=\\\"A-\\\">A-</option>\\r\\n                                        <option value=\\\"B+\\\">B+</option>\\r\\n                                        <option value=\\\"B-\\\">B-</option>\\r\\n                                        <option value=\\\"O+\\\">O+</option>\\r\\n                                        <option value=\\\"O-\\\">O-</option>\\r\\n                                        <option value=\\\"AB+\\\">AB+</option>\\r\\n                                        <option value=\\\"AB-\\\">AB-</option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-5\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.insurance' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.insurance\\\"\\r\\n                                               name=\\\"insurance\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-5\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.specialCondition' | translate }}</label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.specialCondition\\\"\\r\\n                                               name=\\\"specialCondition\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.contactName' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.contactName\\\"\\r\\n                                               name=\\\"contactName\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.contactPhone' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.contactPhone\\\"\\r\\n                                               name=\\\"contactPhone\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-6\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\">{{ 'register.fields.numberMun' | translate }}<span\\r\\n                                                class=\\\"required\\\">*</span></label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"delegate.numberMun\\\"\\r\\n                                               name=\\\"numberMun\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <br>\\r\\n                            <hr>\\r\\n                            <span class=\\\"required\\\"><b>{{ 'register.labels.munumData' | translate }}</b></span>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <label class=\\\"formFormat\\\">{{ 'register.fields.committee1' | translate }}<span class=\\\"required\\\">*</span></label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-9\\\">\\r\\n                                        <select class=\\\"col-md-9 form-control formFormat\\\"\\r\\n                                                [(ngModel)]=\\\"delegate.committee1\\\" name=\\\"committee1\\\">\\r\\n                                            <option value=\\\"\\\" disabled=\\\"true\\\">Comité 1</option>\\r\\n                                            <option value=\\\"1\\\">Consejo de Seguridad (Doble delegación)</option>\\r\\n                                            <option value=\\\"2\\\">Comité de Estado Mayor</option>\\r\\n                                            <option value=\\\"3\\\">Human Rights Council</option>\\r\\n                                            <option value=\\\"4\\\">Comité del Patrimonio de la Humanidad</option>\\r\\n                                            <option value=\\\"5\\\">Comisión de Derecho Internacional</option>\\r\\n                                            <option value=\\\"6\\\">Senado de la República</option>\\r\\n                                            <option value=\\\"7\\\">Mesa de Astaná</option>\\r\\n                                            <option value=\\\"8\\\">Consorcio Mundial de Prensa</option>\\r\\n                                            <option value=\\\"9\\\">Juego de Tronos</option>\\r\\n                                            <option value=\\\"10\\\">GAC Electoral</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <label class=\\\"formFormat\\\">{{ 'register.fields.committee2' | translate }}<span class=\\\"required\\\">*</span></label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-9\\\">\\r\\n                                        <select class=\\\"col-md-9 form-control formFormat\\\"\\r\\n                                                [(ngModel)]=\\\"delegate.committee2\\\" name=\\\"committee2\\\">\\r\\n                                            <option value=\\\"\\\" disabled=\\\"true\\\">Comité 2</option>\\r\\n                                            <option value=\\\"1\\\">Consejo de Seguridad (Doble delegación)</option>\\r\\n                                            <option value=\\\"2\\\">Comité de Estado Mayor</option>\\r\\n                                            <option value=\\\"3\\\">Human Rights Council</option>\\r\\n                                            <option value=\\\"4\\\">Comité del Patrimonio de la Humanidad</option>\\r\\n                                            <option value=\\\"5\\\">Comisión de Derecho Internacional</option>\\r\\n                                            <option value=\\\"6\\\">Senado de la República</option>\\r\\n                                            <option value=\\\"7\\\">Mesa de Astaná</option>\\r\\n                                            <option value=\\\"8\\\">Consorcio Mundial de Prensa</option>\\r\\n                                            <option value=\\\"9\\\">Juego de Tronos</option>\\r\\n                                            <option value=\\\"10\\\">GAC Electoral</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-3\\\">\\r\\n                                        <label class=\\\"formFormat\\\">{{ 'register.fields.committee3' | translate }}<span class=\\\"required\\\">*</span></label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-9\\\">\\r\\n                                        <select class=\\\"col-md-9 form-control formFormat\\\"\\r\\n                                                [(ngModel)]=\\\"delegate.committee3\\\" name=\\\"committee3\\\">\\r\\n                                            <option value=\\\"\\\" disabled=\\\"true\\\">Comité 3</option>\\r\\n                                            <option value=\\\"1\\\">Consejo de Seguridad (Doble delegación)</option>\\r\\n                                            <option value=\\\"2\\\">Comité de Estado Mayor</option>\\r\\n                                            <option value=\\\"3\\\">Human Rights Council</option>\\r\\n                                            <option value=\\\"4\\\">Comité del Patrimonio de la Humanidad</option>\\r\\n                                            <option value=\\\"5\\\">Comisión de Derecho Internacional</option>\\r\\n                                            <option value=\\\"6\\\">Senado de la República</option>\\r\\n                                            <option value=\\\"7\\\">Mesa de Astaná</option>\\r\\n                                            <option value=\\\"8\\\">Consorcio Mundial de Prensa</option>\\r\\n                                            <option value=\\\"9\\\">Juego de Tronos</option>\\r\\n                                            <option value=\\\"10\\\">GAC Electoral</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row text-danger text-center\\\">\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <p>{{ 'register.labels.note' | translate }}</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <br>\\r\\n                            <hr>\\r\\n                            <span class=\\\"required\\\"><b>{{ 'register.labels.code' | translate }}</b></span>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <br>\\r\\n                                <div class=\\\"col-md-12\\\">\\r\\n                                    <div class=\\\"col-md-4\\\">\\r\\n                                        <div class=\\\"formFormat2\\\">{{ 'register.fields.codeMessage' | translate }}</div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-8\\\">\\r\\n                                        <div class=\\\"togglebutton\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" (click)=\\\"showSelected()\\\">\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" *ngIf=\\\"selected\\\">\\r\\n                                <div class=\\\" col-md-offset-1 col-md-8\\\">\\r\\n                                    <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                                        <label class=\\\"control-label\\\"> {{ 'register.fields.code' | translate }}</label>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control text-uppercase\\\" [(ngModel)]=\\\"delegate.code\\\"\\r\\n                                               name=\\\"numberMun\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\" btn btn-warning\\\" (click)=\\\"findIntitutionCode()\\\">{{ 'register.find' | translate }}</div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\" *ngIf=\\\"institutionName\\\">\\r\\n                                <div class=\\\" col-md-offset-1 col-md-8\\\">{{institutionName}}</div>\\r\\n                            </div>\\r\\n\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-warning pull-right\\\">{{ 'register.send' | translate }}</button>\\r\\n                            <div class=\\\"clearfix\\\"></div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/register/register.component.html\n// module id = ./src/app/credentials/register/register.component.html\n// module chunks = credentials.module","import {Router} from '@angular/router';\r\nimport {Component, OnInit} from '@angular/core';\r\nimport {DelegateService} from '../../services/delegate/delegate.service';\r\nimport {DelegationService} from '../../services/delegation/delegation.service';\r\nimport {CookiesService} from '../../services/cookies/cookies.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    delegate = {\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        birth: '',\r\n        idType: '',\r\n        idNumber: '',\r\n        cellphone: '',\r\n        country: '',\r\n        city: '',\r\n        institution: '',\r\n        degree: '',\r\n        vegetarian: '',\r\n        blood: '',\r\n        insurance: '',\r\n        specialCondition: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        numberMun: '',\r\n        committee1: '',\r\n        committee2: '',\r\n        committee3: '',\r\n        code: ''\r\n    };\r\n\r\n    selected: boolean;\r\n    institutionName: string;\r\n    err: any;\r\n    countries: string;\r\n\r\n    constructor(private delegateService: DelegateService, private delegationService: DelegationService, private translate: TranslateService, private cookiesService: CookiesService, private router: Router) {\r\n        // translate.setDefaultLang(cookiesService.getCookie('lang'));\r\n        translate.setDefaultLang(cookiesService.getCookie('es'));\r\n        this.translate.use('es');\r\n        this.delegateService.getCountries()\r\n            .subscribe(countries => {\r\n                this.countries = countries;\r\n            });\r\n\r\n        // if (cookiesService.getCookie('lang') === 'es') {\r\n        //     swal({\r\n        //         type: 'warning',\r\n        //         title: 'Ten en cuenta',\r\n        //         text: 'Si haces parte de una delegación, primero genera el código o preguntale a tu head delegate por este.'\r\n        //     });\r\n        // } else {\r\n        //     swal({\r\n        //              type: 'warning',\r\n        //              title: 'Watch out',\r\n        //              text: 'If you are part of a delegation, first generate the code or ask your head delegate for this'\r\n        //          });\r\n        // }\r\n        swal({\r\n            type: 'warning',\r\n            title: 'Ten en cuenta',\r\n            text: 'Si haces parte de una delegación, primero genera el código o preguntale a tu head delegate por este.'\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onSubmit() {\r\n        this.delegateService.addDelegate(this.delegate)\r\n            .subscribe(\r\n                delegate => {\r\n                    swal({\r\n                        type: 'success',\r\n                        title: 'Bienvenido a MUNUM',\r\n                        text: 'En los siguientes dias le llegará un correo con la información de pago',\r\n                        confirmButtonColor: '##d33',\r\n                    }).then((value) => {\r\n                        this.router.navigate(['land']);\r\n                    });\r\n                },\r\n                err => {\r\n                    swal({\r\n                        type: 'error',\r\n                        title: 'Oops...',\r\n                        text: err.json().message,\r\n                        confirmButtonColor: '#d33',\r\n                    });\r\n                });\r\n    }\r\n\r\n    showSelected() {\r\n        this.selected = !this.selected;\r\n    }\r\n\r\n    findIntitutionCode() {\r\n        this.delegationService.findDelegationCode(this.delegate).subscribe(\r\n            institutionCodeRes => {\r\n                if (institutionCodeRes === null) {\r\n                    swal({\r\n                        type: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'El código no se encutra en nuestra base de datos, verifiqa o manda un correo a prensa.munum@gmail.com',\r\n                        confirmButtonColor: '#d33',\r\n                    });\r\n                }\r\n                this.institutionName = institutionCodeRes.institutionName;\r\n            },\r\n            err => {\r\n                swal({\r\n                    type: 'error',\r\n                    title: 'Oops...',\r\n                    text: err.json().message,\r\n                    confirmButtonColor: '#d33',\r\n                });\r\n            });\r\n    }\r\n\r\n    try() {\r\n        swal('Good job!', 'You clicked the button!', 'success');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/credentials/register/register.component.ts","module.exports = \"\\r\\n.required {\\r\\n  color: orange;\\r\\n}\\r\\n\\r\\n.content {\\r\\n  padding-top: 10vh;\\r\\n}\\r\\n\\r\\n.formFormat {\\r\\n  line-height: 1.07142857;\\r\\n  color: #AAAAAA;\\r\\n  margin: 16px 0 0 0;\\r\\n}\\r\\n\\r\\n.formFormat2 {\\r\\n  line-height: 1.07142857;\\r\\n  color: #AAAAAA;\\r\\n  margin: 0px 0 0 0 !important;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/staff-registry/staff-registry.component.css\n// module id = ./src/app/credentials/staff-registry/staff-registry.component.css\n// module chunks = credentials.module","module.exports = \"<div class=\\\"full-page-background \\\" style=\\\"background-image: url(../../../assets/img/cover3.webp) \\\">\\r\\n  <div class=\\\"wrapper wrapper-full-page\\\">\\r\\n    <div class=\\\"full-page login-page\\\" filter-color=\\\"orange\\\">\\r\\n      <div class=\\\"content\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-offset-2 col-md-8\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header\\\" data-background-color=\\\"orange\\\">\\r\\n                <h4 class=\\\"title text-white\\\"><b>Welcome</b></h4>\\r\\n                <p class=\\\"category\\\">Llenar los campos correspondientes </p>\\r\\n              </div>\\r\\n              <div class=\\\"card-content\\\">\\r\\n\\r\\n                <!--Formularo de registro-->\\r\\n                <form (submit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                  <!--Error-->\\r\\n                  <div class=\\\"text-danger text-center\\\" *ngIf=\\\"err\\\">\\r\\n                    {{err}}\\r\\n                  </div>\\r\\n\\r\\n                  <!--Content-->\\r\\n                  <br>\\r\\n                  <span class=\\\"required\\\"><b>General Information</b></span>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Nombre<span class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.name\\\" name=\\\"name\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Apellido<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.lastName\\\"\\r\\n                               name=\\\"lastName\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-9\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Correo<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.email\\\"\\r\\n                               name=\\\"email\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-3\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Fecha nacimiento (DD/MM/YYYY)<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.birth\\\"\\r\\n                               name=\\\"birth\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                      <!--<label for=\\\"sel1\\\">Type of Id</label>-->\\r\\n                      <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"staff.idType\\\" name=\\\"idType\\\">\\r\\n                        <option value=\\\"\\\" disabled=\\\"true\\\">{{ 'register.fields.idType' | translate }}</option>\\r\\n                        <option value=\\\"C.C\\\">C.C</option>\\r\\n                        <option value=\\\"T.I\\\">T.I</option>\\r\\n                        <option value=\\\"P.P\\\">Passport</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Numero Documento<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.idNumber\\\"\\r\\n                               name=\\\"idNumber\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Celular<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.cellphone\\\"\\r\\n                               name=\\\"cellphone\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <!--<div class=\\\"col-md-6\\\">-->\\r\\n                      <!--<div class=\\\"form-group form-black label-floating is-empty\\\">-->\\r\\n                        <!--<label class=\\\"control-label\\\">Pais de residencia<span-->\\r\\n                                <!--class=\\\"required\\\">*</span></label>-->\\r\\n                        <!--<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.country\\\"-->\\r\\n                               <!--name=\\\"country\\\">-->\\r\\n                      <!--</div>-->\\r\\n                    <!--</div>-->\\r\\n\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"staff.country\\\" name=\\\"country\\\">\\r\\n                            <option value=\\\"\\\" disabled=\\\"true\\\" >Pais de residencia</option>\\r\\n                            <option *ngFor=\\\"let country of countries\\\">{{country.nombre}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Ciudad de residencia<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.city\\\" name=\\\"city\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Instituto de educacion<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.institution\\\"\\r\\n                               name=\\\"institution\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Carrera<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.degree\\\"\\r\\n                               name=\\\"degree\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <br>\\r\\n                      <div class=\\\"col-md-2\\\">\\r\\n                        <div class=\\\"formFormat2\\\">Vegetariano (N/S)</div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-10\\\">\\r\\n                        <div class=\\\"togglebutton\\\">\\r\\n                          <label>\\r\\n                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"staff.vegetarian\\\" name=\\\"vegetarian\\\">\\r\\n                          </label>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n\\r\\n                  <br>\\r\\n                  <hr>\\r\\n                  <span class=\\\"required\\\"><b>Informacion de emergencia</b></span>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-2\\\">\\r\\n                      <select class=\\\"form-control formFormat\\\" [(ngModel)]=\\\"staff.blood\\\" name=\\\"blood\\\">\\r\\n                        <option value=\\\"\\\" disabled=\\\"true\\\">{{ 'register.fields.blood' | translate }}</option>\\r\\n                        <option value=\\\"A+\\\">A+</option>\\r\\n                        <option value=\\\"A-\\\">A-</option>\\r\\n                        <option value=\\\"B+\\\">B+</option>\\r\\n                        <option value=\\\"B-\\\">B-</option>\\r\\n                        <option value=\\\"O+\\\">O+</option>\\r\\n                        <option value=\\\"O-\\\">O-</option>\\r\\n                        <option value=\\\"AB+\\\">AB+</option>\\r\\n                        <option value=\\\"AB-\\\">AB-</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-5\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Seguro medico<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.insurance\\\"\\r\\n                               name=\\\"insurance\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-5\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Condicion special de salud</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.specialCondition\\\"\\r\\n                               name=\\\"specialCondition\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Nombre de concatacto de emergencia<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.contactName\\\"\\r\\n                               name=\\\"contactName\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Telefono de contacto de emergincia <span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.contactPhone\\\"\\r\\n                               name=\\\"contactPhone\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\"> Numero de años que ha participado en MUNs<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.numberMun\\\"\\r\\n                               name=\\\"numberMun\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <br>\\r\\n                  <hr>\\r\\n                  <span class=\\\"required\\\"><b>Crear cuenta</b></span>\\r\\n\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-offset-3 col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Contraseña<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.password\\\"\\r\\n                               name=\\\"contactPhone\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-offset-3 col-md-6\\\">\\r\\n                      <div class=\\\"form-group form-black label-floating is-empty\\\">\\r\\n                        <label class=\\\"control-label\\\">Repetir contraseña<span\\r\\n                                class=\\\"required\\\">*</span></label>\\r\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"staff.passwordConfirmation\\\"\\r\\n                               name=\\\"contactPhone\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-warning pull-right\\\">Enviar</button>\\r\\n                  <div class=\\\"clearfix\\\"></div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/staff-registry/staff-registry.component.html\n// module id = ./src/app/credentials/staff-registry/staff-registry.component.html\n// module chunks = credentials.module","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {StaffService} from '../../services/staff/staff.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n    selector: 'app-staff-registry',\r\n    templateUrl: './staff-registry.component.html',\r\n    styleUrls: ['./staff-registry.component.css']\r\n})\r\nexport class StaffRegistryComponent implements OnInit {\r\n    staff = {\r\n        name: '',\r\n        lastName: '',\r\n        email: '',\r\n        birth: '',\r\n        idType: '',\r\n        idNumber: '',\r\n        cellphone: '',\r\n        country: '',\r\n        city: '',\r\n        institution: '',\r\n        degree: '',\r\n        vegetarian: '',\r\n        blood: '',\r\n        insurance: '',\r\n        specialCondition: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        numberMun: '',\r\n        password: '',\r\n        passwordConfirmation: ''\r\n    };\r\n    err: any;\r\n    countries: string;\r\n\r\n    constructor(private staffService: StaffService, public router: Router) {\r\n        this.staffService.getCountries()\r\n            .subscribe(countries => {\r\n                this.countries = countries;\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onSubmit() {\r\n        this.staffService.addStaff(this.staff)\r\n            .subscribe(\r\n                delegate => {\r\n                    swal({\r\n                        type: 'success',\r\n                        title: 'Ya casi...',\r\n                        text: 'Cuando la informacion sea validada se le enviará un correo ',\r\n                        confirmButtonColor: '#3085d6',\r\n                    }).then((value) => {\r\n                        this.router.navigate(['land']);\r\n                    });\r\n                },\r\n                err => {\r\n                    swal({\r\n                        type: 'error',\r\n                        title: 'Oops...',\r\n                        text: err.json().message,\r\n                        confirmButtonColor: '#d33',\r\n                    });\r\n                });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/credentials/staff-registry/staff-registry.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/wrong/wrong.component.css\n// module id = ./src/app/credentials/wrong/wrong.component.css\n// module chunks = credentials.module","module.exports = \"<!--Marca-->\\r\\n<div class=\\\"section section-small section-get-started\\\" id=\\\"especializados\\\">\\r\\n  <div class=\\\"parallax filter filter-color-red\\\">\\r\\n    <div class=\\\"image\\\" style=\\\"background-image: url('../../../assets/img/cover3.webp')\\\">\\r\\n    </div>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"title-area\\\">\\r\\n        <h1 class=\\\"text-white\\\">Nuestras inscripciones aún no se encuntran abiertas, te invitamos a visitar nuestras redes sociales donde podrás seguir de cerca nuestros aspectos de MUNUM'18</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<footer class=\\\"footer footer-big footer-color-black\\\" data-color=\\\"black\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-2 col-sm-3\\\">\\r\\n        <div class=\\\"info\\\">\\r\\n          <h5 class=\\\"title\\\">Intranet</h5>\\r\\n          <nav>\\r\\n            <ul>\\r\\n              <li>\\r\\n                <a routerLink=\\\"/login\\\">Login Staff</a>\\r\\n              </li>\\r\\n              <!--<li>-->\\r\\n              <!--<a routerLink=\\\"/staffRegistry\\\">Register Staff</a>-->\\r\\n              <!--</li>-->\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-md-3 col-md-offset-1 col-sm-3\\\">\\r\\n        <div class=\\\"info\\\">\\r\\n          <h5 class=\\\"title\\\">Contactanos</h5>\\r\\n          <nav>\\r\\n            <ul>\\r\\n              <hr class=\\\"hr-small\\\">\\r\\n              <li>\\r\\n                <a>sg.munum@gmail.com</a>\\r\\n              </li>\\r\\n              <hr class=\\\"hr-small\\\">\\r\\n              <li>\\r\\n                <a>logistica.munum@gmail.com</a>\\r\\n              </li>\\r\\n              <hr class=\\\"hr-small\\\">\\r\\n              <li>\\r\\n                <a>prensa.munum@gmail.com</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-offset-2 col-md-2  col-sm-3\\\">\\r\\n        <div class=\\\"info\\\">\\r\\n          <h5 class=\\\"title\\\">{{ 'Land.footer.follow' | translate }}</h5>\\r\\n          <nav>\\r\\n            <ul>\\r\\n              <li>\\r\\n                <a href=\\\"https://www.facebook.com/munum.co/\\\" target=\\\"_blank\\\"\\r\\n                   class=\\\"btn btn-social btn-facebook btn-simple\\\">\\r\\n                  <i class=\\\"fa fa-facebook-square\\\"></i> Facebook\\r\\n                </a>\\r\\n              </li>\\r\\n              <li>\\r\\n                <a href=\\\"https://www.instagram.com/munum.co/\\\" target=\\\"_blank\\\"\\r\\n                   class=\\\"btn btn-social btn-dribbble btn-simple\\\">\\r\\n                  <i class=\\\"fa fa-instagram\\\"></i> Instagram\\r\\n                </a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div class=\\\"copyright\\\">\\r\\n      ©\\r\\n      <script> document.write(new Date().getFullYear()) </script>\\r\\n      Creative Tim, made with love - Edited by Jeisson F. Sánchez\\r\\n    </div>\\r\\n  </div>\\r\\n</footer>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/credentials/wrong/wrong.component.html\n// module id = ./src/app/credentials/wrong/wrong.component.html\n// module chunks = credentials.module","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-wrong',\r\n  templateUrl: './wrong.component.html',\r\n  styleUrls: ['./wrong.component.css', '../../user-page/land/land.component.css']\r\n})\r\nexport class WrongComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/credentials/wrong/wrong.component.ts"],"sourceRoot":"webpack:///"}