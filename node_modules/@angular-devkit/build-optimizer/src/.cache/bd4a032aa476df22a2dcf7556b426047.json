{"remainingRequest":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!G:\\Files\\Gitlab\\Github\\munum\\node_modules\\core-js\\modules\\_collection-weak.js","dependencies":[{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\core-js\\modules\\_collection-weak.js","mtime":1552242048300},{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552242047203},{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1552242034165}],"contextDependencies":[],"result":["'use strict';\r\nvar redefineAll       = require('./_redefine-all')\r\n  , getWeak           = require('./_meta').getWeak\r\n  , anObject          = require('./_an-object')\r\n  , isObject          = require('./_is-object')\r\n  , anInstance        = require('./_an-instance')\r\n  , forOf             = require('./_for-of')\r\n  , createArrayMethod = require('./_array-methods')\r\n  , $has              = require('./_has')\r\n  , arrayFind         = createArrayMethod(5)\r\n  , arrayFindIndex    = createArrayMethod(6)\r\n  , id                = 0;\r\n\r\n// fallback for uncaught frozen keys\r\nvar uncaughtFrozenStore = function(that){\r\n  return that._l || (that._l = new UncaughtFrozenStore);\r\n};\r\nvar UncaughtFrozenStore = function(){\r\n  this.a = [];\r\n};\r\nvar findUncaughtFrozen = function(store, key){\r\n  return arrayFind(store.a, function(it){\r\n    return it[0] === key;\r\n  });\r\n};\r\nUncaughtFrozenStore.prototype = {\r\n  get: function(key){\r\n    var entry = findUncaughtFrozen(this, key);\r\n    if(entry)return entry[1];\r\n  },\r\n  has: function(key){\r\n    return !!findUncaughtFrozen(this, key);\r\n  },\r\n  set: function(key, value){\r\n    var entry = findUncaughtFrozen(this, key);\r\n    if(entry)entry[1] = value;\r\n    else this.a.push([key, value]);\r\n  },\r\n  'delete': function(key){\r\n    var index = arrayFindIndex(this.a, function(it){\r\n      return it[0] === key;\r\n    });\r\n    if(~index)this.a.splice(index, 1);\r\n    return !!~index;\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\r\n    var C = wrapper(function(that, iterable){\r\n      anInstance(that, C, NAME, '_i');\r\n      that._i = id++;      // collection id\r\n      that._l = undefined; // leak store for uncaught frozen objects\r\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\r\n    });\r\n    redefineAll(C.prototype, {\r\n      // 23.3.3.2 WeakMap.prototype.delete(key)\r\n      // 23.4.3.3 WeakSet.prototype.delete(value)\r\n      'delete': function(key){\r\n        if(!isObject(key))return false;\r\n        var data = getWeak(key);\r\n        if(data === true)return uncaughtFrozenStore(this)['delete'](key);\r\n        return data && $has(data, this._i) && delete data[this._i];\r\n      },\r\n      // 23.3.3.4 WeakMap.prototype.has(key)\r\n      // 23.4.3.4 WeakSet.prototype.has(value)\r\n      has: function has(key){\r\n        if(!isObject(key))return false;\r\n        var data = getWeak(key);\r\n        if(data === true)return uncaughtFrozenStore(this).has(key);\r\n        return data && $has(data, this._i);\r\n      }\r\n    });\r\n    return C;\r\n  },\r\n  def: function(that, key, value){\r\n    var data = getWeak(anObject(key), true);\r\n    if(data === true)uncaughtFrozenStore(that).set(key, value);\r\n    else data[that._i] = value;\r\n    return that;\r\n  },\r\n  ufstore: uncaughtFrozenStore\r\n};",null]}