{"remainingRequest":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!G:\\Files\\Gitlab\\Github\\munum\\node_modules\\core-js\\modules\\es6.reflect.construct.js","dependencies":[{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\core-js\\modules\\es6.reflect.construct.js","mtime":1552242048369},{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552242047203},{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1552242034165}],"contextDependencies":[],"result":["// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\r\nvar $export    = require('./_export')\r\n  , create     = require('./_object-create')\r\n  , aFunction  = require('./_a-function')\r\n  , anObject   = require('./_an-object')\r\n  , isObject   = require('./_is-object')\r\n  , fails      = require('./_fails')\r\n  , bind       = require('./_bind')\r\n  , rConstruct = (require('./_global').Reflect || {}).construct;\r\n\r\n// MS Edge supports only 2 arguments and argumentsList argument is optional\r\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\r\nvar NEW_TARGET_BUG = fails(function(){\r\n  function F(){}\r\n  return !(rConstruct(function(){}, [], F) instanceof F);\r\n});\r\nvar ARGS_BUG = !fails(function(){\r\n  rConstruct(function(){});\r\n});\r\n\r\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\r\n  construct: function construct(Target, args /*, newTarget*/){\r\n    aFunction(Target);\r\n    anObject(args);\r\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\r\n    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);\r\n    if(Target == newTarget){\r\n      // w/o altered newTarget, optimization for 0-4 arguments\r\n      switch(args.length){\r\n        case 0: return new Target;\r\n        case 1: return new Target(args[0]);\r\n        case 2: return new Target(args[0], args[1]);\r\n        case 3: return new Target(args[0], args[1], args[2]);\r\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\r\n      }\r\n      // w/o altered newTarget, lot of arguments case\r\n      var $args = [null];\r\n      $args.push.apply($args, args);\r\n      return new (bind.apply(Target, $args));\r\n    }\r\n    // with altered newTarget, not support built-in constructors\r\n    var proto    = newTarget.prototype\r\n      , instance = create(isObject(proto) ? proto : Object.prototype)\r\n      , result   = Function.apply.call(Target, instance, args);\r\n    return isObject(result) ? result : instance;\r\n  }\r\n});",null]}