{"remainingRequest":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!G:\\Files\\Gitlab\\Github\\munum\\node_modules\\core-js\\modules\\_collection.js","dependencies":[{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\core-js\\modules\\_collection.js","mtime":1552242048300},{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552242047203},{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1552242034165}],"contextDependencies":[],"result":["'use strict';\r\nvar global            = require('./_global')\r\n  , $export           = require('./_export')\r\n  , redefine          = require('./_redefine')\r\n  , redefineAll       = require('./_redefine-all')\r\n  , meta              = require('./_meta')\r\n  , forOf             = require('./_for-of')\r\n  , anInstance        = require('./_an-instance')\r\n  , isObject          = require('./_is-object')\r\n  , fails             = require('./_fails')\r\n  , $iterDetect       = require('./_iter-detect')\r\n  , setToStringTag    = require('./_set-to-string-tag')\r\n  , inheritIfRequired = require('./_inherit-if-required');\r\n\r\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\r\n  var Base  = global[NAME]\r\n    , C     = Base\r\n    , ADDER = IS_MAP ? 'set' : 'add'\r\n    , proto = C && C.prototype\r\n    , O     = {};\r\n  var fixMethod = function(KEY){\r\n    var fn = proto[KEY];\r\n    redefine(proto, KEY,\r\n      KEY == 'delete' ? function(a){\r\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\r\n      } : KEY == 'has' ? function has(a){\r\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\r\n      } : KEY == 'get' ? function get(a){\r\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\r\n      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }\r\n        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }\r\n    );\r\n  };\r\n  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\r\n    new C().entries().next();\r\n  }))){\r\n    // create collection constructor\r\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\r\n    redefineAll(C.prototype, methods);\r\n    meta.NEED = true;\r\n  } else {\r\n    var instance             = new C\r\n      // early implementations not supports chaining\r\n      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance\r\n      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\r\n      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })\r\n      // most early implementations doesn't supports iterables, most modern - not close it correctly\r\n      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new\r\n      // for early implementations -0 and +0 not the same\r\n      , BUGGY_ZERO = !IS_WEAK && fails(function(){\r\n        // V8 ~ Chromium 42- fails only with 5+ elements\r\n        var $instance = new C()\r\n          , index     = 5;\r\n        while(index--)$instance[ADDER](index, index);\r\n        return !$instance.has(-0);\r\n      });\r\n    if(!ACCEPT_ITERABLES){ \r\n      C = wrapper(function(target, iterable){\r\n        anInstance(target, C, NAME);\r\n        var that = inheritIfRequired(new Base, target, C);\r\n        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\r\n        return that;\r\n      });\r\n      C.prototype = proto;\r\n      proto.constructor = C;\r\n    }\r\n    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){\r\n      fixMethod('delete');\r\n      fixMethod('has');\r\n      IS_MAP && fixMethod('get');\r\n    }\r\n    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);\r\n    // weak collections should not contains .clear method\r\n    if(IS_WEAK && proto.clear)delete proto.clear;\r\n  }\r\n\r\n  setToStringTag(C, NAME);\r\n\r\n  O[NAME] = C;\r\n  $export($export.G + $export.W + $export.F * (C != Base), O);\r\n\r\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\r\n\r\n  return C;\r\n};",null]}