{"remainingRequest":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!G:\\Files\\Gitlab\\Github\\munum\\node_modules\\xlsx\\xlsx.js","dependencies":[{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\xlsx\\xlsx.js","mtime":1552242063953},{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552242047203},{"path":"G:\\Files\\Gitlab\\Github\\munum\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1552242034165}],"contextDependencies":[],"result":["/* xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\r\n/* vim: set ts=2: */\r\n/*exported XLSX */\r\n/*global global, exports, module, require:false, process:false, Buffer:false, ArrayBuffer:false */\r\nvar XLSX = {};\r\n(function make_xlsx(XLSX){\r\nXLSX.version = '0.12.8';\r\nvar current_codepage = 1200, current_ansi = 1252;\r\n/*global cptable:true */\r\nif(typeof module !== \"undefined\" && typeof require !== 'undefined') {\r\n\tif(typeof cptable === 'undefined') global.cptable = require('./dist/cpexcel.js');\r\n}\r\n\r\nvar VALID_ANSI = [ 874, 932, 936, 949, 950 ];\r\nfor(var i = 0; i <= 8; ++i) VALID_ANSI.push(1250 + i);\r\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\r\nvar CS2CP = ({\r\n0:    1252, /* ANSI */\r\n1:   65001, /* DEFAULT */\r\n2:   65001, /* SYMBOL */\r\n77:  10000, /* MAC */\r\n128:   932, /* SHIFTJIS */\r\n129:   949, /* HANGUL */\r\n130:  1361, /* JOHAB */\r\n134:   936, /* GB2312 */\r\n136:   950, /* CHINESEBIG5 */\r\n161:  1253, /* GREEK */\r\n162:  1254, /* TURKISH */\r\n163:  1258, /* VIETNAMESE */\r\n177:  1255, /* HEBREW */\r\n178:  1256, /* ARABIC */\r\n186:  1257, /* BALTIC */\r\n204:  1251, /* RUSSIAN */\r\n222:   874, /* THAI */\r\n238:  1250, /* EASTEUROPE */\r\n255:  1252, /* OEM */\r\n69:   6969  /* MISC */\r\n});\r\n\r\nvar set_ansi = function(cp) { if(VALID_ANSI.indexOf(cp) == -1) return; current_ansi = CS2CP[0] = cp; };\r\nfunction reset_ansi() { set_ansi(1252); }\r\n\r\nvar set_cp = function(cp) { current_codepage = cp; set_ansi(cp); };\r\nfunction reset_cp() { set_cp(1200); reset_ansi(); }\r\n\r\nfunction char_codes(data) { var o = []; for(var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i); return o; }\r\n\r\nfunction utf16leread(data) {\r\n\tvar o = [];\r\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i) + (data.charCodeAt(2*i+1)<<8));\r\n\treturn o.join(\"\");\r\n}\r\nfunction utf16beread(data) {\r\n\tvar o = [];\r\n\tfor(var i = 0; i < (data.length>>1); ++i) o[i] = String.fromCharCode(data.charCodeAt(2*i+1) + (data.charCodeAt(2*i)<<8));\r\n\treturn o.join(\"\");\r\n}\r\n\r\nvar debom = function(data) {\r\n\tvar c1 = data.charCodeAt(0), c2 = data.charCodeAt(1);\r\n\tif(c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\r\n\tif(c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\r\n\tif(c1 == 0xFEFF) return data.slice(1);\r\n\treturn data;\r\n};\r\n\r\nvar _getchar = function _gc1(x) { return String.fromCharCode(x); };\r\nif(typeof cptable !== 'undefined') {\r\n\tset_cp = function(cp) { current_codepage = cp; };\r\n\tdebom = function(data) {\r\n\t\tif(data.charCodeAt(0) === 0xFF && data.charCodeAt(1) === 0xFE) { return cptable.utils.decode(1200, char_codes(data.slice(2))); }\r\n\t\treturn data;\r\n\t};\r\n\t_getchar = function _gc2(x) {\r\n\t\tif(current_codepage === 1200) return String.fromCharCode(x);\r\n\t\treturn cptable.utils.decode(current_codepage, [x&255,x>>8])[0];\r\n\t};\r\n}\r\nvar DENSE = null;\r\nvar DIF_XL = true;\r\nvar Base64 = (function make_b64(){\r\n\tvar map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\treturn {\r\n\t\tencode: function(input) {\r\n\t\t\tvar o = \"\";\r\n\t\t\tvar c1=0, c2=0, c3=0, e1=0, e2=0, e3=0, e4=0;\r\n\t\t\tfor(var i = 0; i < input.length; ) {\r\n\t\t\t\tc1 = input.charCodeAt(i++);\r\n\t\t\t\te1 = (c1 >> 2);\r\n\r\n\t\t\t\tc2 = input.charCodeAt(i++);\r\n\t\t\t\te2 = ((c1 & 3) << 4) | (c2 >> 4);\r\n\r\n\t\t\t\tc3 = input.charCodeAt(i++);\r\n\t\t\t\te3 = ((c2 & 15) << 2) | (c3 >> 6);\r\n\t\t\t\te4 = (c3 & 63);\r\n\t\t\t\tif (isNaN(c2)) { e3 = e4 = 64; }\r\n\t\t\t\telse if (isNaN(c3)) { e4 = 64; }\r\n\t\t\t\to += map.charAt(e1) + map.charAt(e2) + map.charAt(e3) + map.charAt(e4);\r\n\t\t\t}\r\n\t\t\treturn o;\r\n\t\t},\r\n\t\tdecode: function b64_decode(input) {\r\n\t\t\tvar o = \"\";\r\n\t\t\tvar c1=0, c2=0, c3=0, e1=0, e2=0, e3=0, e4=0;\r\n\t\t\tinput = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\r\n\t\t\tfor(var i = 0; i < input.length;) {\r\n\t\t\t\te1 = map.indexOf(input.charAt(i++));\r\n\t\t\t\te2 = map.indexOf(input.charAt(i++));\r\n\t\t\t\tc1 = (e1 << 2) | (e2 >> 4);\r\n\t\t\t\to += String.fromCharCode(c1);\r\n\r\n\t\t\t\te3 = map.indexOf(input.charAt(i++));\r\n\t\t\t\tc2 = ((e2 & 15) << 4) | (e3 >> 2);\r\n\t\t\t\tif (e3 !== 64) { o += String.fromCharCode(c2); }\r\n\r\n\t\t\t\te4 = map.indexOf(input.charAt(i++));\r\n\t\t\t\tc3 = ((e3 & 3) << 6) | e4;\r\n\t\t\t\tif (e4 !== 64) { o += String.fromCharCode(c3); }\r\n\t\t\t}\r\n\t\t\treturn o;\r\n\t\t}\r\n\t};\r\n})();\r\nvar has_buf = (typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && process.versions.node);\r\n\r\nfunction new_raw_buf(len) {\r\n\t/* jshint -W056 */\r\n\t// $FlowIgnore\r\n\treturn new (has_buf ? Buffer : Array)(len);\r\n\t/* jshint +W056 */\r\n}\r\n\r\nfunction s2a(s) {\r\n\tif(has_buf) return new Buffer(s, \"binary\");\r\n\treturn s.split(\"\").map(function(x){ return x.charCodeAt(0) & 0xff; });\r\n}\r\n\r\nfunction s2ab(s) {\r\n\tif(typeof ArrayBuffer === 'undefined') return s2a(s);\r\n\tvar buf = new ArrayBuffer(s.length), view = new Uint8Array(buf);\r\n\tfor (var i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n\treturn buf;\r\n}\r\n\r\nfunction a2s(data) {\r\n\tif(Array.isArray(data)) return data.map(_chr).join(\"\");\r\n\tvar o = []; for(var i = 0; i < data.length; ++i) o[i] = _chr(data[i]); return o.join(\"\");\r\n}\r\n\r\nfunction a2u(data) {\r\n\tif(typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\r\n\treturn new Uint8Array(data);\r\n}\r\n\r\nfunction ab2a(data) {\r\n\tif(typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\r\n\tif(data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\r\nvar o = new Array(data.length);\r\n\tfor(var i = 0; i < data.length; ++i) o[i] = data[i];\r\n\treturn o;\r\n}\r\n\r\nvar bconcat = function(bufs) { return [].concat.apply([], bufs); };\r\n\r\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\r\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\r\n/*jshint -W041 */\r\nvar SSF = ({});\r\nvar make_ssf = function make_ssf(SSF){\r\nSSF.version = '0.10.2';\r\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\r\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\r\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\r\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\r\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\r\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\r\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\r\nvar p2_32 = Math.pow(2,32);\r\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\r\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\r\nvar days = [\r\n\t['Sun', 'Sunday'],\r\n\t['Mon', 'Monday'],\r\n\t['Tue', 'Tuesday'],\r\n\t['Wed', 'Wednesday'],\r\n\t['Thu', 'Thursday'],\r\n\t['Fri', 'Friday'],\r\n\t['Sat', 'Saturday']\r\n];\r\nvar months = [\r\n\t['J', 'Jan', 'January'],\r\n\t['F', 'Feb', 'February'],\r\n\t['M', 'Mar', 'March'],\r\n\t['A', 'Apr', 'April'],\r\n\t['M', 'May', 'May'],\r\n\t['J', 'Jun', 'June'],\r\n\t['J', 'Jul', 'July'],\r\n\t['A', 'Aug', 'August'],\r\n\t['S', 'Sep', 'September'],\r\n\t['O', 'Oct', 'October'],\r\n\t['N', 'Nov', 'November'],\r\n\t['D', 'Dec', 'December']\r\n];\r\nfunction init_table(t) {\r\n\tt[0]=  'General';\r\n\tt[1]=  '0';\r\n\tt[2]=  '0.00';\r\n\tt[3]=  '#,##0';\r\n\tt[4]=  '#,##0.00';\r\n\tt[9]=  '0%';\r\n\tt[10]= '0.00%';\r\n\tt[11]= '0.00E+00';\r\n\tt[12]= '# ?/?';\r\n\tt[13]= '# ??/??';\r\n\tt[14]= 'm/d/yy';\r\n\tt[15]= 'd-mmm-yy';\r\n\tt[16]= 'd-mmm';\r\n\tt[17]= 'mmm-yy';\r\n\tt[18]= 'h:mm AM/PM';\r\n\tt[19]= 'h:mm:ss AM/PM';\r\n\tt[20]= 'h:mm';\r\n\tt[21]= 'h:mm:ss';\r\n\tt[22]= 'm/d/yy h:mm';\r\n\tt[37]= '#,##0 ;(#,##0)';\r\n\tt[38]= '#,##0 ;[Red](#,##0)';\r\n\tt[39]= '#,##0.00;(#,##0.00)';\r\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\r\n\tt[45]= 'mm:ss';\r\n\tt[46]= '[h]:mm:ss';\r\n\tt[47]= 'mmss.0';\r\n\tt[48]= '##0.0E+0';\r\n\tt[49]= '@';\r\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\r\n\tt[65535]= 'General';\r\n}\r\n\r\nvar table_fmt = {};\r\ninit_table(table_fmt);\r\nfunction frac(x, D, mixed) {\r\n\tvar sgn = x < 0 ? -1 : 1;\r\n\tvar B = x * sgn;\r\n\tvar P_2 = 0, P_1 = 1, P = 0;\r\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\r\n\tvar A = Math.floor(B);\r\n\twhile(Q_1 < D) {\r\n\t\tA = Math.floor(B);\r\n\t\tP = A * P_1 + P_2;\r\n\t\tQ = A * Q_1 + Q_2;\r\n\t\tif((B - A) < 0.00000005) break;\r\n\t\tB = 1 / (B - A);\r\n\t\tP_2 = P_1; P_1 = P;\r\n\t\tQ_2 = Q_1; Q_1 = Q;\r\n\t}\r\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\r\n\tif(!mixed) return [0, sgn * P, Q];\r\n\tvar q = Math.floor(sgn * P/Q);\r\n\treturn [q, sgn*P - q*Q, Q];\r\n}\r\nfunction parse_date_code(v,opts,b2) {\r\n\tif(v > 2958465 || v < 0) return null;\r\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\r\n\tvar dout=[];\r\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\r\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\r\n\tif(opts && opts.date1904) date += 1462;\r\n\tif(out.u > 0.9999) {\r\n\t\tout.u = 0;\r\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\r\n\t}\r\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\r\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\r\n\telse {\r\n\t\tif(date > 60) --date;\r\n\t\t/* 1 = Jan 1 1900 in Gregorian */\r\n\t\tvar d = new Date(1900, 0, 1);\r\n\t\td.setDate(d.getDate() + date - 1);\r\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\r\n\t\tdow = d.getDay();\r\n\t\tif(date < 60) dow = (dow + 6) % 7;\r\n\t\tif(b2) dow = fix_hijri(d, dout);\r\n\t}\r\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\r\n\tout.S = time % 60; time = Math.floor(time / 60);\r\n\tout.M = time % 60; time = Math.floor(time / 60);\r\n\tout.H = time;\r\n\tout.q = dow;\r\n\treturn out;\r\n}\r\nSSF.parse_date_code = parse_date_code;\r\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\r\nvar dnthresh = basedate.getTime();\r\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\r\nfunction datenum_local(v, date1904) {\r\n\tvar epoch = v.getTime();\r\n\tif(date1904) epoch -= 1461*24*60*60*1000;\r\n\telse if(v >= base1904) epoch += 24*60*60*1000;\r\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\r\n}\r\nfunction general_fmt_int(v) { return v.toString(10); }\r\nSSF._general_int = general_fmt_int;\r\nvar general_fmt_num = (function make_general_fmt_num() {\r\nvar gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\r\nfunction gfn2(v) {\r\n\tvar w = (v<0?12:11);\r\n\tvar o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\r\n\to = v.toPrecision(10); if(o.length <= w) return o;\r\n\treturn v.toExponential(5);\r\n}\r\nfunction gfn3(v) {\r\n\tvar o = v.toFixed(11).replace(gnr1,\".$1\");\r\n\tif(o.length > (v<0?12:11)) o = v.toPrecision(6);\r\n\treturn o;\r\n}\r\nfunction gfn4(o) {\r\n\tfor(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\r\n\treturn o;\r\n}\r\nfunction gfn5(o) {\r\n\treturn o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\r\n}\r\nreturn function general_fmt_num(v) {\r\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\r\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\r\n\telse if(Math.abs(V) <= 9) o = gfn2(v);\r\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\r\n\telse o = gfn3(v);\r\n\treturn gfn5(gfn4(o));\r\n};})();\r\nSSF._general_num = general_fmt_num;\r\nfunction general_fmt(v, opts) {\r\n\tswitch(typeof v) {\r\n\t\tcase 'string': return v;\r\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\r\n\t\tcase 'number': return (v|0) === v ? general_fmt_int(v) : general_fmt_num(v);\r\n\t\tcase 'undefined': return \"\";\r\n\t\tcase 'object':\r\n\t\t\tif(v == null) return \"\";\r\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\r\n\t}\r\n\tthrow new Error(\"unsupported value in General format: \" + v);\r\n}\r\nSSF._general = general_fmt;\r\nfunction fix_hijri() { return 0; }\r\n/*jshint -W086 */\r\nfunction write_date(type, fmt, val, ss0) {\r\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\r\n\tswitch(type) {\r\n\t\tcase 98: /* 'b' buddhist year */\r\n\t\t\ty = val.y + 543;\r\n\t\t\t/* falls through */\r\n\t\tcase 121: /* 'y' year */\r\n\t\tswitch(fmt.length) {\r\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\r\n\t\t\tdefault: out = y % 10000; outl = 4; break;\r\n\t\t} break;\r\n\t\tcase 109: /* 'm' month */\r\n\t\tswitch(fmt.length) {\r\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\r\n\t\t\tcase 3: return months[val.m-1][1];\r\n\t\t\tcase 5: return months[val.m-1][0];\r\n\t\t\tdefault: return months[val.m-1][2];\r\n\t\t} break;\r\n\t\tcase 100: /* 'd' day */\r\n\t\tswitch(fmt.length) {\r\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\r\n\t\t\tcase 3: return days[val.q][0];\r\n\t\t\tdefault: return days[val.q][1];\r\n\t\t} break;\r\n\t\tcase 104: /* 'h' 12-hour */\r\n\t\tswitch(fmt.length) {\r\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\r\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\r\n\t\t} break;\r\n\t\tcase 72: /* 'H' 24-hour */\r\n\t\tswitch(fmt.length) {\r\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\r\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\r\n\t\t} break;\r\n\t\tcase 77: /* 'M' minutes */\r\n\t\tswitch(fmt.length) {\r\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\r\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\r\n\t\t} break;\r\n\t\tcase 115: /* 's' seconds */\r\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\r\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\r\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\r\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\r\n\t\t\tss = Math.round((tt)*(val.S + val.u));\r\n\t\t\tif(ss >= 60*tt) ss = 0;\r\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\r\n\t\t\to = pad0(ss,2 + ss0);\r\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\r\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\r\n\t\tcase 90: /* 'Z' absolute time */\r\n\t\tswitch(fmt) {\r\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\r\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\r\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\r\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\r\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\r\n\t\tcase 101: /* 'e' era */\r\n\t\t\tout = y; outl = 1;\r\n\t}\r\n\tif(outl > 0) return pad0(out, outl); else return \"\";\r\n}\r\n/*jshint +W086 */\r\nfunction commaify(s) {\r\n\tvar w = 3;\r\n\tif(s.length <= w) return s;\r\n\tvar j = (s.length % w), o = s.substr(0,j);\r\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\r\n\treturn o;\r\n}\r\nvar write_num = (function make_write_num(){\r\nvar pct1 = /%/g;\r\nfunction write_num_pct(type, fmt, val){\r\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\r\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\r\n}\r\nfunction write_num_cm(type, fmt, val){\r\n\tvar idx = fmt.length - 1;\r\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\r\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\r\n}\r\nfunction write_num_exp(fmt, val){\r\n\tvar o;\r\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\r\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\r\n\t\tif(val == 0) return \"0.0E+0\";\r\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\r\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\r\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\r\n\t\tif(ee < 0) ee += period;\r\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\r\n\t\tif(o.indexOf(\"e\") === -1) {\r\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\r\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\r\n\t\t\telse o += \"E+\" + (fakee - ee);\r\n\t\t\twhile(o.substr(0,2) === \"0.\") {\r\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\r\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\r\n\t\t\t}\r\n\t\t\to = o.replace(/\\+-/,\"-\");\r\n\t\t}\r\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\r\n\t} else o = val.toExponential(idx);\r\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\r\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\r\n\treturn o.replace(\"e\",\"E\");\r\n}\r\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\r\nfunction write_num_f1(r, aval, sign) {\r\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\r\n\tvar myn = (rr - base*den), myd = den;\r\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\r\n}\r\nfunction write_num_f2(r, aval, sign) {\r\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\r\n}\r\nvar dec1 = /^#*0*\\.([0#]+)/;\r\nvar closeparen = /\\).*[0#]/;\r\nvar phone = /\\(###\\) ###\\\\?-####/;\r\nfunction hashq(str) {\r\n\tvar o = \"\", cc;\r\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\r\n\t\tcase 35: break;\r\n\t\tcase 63: o+= \" \"; break;\r\n\t\tcase 48: o+= \"0\"; break;\r\n\t\tdefault: o+= String.fromCharCode(cc);\r\n\t}\r\n\treturn o;\r\n}\r\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\r\nfunction dec(val, d) {\r\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn Math.round((val-Math.floor(val))*Math.pow(10,d));\r\n}\r\nfunction carry(val, d) {\r\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n}\r\nfunction flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\r\nfunction write_num_flt(type, fmt, val) {\r\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\r\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\r\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\r\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\r\n\t}\r\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\r\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\r\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\r\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\r\n\tvar o;\r\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\r\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\r\n\tif(fmt.match(/^[#?]+$/)) {\r\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\r\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\r\n\t}\r\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\r\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\r\n\tif((r = fmt.match(dec1))) {\r\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\r\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\r\n\t}\r\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\r\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\r\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\r\n\t}\r\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\r\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\r\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\r\n\t}\r\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\r\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\r\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\r\n\t\tri = 0;\r\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\r\n\t}\r\n\tif(fmt.match(phone)) {\r\n\t\to = write_num_flt(type, \"##########\", val);\r\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\r\n\t}\r\n\tvar oa = \"\";\r\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\r\n\t\tri = Math.min(r[4].length,7);\r\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\r\n\t\to = \"\" + sign;\r\n\t\toa = write_num(\"n\", r[1], ff[1]);\r\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\r\n\t\to += oa + r[2] + \"/\" + r[3];\r\n\t\toa = rpad_(ff[2],ri);\r\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\r\n\t\to += oa;\r\n\t\treturn o;\r\n\t}\r\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\r\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\r\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\r\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\r\n\t}\r\n\tif((r = fmt.match(/^[#0?]+$/))) {\r\n\t\to = pad0r(val, 0);\r\n\t\tif(fmt.length <= o.length) return o;\r\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\r\n\t}\r\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\r\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\r\n\t\tri = o.indexOf(\".\");\r\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\r\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\r\n\t}\r\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\r\n\t\tri = dec(val, r[1].length);\r\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\r\n\t}\r\n\tswitch(fmt) {\r\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\r\n\t\tcase \"###,###\":\r\n\t\tcase \"##,###\":\r\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\r\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\r\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\r\n\t\tdefault:\r\n\t}\r\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\r\n}\r\nfunction write_num_cm2(type, fmt, val){\r\n\tvar idx = fmt.length - 1;\r\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\r\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\r\n}\r\nfunction write_num_pct2(type, fmt, val){\r\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\r\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\r\n}\r\nfunction write_num_exp2(fmt, val){\r\n\tvar o;\r\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\r\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\r\n\t\tif(val == 0) return \"0.0E+0\";\r\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\r\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\r\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\r\n\t\tif(ee < 0) ee += period;\r\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\r\n\t\tif(!o.match(/[Ee]/)) {\r\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\r\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\r\n\t\t\telse o += \"E+\" + (fakee - ee);\r\n\t\t\to = o.replace(/\\+-/,\"-\");\r\n\t\t}\r\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\r\n\t} else o = val.toExponential(idx);\r\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\r\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\r\n\treturn o.replace(\"e\",\"E\");\r\n}\r\nfunction write_num_int(type, fmt, val) {\r\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\r\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\r\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\r\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\r\n\t}\r\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\r\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\r\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\r\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\r\n\tvar o;\r\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\r\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\r\n\tif(fmt.match(/^[#?]+$/)) {\r\n\t\to = (\"\"+val); if(val === 0) o = \"\";\r\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\r\n\t}\r\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\r\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\r\n\tif((r = fmt.match(dec1))) {\r\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\r\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\r\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\r\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\r\n\t}\r\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\r\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\r\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\r\n\t}\r\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\r\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\r\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\r\n\t}\r\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\r\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\r\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\r\n\t\tri = 0;\r\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\r\n\t}\r\n\tif(fmt.match(phone)) {\r\n\t\to = write_num_int(type, \"##########\", val);\r\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\r\n\t}\r\n\tvar oa = \"\";\r\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\r\n\t\tri = Math.min(r[4].length,7);\r\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\r\n\t\to = \"\" + sign;\r\n\t\toa = write_num(\"n\", r[1], ff[1]);\r\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\r\n\t\to += oa + r[2] + \"/\" + r[3];\r\n\t\toa = rpad_(ff[2],ri);\r\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\r\n\t\to += oa;\r\n\t\treturn o;\r\n\t}\r\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\r\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\r\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\r\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\r\n\t}\r\n\tif((r = fmt.match(/^[#0?]+$/))) {\r\n\t\to = \"\" + val;\r\n\t\tif(fmt.length <= o.length) return o;\r\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\r\n\t}\r\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\r\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\r\n\t\tri = o.indexOf(\".\");\r\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\r\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\r\n\t}\r\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\r\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\r\n\t}\r\n\tswitch(fmt) {\r\n\t\tcase \"###,###\":\r\n\t\tcase \"##,###\":\r\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\r\n\t\tdefault:\r\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\r\n\t}\r\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\r\n}\r\nreturn function write_num(type, fmt, val) {\r\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\r\n};})();\r\nfunction split_fmt(fmt) {\r\n\tvar out = [];\r\n\tvar in_str = false/*, cc*/;\r\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\r\n\t\tcase 34: /* '\"' */\r\n\t\t\tin_str = !in_str; break;\r\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\r\n\t\t\t++i; break;\r\n\t\tcase 59: /* ';' */\r\n\t\t\tout[out.length] = fmt.substr(j,i-j);\r\n\t\t\tj = i+1;\r\n\t}\r\n\tout[out.length] = fmt.substr(j);\r\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\r\n\treturn out;\r\n}\r\nSSF._split = split_fmt;\r\nvar abstime = /\\[[HhMmSs]*\\]/;\r\nfunction fmt_is_date(fmt) {\r\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\r\n\twhile(i < fmt.length) {\r\n\t\tswitch((c = fmt.charAt(i))) {\r\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\r\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) ++i; ++i; break;\r\n\t\t\tcase '\\\\': i+=2; break;\r\n\t\t\tcase '_': i+=2; break;\r\n\t\t\tcase '@': ++i; break;\r\n\t\t\tcase 'B': case 'b':\r\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\r\n\t\t\tcase 'A': case 'a':\r\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\r\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\r\n\t\t\t\t++i; break;\r\n\t\t\tcase '[':\r\n\t\t\t\to = c;\r\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\r\n\t\t\t\tif(o.match(abstime)) return true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '.':\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase '0': case '#':\r\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\r\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\r\n\t\t\tcase '(': case ')': ++i; break;\r\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\r\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\r\n\t\t\tcase ' ': ++i; break;\r\n\t\t\tdefault: ++i; break;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\nSSF.is_date = fmt_is_date;\r\nfunction eval_fmt(fmt, v, opts, flen) {\r\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\r\n\tvar hr='H';\r\n\t/* Tokenize */\r\n\twhile(i < fmt.length) {\r\n\t\tswitch((c = fmt.charAt(i))) {\r\n\t\t\tcase 'G': /* General */\r\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\r\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\r\n\t\t\tcase '\"': /* Literal text */\r\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\r\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\r\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\r\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\r\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\r\n\t\t\tcase '@': /* Text Placeholder */\r\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\r\n\t\t\tcase 'B': case 'b':\r\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\r\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\r\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\r\n\t\t\t\t}\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\r\n\t\t\t\tc = c.toLowerCase();\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\r\n\t\t\t\tif(v < 0) return \"\";\r\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\r\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\r\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\r\n\t\t\t\tif(c === 'h') c = hr;\r\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\r\n\t\t\tcase 'A': case 'a':\r\n\t\t\t\tvar q={t:c, v:c};\r\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\r\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\r\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\r\n\t\t\t\telse { q.t = \"t\"; ++i; }\r\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\r\n\t\t\t\tout[out.length] = q; lst = c; break;\r\n\t\t\tcase '[':\r\n\t\t\t\to = c;\r\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\r\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\r\n\t\t\t\tif(o.match(abstime)) {\r\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\r\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\r\n\t\t\t\t\tlst = o.charAt(1);\r\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\r\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\r\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t/* Numbers */\r\n\t\t\tcase '.':\r\n\t\t\t\tif(dt != null) {\r\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\r\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\r\n\t\t\t\t}\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase '0': case '#':\r\n\t\t\t\to = c; while((++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && i < fmt.length - 2 && \"0#\".indexOf(fmt.charAt(i+2))>-1)) o += c;\r\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\r\n\t\t\tcase '?':\r\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\r\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\r\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\r\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\r\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\r\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\r\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\r\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\r\n\t\t\tdefault:\r\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\r\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\r\n\t\t}\r\n\t}\r\n\tvar bt = 0, ss0 = 0, ssm;\r\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\r\n\t\tswitch(out[i].t) {\r\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\r\n\t\t\tcase 's':\r\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\r\n\t\t\t\tif(bt < 3) bt = 3;\r\n\t\t\t/* falls through */\r\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\r\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\r\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Z':\r\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\r\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\r\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\r\n\t\t}\r\n\t}\r\n\tswitch(bt) {\r\n\t\tcase 0: break;\r\n\t\tcase 1:\r\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\r\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\r\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\r\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\r\n\t\t\tbreak;\r\n\t}\r\n\t/* replace fields */\r\n\tvar nstr = \"\", jj;\r\n\tfor(i=0; i < out.length; ++i) {\r\n\t\tswitch(out[i].t) {\r\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\r\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\r\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\r\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\r\n\t\t\t\tout[i].t = 't'; break;\r\n\t\t\tcase 'n': case '(': case '?':\r\n\t\t\t\tjj = i+1;\r\n\t\t\t\twhile(out[jj] != null && (\r\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\r\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\r\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\r\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\r\n\t\t\t\t)) {\r\n\t\t\t\t\tout[i].v += out[jj].v;\r\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\r\n\t\t\t\t}\r\n\t\t\t\tnstr += out[i].v;\r\n\t\t\t\ti = jj-1; break;\r\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\r\n\t\t}\r\n\t}\r\n\tvar vv = \"\", myv, ostr;\r\n\tif(nstr.length > 0) {\r\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\r\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\r\n\t\t\tostr = write_num('(', nstr, myv);\r\n\t\t} else {\r\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\r\n\t\t\tostr = write_num('n', nstr, myv);\r\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\r\n\t\t\t\tostr = ostr.substr(1);\r\n\t\t\t\tout[0].v = \"-\" + out[0].v;\r\n\t\t\t}\r\n\t\t}\r\n\t\tjj=ostr.length-1;\r\n\t\tvar decpt = out.length;\r\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\r\n\t\tvar lasti=out.length;\r\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\r\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\r\n\t\t\t\tif(out[i] == null || 'n?('.indexOf(out[i].t) === -1) continue;\r\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\r\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\r\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\r\n\t\t\t\tout[i].t = 't';\r\n\t\t\t\tlasti = i;\r\n\t\t\t}\r\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\r\n\t\t}\r\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\r\n\t\t\tjj = ostr.indexOf(\".\")-1;\r\n\t\t\tfor(i=decpt; i>= 0; --i) {\r\n\t\t\t\tif(out[i] == null || 'n?('.indexOf(out[i].t) === -1) continue;\r\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\r\n\t\t\t\tvv = out[i].v.substr(j+1);\r\n\t\t\t\tfor(; j>=0; --j) {\r\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\r\n\t\t\t\t}\r\n\t\t\t\tout[i].v = vv;\r\n\t\t\t\tout[i].t = 't';\r\n\t\t\t\tlasti = i;\r\n\t\t\t}\r\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\r\n\t\t\tjj = ostr.indexOf(\".\")+1;\r\n\t\t\tfor(i=decpt; i<out.length; ++i) {\r\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\r\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\r\n\t\t\t\tvv = out[i].v.substr(0,j);\r\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\r\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\r\n\t\t\t\t}\r\n\t\t\t\tout[i].v = vv;\r\n\t\t\t\tout[i].t = 't';\r\n\t\t\t\tlasti = i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n(?'.indexOf(out[i].t)>-1) {\r\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\r\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\r\n\t\tout[i].t = 't';\r\n\t}\r\n\tvar retval = \"\";\r\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\r\n\treturn retval;\r\n}\r\nSSF._eval = eval_fmt;\r\nvar cfregex = /\\[[=<>]/;\r\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\r\nfunction chkcond(v, rr) {\r\n\tif(rr == null) return false;\r\n\tvar thresh = parseFloat(rr[2]);\r\n\tswitch(rr[1]) {\r\n\t\tcase \"=\":  if(v == thresh) return true; break;\r\n\t\tcase \">\":  if(v >  thresh) return true; break;\r\n\t\tcase \"<\":  if(v <  thresh) return true; break;\r\n\t\tcase \"<>\": if(v != thresh) return true; break;\r\n\t\tcase \">=\": if(v >= thresh) return true; break;\r\n\t\tcase \"<=\": if(v <= thresh) return true; break;\r\n\t}\r\n\treturn false;\r\n}\r\nfunction choose_fmt(f, v) {\r\n\tvar fmt = split_fmt(f);\r\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\r\n\tif(l<4 && lat>-1) --l;\r\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\r\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\r\n\tswitch(fmt.length) {\r\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\r\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\r\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\r\n\t\tcase 4: break;\r\n\t}\r\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\r\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\r\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\r\n\t\tvar m1 = fmt[0].match(cfregex2);\r\n\t\tvar m2 = fmt[1].match(cfregex2);\r\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\r\n\t}\r\n\treturn [l, ff];\r\n}\r\nfunction format(fmt,v,o) {\r\n\tif(o == null) o = {};\r\n\tvar sfmt = \"\";\r\n\tswitch(typeof fmt) {\r\n\t\tcase \"string\":\r\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\r\n\t\t\telse sfmt = fmt;\r\n\t\t\tbreak;\r\n\t\tcase \"number\":\r\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\r\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\r\n\t\t\tbreak;\r\n\t}\r\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\r\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\r\n\tvar f = choose_fmt(sfmt, v);\r\n\tif(isgeneral(f[1])) return general_fmt(v, o);\r\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\r\n\telse if(v === \"\" || v == null) return \"\";\r\n\treturn eval_fmt(f[1], v, o, f[0]);\r\n}\r\nfunction load_entry(fmt, idx) {\r\n\tif(typeof idx != 'number') {\r\n\t\tidx = +idx || -1;\r\nfor(var i = 0; i < 0x0188; ++i) {\r\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\r\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\r\n\t\t}\r\nif(idx < 0) idx = 0x187;\r\n\t}\r\ntable_fmt[idx] = fmt;\r\n\treturn idx;\r\n}\r\nSSF.load = load_entry;\r\nSSF._table = table_fmt;\r\nSSF.get_table = function get_table() { return table_fmt; };\r\nSSF.load_table = function load_table(tbl) {\r\n\tfor(var i=0; i!=0x0188; ++i)\r\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\r\n};\r\nSSF.init_table = init_table;\r\nSSF.format = format;\r\n};\r\nmake_ssf(SSF);\r\n/* map from xlml named formats to SSF TODO: localize */\r\nvar XLMLFormatMap/*{[string]:string}*/ = ({\r\n\t\"General Number\": \"General\",\r\n\t\"General Date\": SSF._table[22],\r\n\t\"Long Date\": \"dddd, mmmm dd, yyyy\",\r\n\t\"Medium Date\": SSF._table[15],\r\n\t\"Short Date\": SSF._table[14],\r\n\t\"Long Time\": SSF._table[19],\r\n\t\"Medium Time\": SSF._table[18],\r\n\t\"Short Time\": SSF._table[20],\r\n\t\"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\r\n\t\"Fixed\": SSF._table[2],\r\n\t\"Standard\": SSF._table[4],\r\n\t\"Percent\": SSF._table[10],\r\n\t\"Scientific\": SSF._table[11],\r\n\t\"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\r\n\t\"True/False\": '\"True\";\"True\";\"False\";@',\r\n\t\"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\r\n});\r\n\r\nvar SSFImplicit/*{[number]:string}*/ = ({\r\n\t\"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\r\n\t\"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\r\n\t\"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\r\n\t\"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\r\n\t\"23\": 'General', \"24\": 'General', \"25\": 'General', \"26\": 'General',\r\n\t\"27\": 'm/d/yy', \"28\": 'm/d/yy', \"29\": 'm/d/yy', \"30\": 'm/d/yy', \"31\": 'm/d/yy',\r\n\t\"32\": 'h:mm:ss', \"33\": 'h:mm:ss', \"34\": 'h:mm:ss', \"35\": 'h:mm:ss',\r\n\t\"36\": 'm/d/yy',\r\n\t\"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\r\n\t\"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\r\n\t\"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\r\n\t\"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\r\n\t\"50\": 'm/d/yy', \"51\": 'm/d/yy', \"52\": 'm/d/yy', \"53\": 'm/d/yy', \"54\": 'm/d/yy',\r\n\t\"55\": 'm/d/yy', \"56\": 'm/d/yy', \"57\": 'm/d/yy', \"58\": 'm/d/yy',\r\n\t\"59\": '0',\r\n\t\"60\": '0.00',\r\n\t\"61\": '#,##0',\r\n\t\"62\": '#,##0.00',\r\n\t\"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\r\n\t\"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\r\n\t\"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\r\n\t\"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\r\n\t\"67\": '0%',\r\n\t\"68\": '0.00%',\r\n\t\"69\": '# ?/?',\r\n\t\"70\": '# ??/??',\r\n\t\"71\": 'm/d/yy',\r\n\t\"72\": 'm/d/yy',\r\n\t\"73\": 'd-mmm-yy',\r\n\t\"74\": 'd-mmm',\r\n\t\"75\": 'mmm-yy',\r\n\t\"76\": 'h:mm',\r\n\t\"77\": 'h:mm:ss',\r\n\t\"78\": 'm/d/yy h:mm',\r\n\t\"79\": 'mm:ss',\r\n\t\"80\": '[h]:mm:ss',\r\n\t\"81\": 'mmss.0'\r\n});\r\n\r\n/* dateNF parse TODO: move to SSF */\r\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\r\nfunction dateNF_regex(dateNF) {\r\n\tvar fmt = typeof dateNF == \"number\" ? SSF._table[dateNF] : dateNF;\r\n\tfmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\r\n\treturn new RegExp(\"^\" + fmt + \"$\");\r\n}\r\nfunction dateNF_fix(str, dateNF, match) {\r\n\tvar Y = -1, m = -1, d = -1, H = -1, M = -1, S = -1;\r\n\t(dateNF.match(dateNFregex)||[]).forEach(function(n, i) {\r\n\t\tvar v = parseInt(match[i+1], 10);\r\n\t\tswitch(n.toLowerCase().charAt(0)) {\r\n\t\t\tcase 'y': Y = v; break; case 'd': d = v; break;\r\n\t\t\tcase 'h': H = v; break; case 's': S = v; break;\r\n\t\t\tcase 'm': if(H >= 0) M = v; else m = v; break;\r\n\t\t}\r\n\t});\r\n\tif(S >= 0 && M == -1 && m >= 0) { M = m; m = -1; }\r\n\tvar datestr = ((\"\" + (Y>=0?Y: new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m>=1?m:1)).slice(-2) + \"-\" + (\"00\" + (d>=1?d:1)).slice(-2));\r\n\tif(datestr.length == 7) datestr = \"0\" + datestr;\r\n\tif(datestr.length == 8) datestr = \"20\" + datestr;\r\n\tvar timestr = ((\"00\" + (H>=0?H:0)).slice(-2) + \":\" + (\"00\" + (M>=0?M:0)).slice(-2) + \":\" + (\"00\" + (S>=0?S:0)).slice(-2));\r\n\tif(H == -1 && M == -1 && S == -1) return datestr;\r\n\tif(Y == -1 && m == -1 && d == -1) return timestr;\r\n\treturn datestr + \"T\" + timestr;\r\n}\r\n\r\nvar DO_NOT_EXPORT_CFB = true;\r\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\r\n/* vim: set ts=2: */\r\n/*jshint eqnull:true */\r\n/*exported CFB */\r\n/*global module, require:false, process:false, Buffer:false, Uint8Array:false */\r\n\r\n/* [MS-CFB] v20171201 */\r\nvar CFB = (function _CFB(){\r\nvar exports = {};\r\nexports.version = '1.0.5';\r\n/* [MS-CFB] 2.6.4 */\r\nfunction namecmp(l, r) {\r\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\r\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\r\n\t\tif((c = L[i].length - R[i].length)) return c;\r\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\r\n\t}\r\n\treturn L.length - R.length;\r\n}\r\nfunction dirname(p) {\r\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\r\n\tvar c = p.lastIndexOf(\"/\");\r\n\treturn (c === -1) ? p : p.slice(0, c+1);\r\n}\r\n\r\nfunction filename(p) {\r\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\r\n\tvar c = p.lastIndexOf(\"/\");\r\n\treturn (c === -1) ? p : p.slice(c+1);\r\n}\r\nvar fs;\r\nfunction get_fs() { return fs || (fs = require('fs')); }\r\nfunction parse(file, options) {\r\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\r\nvar mver = 3;\r\nvar ssz = 512;\r\nvar nmfs = 0; // number of mini FAT sectors\r\nvar difat_sec_cnt = 0;\r\nvar dir_start = 0;\r\nvar minifat_start = 0;\r\nvar difat_start = 0;\r\n\r\nvar fat_addrs = []; // locations of FAT sectors\r\n\r\n/* [MS-CFB] 2.2 Compound File Header */\r\nvar blob = file.slice(0,512);\r\nprep_blob(blob, 0);\r\n\r\n/* major version */\r\nvar mv = check_get_mver(blob);\r\nmver = mv[0];\r\nswitch(mver) {\r\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\r\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\r\n}\r\n\r\n/* reprocess header */\r\nif(ssz !== 512) { blob = file.slice(0,ssz); prep_blob(blob, 28 /* blob.l */); }\r\n/* Save header for final object */\r\nvar header = file.slice(0,ssz);\r\n\r\ncheck_shifts(blob, mver);\r\n\r\n// Number of Directory Sectors\r\nvar dir_cnt = blob.read_shift(4, 'i');\r\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\r\n\r\n// Number of FAT Sectors\r\nblob.l += 4;\r\n\r\n// First Directory Sector Location\r\ndir_start = blob.read_shift(4, 'i');\r\n\r\n// Transaction Signature\r\nblob.l += 4;\r\n\r\n// Mini Stream Cutoff Size\r\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\r\n\r\n// First Mini FAT Sector Location\r\nminifat_start = blob.read_shift(4, 'i');\r\n\r\n// Number of Mini FAT Sectors\r\nnmfs = blob.read_shift(4, 'i');\r\n\r\n// First DIFAT sector location\r\ndifat_start = blob.read_shift(4, 'i');\r\n\r\n// Number of DIFAT Sectors\r\ndifat_sec_cnt = blob.read_shift(4, 'i');\r\n\r\n// Grab FAT Sector Locations\r\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\r\n\tq = blob.read_shift(4, 'i');\r\n\tif(q<0) break;\r\n\tfat_addrs[j] = q;\r\n}\r\n\r\n/** Break the file up into sectors */\r\nvar sectors = sectorify(file, ssz);\r\n\r\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\r\n\r\n/** Chains */\r\nvar sector_list = make_sector_list(sectors, dir_start, fat_addrs, ssz);\r\n\r\nsector_list[dir_start].name = \"!Directory\";\r\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\r\nsector_list[fat_addrs[0]].name = \"!FAT\";\r\nsector_list.fat_addrs = fat_addrs;\r\nsector_list.ssz = ssz;\r\n\r\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\r\nvar files = {}, Paths = [], FileIndex = [], FullPaths = [];\r\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\r\n\r\nbuild_full_paths(FileIndex, FullPaths, Paths);\r\nPaths.shift();\r\n\r\nvar o = {\r\n\tFileIndex: FileIndex,\r\n\tFullPaths: FullPaths\r\n};\r\n\r\n// $FlowIgnore\r\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\r\nreturn o;\r\n} // parse\r\n\r\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\r\nfunction check_get_mver(blob) {\r\n\t// header signature 8\r\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\r\n\r\n\t// clsid 16\r\n\tblob.chk(HEADER_CLSID, 'CLSID: ');\r\n\r\n\t// minor version 2\r\n\tvar mver = blob.read_shift(2, 'u');\r\n\r\n\treturn [blob.read_shift(2,'u'), mver];\r\n}\r\nfunction check_shifts(blob, mver) {\r\n\tvar shift = 0x09;\r\n\r\n\t// Byte Order\r\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\r\n\tblob.l += 2;\r\n\r\n\t// Sector Shift\r\n\tswitch((shift = blob.read_shift(2))) {\r\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\r\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\r\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\r\n\t}\r\n\r\n\t// Mini Sector Shift\r\n\tblob.chk('0600', 'Mini Sector Shift: ');\r\n\r\n\t// Reserved\r\n\tblob.chk('000000000000', 'Reserved: ');\r\n}\r\n\r\n/** Break the file up into sectors */\r\nfunction sectorify(file, ssz) {\r\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\r\n\tvar sectors = [];\r\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\r\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\r\n\treturn sectors;\r\n}\r\n\r\n/* [MS-CFB] 2.6.4 Red-Black Tree */\r\nfunction build_full_paths(FI, FP, Paths) {\r\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\r\n\tvar dad = [], q = [];\r\n\r\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\r\n\r\n\tfor(; j < q.length; ++j) {\r\n\t\ti = q[j];\r\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\r\n\t\tif(dad[i] === i) {\r\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\r\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\r\n\t\t}\r\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\r\n\t\tif(L !== -1) { dad[L] = dad[i]; q.push(L); }\r\n\t\tif(R !== -1) { dad[R] = dad[i]; q.push(R); }\r\n\t}\r\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\r\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\r\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\r\n\t}\r\n\r\n\tfor(i=1; i < pl; ++i) {\r\n\t\tif(FI[i].type === 0 /* unknown */) continue;\r\n\t\tj = dad[i];\r\n\t\tif(j === 0) FP[i] = FP[0] + \"/\" + FP[i];\r\n\t\telse while(j !== 0 && j !== dad[j]) {\r\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\r\n\t\t\tj = dad[j];\r\n\t\t}\r\n\t\tdad[i] = 0;\r\n\t}\r\n\r\n\tFP[0] += \"/\";\r\n\tfor(i=1; i < pl; ++i) {\r\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\r\n\t}\r\n}\r\n\r\nfunction get_mfat_entry(entry, payload, mini) {\r\n\tvar start = entry.start, size = entry.size;\r\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size));\r\n\tvar o = [];\r\n\tvar idx = start;\r\n\twhile(mini && size > 0 && idx >= 0) {\r\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\r\n\t\tsize -= MSSZ;\r\n\t\tidx = __readInt32LE(mini, idx * 4);\r\n\t}\r\n\tif(o.length === 0) return (new_buf(0));\r\n\treturn (bconcat(o).slice(0, entry.size));\r\n}\r\n\r\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\r\n    DIFAT chains by storing the next sector number as the last 32 bits */\r\nfunction sleuth_fat(idx, cnt, sectors, ssz, fat_addrs) {\r\n\tvar q = ENDOFCHAIN;\r\n\tif(idx === ENDOFCHAIN) {\r\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\r\n\t} else if(idx !== -1 /*FREESECT*/) {\r\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\r\n\t\tif(!sector) return;\r\n\t\tfor(var i = 0; i < m; ++i) {\r\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\r\n\t\t\tfat_addrs.push(q);\r\n\t\t}\r\n\t\tsleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\r\n\t}\r\n}\r\n\r\n/** Follow the linked list of sectors for a given starting point */\r\nfunction get_sector_list(sectors, start, fat_addrs, ssz, chkd) {\r\n\tvar buf = [], buf_chain = [];\r\n\tif(!chkd) chkd = [];\r\n\tvar modulus = ssz - 1, j = 0, jj = 0;\r\n\tfor(j=start; j>=0;) {\r\n\t\tchkd[j] = true;\r\n\t\tbuf[buf.length] = j;\r\n\t\tbuf_chain.push(sectors[j]);\r\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\r\n\t\tjj = ((j*4) & modulus);\r\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\r\n\t\tif(!sectors[addr]) break;\r\n\t\tj = __readInt32LE(sectors[addr], jj);\r\n\t}\r\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\r\n}\r\n\r\n/** Chase down the sector linked lists */\r\nfunction make_sector_list(sectors, dir_start, fat_addrs, ssz) {\r\n\tvar sl = sectors.length, sector_list = ([]);\r\n\tvar chkd = [], buf = [], buf_chain = [];\r\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\r\n\tfor(i=0; i < sl; ++i) {\r\n\t\tbuf = ([]);\r\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\r\n\t\tif(chkd[k]) continue;\r\n\t\tbuf_chain = [];\r\n\t\tfor(j=k; j>=0;) {\r\n\t\t\tchkd[j] = true;\r\n\t\t\tbuf[buf.length] = j;\r\n\t\t\tbuf_chain.push(sectors[j]);\r\n\t\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\r\n\t\t\tjj = ((j*4) & modulus);\r\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\r\n\t\t\tif(!sectors[addr]) break;\r\n\t\t\tj = __readInt32LE(sectors[addr], jj);\r\n\t\t}\r\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])});\r\n\t}\r\n\treturn sector_list;\r\n}\r\n\r\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\r\nfunction read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, mini) {\r\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\r\n\tvar sector = sector_list[dir_start].data;\r\n\tvar i = 0, namelen = 0, name;\r\n\tfor(; i < sector.length; i+= 128) {\r\n\t\tvar blob = sector.slice(i, i+128);\r\n\t\tprep_blob(blob, 64);\r\n\t\tnamelen = blob.read_shift(2);\r\n\t\tname = __utf16le(blob,0,namelen-pl);\r\n\t\tPaths.push(name);\r\n\t\tvar o = ({\r\n\t\t\tname:  name,\r\n\t\t\ttype:  blob.read_shift(1),\r\n\t\t\tcolor: blob.read_shift(1),\r\n\t\t\tL:     blob.read_shift(4, 'i'),\r\n\t\t\tR:     blob.read_shift(4, 'i'),\r\n\t\t\tC:     blob.read_shift(4, 'i'),\r\n\t\t\tclsid: blob.read_shift(16),\r\n\t\t\tstate: blob.read_shift(4, 'i'),\r\n\t\t\tstart: 0,\r\n\t\t\tsize: 0\r\n\t\t});\r\n\t\tvar ctime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\r\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\r\n\t\tvar mtime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\r\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\r\n\t\to.start = blob.read_shift(4, 'i');\r\n\t\to.size = blob.read_shift(4, 'i');\r\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\r\n\t\tif(o.type === 5) { /* root */\r\n\t\t\tminifat_store = o.start;\r\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\r\n\t\t\t/*minifat_size = o.size;*/\r\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\r\n\t\t\to.storage = 'fat';\r\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\r\n\t\t\tsector_list[o.start].name = o.name;\r\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size));\r\n\t\t} else {\r\n\t\t\to.storage = 'minifat';\r\n\t\t\tif(o.size < 0) o.size = 0;\r\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\r\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(o.content) prep_blob(o.content, 0);\r\n\t\tfiles[name] = o;\r\n\t\tFileIndex.push(o);\r\n\t}\r\n}\r\n\r\nfunction read_date(blob, offset) {\r\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\r\n}\r\n\r\nfunction read_file(filename, options) {\r\n\tget_fs();\r\n\treturn parse(fs.readFileSync(filename), options);\r\n}\r\n\r\nfunction read(blob, options) {\r\n\tswitch(options && options.type || \"base64\") {\r\n\t\tcase \"file\": return read_file(blob, options);\r\n\t\tcase \"base64\": return parse(s2a(Base64.decode(blob)), options);\r\n\t\tcase \"binary\": return parse(s2a(blob), options);\r\n\t}\r\n\treturn parse(blob, options);\r\n}\r\n\r\nfunction init_cfb(cfb, opts) {\r\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\r\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\r\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\r\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\r\n\tif(cfb.FullPaths.length === 0) {\r\n\t\tcfb.FullPaths[0] = root + \"/\";\r\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 });\r\n\t}\r\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\r\n\tseed_cfb(cfb);\r\n}\r\nfunction seed_cfb(cfb) {\r\n\tvar nm = \"\\u0001Sh33tJ5\";\r\n\tif(CFB.find(cfb, \"/\" + nm)) return;\r\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\r\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }));\r\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\r\n\trebuild_cfb(cfb);\r\n}\r\nfunction rebuild_cfb(cfb, f) {\r\n\tinit_cfb(cfb);\r\n\tvar gc = false, s = false;\r\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\r\n\t\tvar _file = cfb.FileIndex[i];\r\n\t\tswitch(_file.type) {\r\n\t\t\tcase 0:\r\n\t\t\t\tif(s) gc = true;\r\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1: case 2: case 5:\r\n\t\t\t\ts = true;\r\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\r\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: gc = true; break;\r\n\t\t}\r\n\t}\r\n\tif(!gc && !f) return;\r\n\r\n\tvar now = new Date(1987, 1, 19), j = 0;\r\n\tvar data = [];\r\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\r\n\t\tif(cfb.FileIndex[i].type === 0) continue;\r\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\r\n\t}\r\n\tfor(i = 0; i < data.length; ++i) {\r\n\t\tvar dad = dirname(data[i][0]);\r\n\t\ts = false;\r\n\t\tfor(j = 0; j < data.length; ++j) if(data[j][0] === dad) s = true;\r\n\t\tif(!s) data.push([dad, ({\r\n\t\t\tname: filename(dad).replace(\"/\",\"\"),\r\n\t\t\ttype: 1,\r\n\t\t\tclsid: HEADER_CLSID,\r\n\t\t\tct: now, mt: now,\r\n\t\t\tcontent: null\r\n\t\t})]);\r\n\t}\r\n\r\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\r\n\tcfb.FullPaths = []; cfb.FileIndex = [];\r\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\r\n\tfor(i = 0; i < data.length; ++i) {\r\n\t\tvar elt = cfb.FileIndex[i];\r\n\t\tvar nm = cfb.FullPaths[i];\r\n\r\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\r\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\r\n\t\telt.size = elt.content ? elt.content.length : 0;\r\n\t\telt.start = 0;\r\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\r\n\t\tif(i === 0) {\r\n\t\t\telt.C = data.length > 1 ? 1 : -1;\r\n\t\t\telt.size = 0;\r\n\t\t\telt.type = 5;\r\n\t\t} else if(nm.slice(-1) == \"/\") {\r\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\r\n\t\t\telt.C = j >= data.length ? -1 : j;\r\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\r\n\t\t\telt.R = j >= data.length ? -1 : j;\r\n\t\t\telt.type = 1;\r\n\t\t} else {\r\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\r\n\t\t\telt.type = 2;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nfunction _write(cfb, options) {\r\n\tvar _opts = options || {};\r\n\trebuild_cfb(cfb);\r\n\tvar L = (function(cfb){\r\n\t\tvar mini_size = 0, fat_size = 0;\r\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\r\n\t\t\tvar file = cfb.FileIndex[i];\r\n\t\t\tif(!file.content) continue;\r\nvar flen = file.content.length;\r\n\t\t\tif(flen > 0){\r\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\r\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\r\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\r\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\r\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\r\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\r\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\r\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\r\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\r\n\t\tcfb.FileIndex[0].size = mini_size << 6;\r\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\r\n\t\treturn L;\r\n\t})(cfb);\r\n\tvar o = new_buf(L[7] << 9);\r\n\tvar i = 0, T = 0;\r\n\t{\r\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\r\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\r\n\t\to.write_shift(2, 0x003E);\r\n\t\to.write_shift(2, 0x0003);\r\n\t\to.write_shift(2, 0xFFFE);\r\n\t\to.write_shift(2, 0x0009);\r\n\t\to.write_shift(2, 0x0006);\r\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\r\n\t\to.write_shift(4, 0);\r\n\t\to.write_shift(4, L[2]);\r\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\r\n\t\to.write_shift(4, 0);\r\n\t\to.write_shift(4, 1<<12);\r\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\r\n\t\to.write_shift(4, L[3]);\r\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\r\n\t\to.write_shift(4, L[1]);\r\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\r\n\t}\r\n\tif(L[1]) {\r\n\t\tfor(T = 0; T < L[1]; ++T) {\r\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\r\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\r\n\t\t}\r\n\t}\r\n\tvar chainit = function(w) {\r\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\r\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\r\n\t};\r\n\tT = i = 0;\r\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\r\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\r\n\tchainit(L[3]);\r\n\tchainit(L[4]);\r\n\tvar j = 0, flen = 0;\r\n\tvar file = cfb.FileIndex[0];\r\n\tfor(; j < cfb.FileIndex.length; ++j) {\r\n\t\tfile = cfb.FileIndex[j];\r\n\t\tif(!file.content) continue;\r\nflen = file.content.length;\r\n\t\tif(flen < 0x1000) continue;\r\n\t\tfile.start = T;\r\n\t\tchainit((flen + 0x01FF) >> 9);\r\n\t}\r\n\tchainit((L[6] + 7) >> 3);\r\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\r\n\tT = i = 0;\r\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\r\n\t\tfile = cfb.FileIndex[j];\r\n\t\tif(!file.content) continue;\r\nflen = file.content.length;\r\n\t\tif(!flen || flen >= 0x1000) continue;\r\n\t\tfile.start = T;\r\n\t\tchainit((flen + 0x3F) >> 6);\r\n\t}\r\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\r\n\tfor(i = 0; i < L[4]<<2; ++i) {\r\n\t\tvar nm = cfb.FullPaths[i];\r\n\t\tif(!nm || nm.length === 0) {\r\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\r\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\r\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfile = cfb.FileIndex[i];\r\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\r\n\t\tvar _nm = (i === 0 && _opts.root) || file.name;\r\n\t\tflen = 2*(_nm.length+1);\r\n\t\to.write_shift(64, _nm, \"utf16le\");\r\n\t\to.write_shift(2, flen);\r\n\t\to.write_shift(1, file.type);\r\n\t\to.write_shift(1, file.color);\r\n\t\to.write_shift(-4, file.L);\r\n\t\to.write_shift(-4, file.R);\r\n\t\to.write_shift(-4, file.C);\r\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\r\n\t\telse o.write_shift(16, file.clsid, \"hex\");\r\n\t\to.write_shift(4, file.state || 0);\r\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\r\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\r\n\t\to.write_shift(4, file.start);\r\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\r\n\t}\r\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\r\n\t\tfile = cfb.FileIndex[i];\r\nif(file.size >= 0x1000) {\r\n\t\t\to.l = (file.start+1) << 9;\r\n\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\r\n\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\r\n\t\t}\r\n\t}\r\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\r\n\t\tfile = cfb.FileIndex[i];\r\nif(file.size > 0 && file.size < 0x1000) {\r\n\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\r\n\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\r\n\t\t}\r\n\t}\r\n\twhile(o.l < o.length) o.write_shift(1, 0);\r\n\treturn o;\r\n}\r\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\r\nfunction find(cfb, path) {\r\n\tvar UCFullPaths = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\r\n\tvar UCPaths = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\r\n\tvar k = false;\r\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\r\n\telse k = path.indexOf(\"/\") !== -1;\r\n\tvar UCPath = path.toUpperCase();\r\n\tvar w = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\r\n\tif(w !== -1) return cfb.FileIndex[w];\r\n\r\n\tvar m = !UCPath.match(chr1);\r\n\tUCPath = UCPath.replace(chr0,'');\r\n\tif(m) UCPath = UCPath.replace(chr1,'!');\r\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\r\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\r\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\r\n\t}\r\n\treturn null;\r\n}\r\n/** CFB Constants */\r\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\r\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\r\n/* 2.1 Compound File Sector Numbers and Types */\r\nvar ENDOFCHAIN = -2;\r\n/* 2.2 Compound File Header */\r\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\r\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\r\nvar HEADER_CLSID = '00000000000000000000000000000000';\r\nvar consts = {\r\n\t/* 2.1 Compund File Sector Numbers and Types */\r\n\tMAXREGSECT: -6,\r\n\tDIFSECT: -4,\r\n\tFATSECT: -3,\r\n\tENDOFCHAIN: ENDOFCHAIN,\r\n\tFREESECT: -1,\r\n\t/* 2.2 Compound File Header */\r\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\r\n\tHEADER_MINOR_VERSION: '3e00',\r\n\tMAXREGSID: -6,\r\n\tNOSTREAM: -1,\r\n\tHEADER_CLSID: HEADER_CLSID,\r\n\t/* 2.6.1 Compound File Directory Entry */\r\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\r\n};\r\n\r\nfunction write_file(cfb, filename, options) {\r\n\tget_fs();\r\n\tvar o = _write(cfb, options);\r\nfs.writeFileSync(filename, o);\r\n}\r\n\r\nfunction a2s(o) {\r\n\tvar out = new Array(o.length);\r\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\r\n\treturn out.join(\"\");\r\n}\r\n\r\nfunction write(cfb, options) {\r\n\tvar o = _write(cfb, options);\r\n\tswitch(options && options.type) {\r\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o)); return o;\r\n\t\tcase \"binary\": return a2s(o);\r\n\t\tcase \"base64\": return Base64.encode(a2s(o));\r\n\t}\r\n\treturn o;\r\n}\r\nfunction cfb_new(opts) {\r\n\tvar o = ({});\r\n\tinit_cfb(o, opts);\r\n\treturn o;\r\n}\r\n\r\nfunction cfb_add(cfb, name, content, opts) {\r\n\tinit_cfb(cfb);\r\n\tvar file = CFB.find(cfb, name);\r\n\tif(!file) {\r\n\t\tvar fpath = cfb.FullPaths[0];\r\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\r\n\t\telse {\r\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\r\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\r\n\t\t}\r\n\t\tfile = ({name: filename(name), type: 2});\r\n\t\tcfb.FileIndex.push(file);\r\n\t\tcfb.FullPaths.push(fpath);\r\n\t\tCFB.utils.cfb_gc(cfb);\r\n\t}\r\nfile.content = (content);\r\n\tfile.size = content ? content.length : 0;\r\n\tif(opts) {\r\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\r\n\t}\r\n\treturn file;\r\n}\r\n\r\nfunction cfb_del(cfb, name) {\r\n\tinit_cfb(cfb);\r\n\tvar file = CFB.find(cfb, name);\r\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\r\n\t\tcfb.FileIndex.splice(j, 1);\r\n\t\tcfb.FullPaths.splice(j, 1);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction cfb_mov(cfb, old_name, new_name) {\r\n\tinit_cfb(cfb);\r\n\tvar file = CFB.find(cfb, old_name);\r\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\r\n\t\tcfb.FileIndex[j].name = filename(new_name);\r\n\t\tcfb.FullPaths[j] = new_name;\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction cfb_gc(cfb) { rebuild_cfb(cfb, true); }\r\n\r\nexports.find = find;\r\nexports.read = read;\r\nexports.parse = parse;\r\nexports.write = write;\r\nexports.writeFile = write_file;\r\nexports.utils = {\r\n\tcfb_new: cfb_new,\r\n\tcfb_add: cfb_add,\r\n\tcfb_del: cfb_del,\r\n\tcfb_mov: cfb_mov,\r\n\tcfb_gc: cfb_gc,\r\n\tReadShift: ReadShift,\r\n\tCheckField: CheckField,\r\n\tprep_blob: prep_blob,\r\n\tbconcat: bconcat,\r\n\tconsts: consts\r\n};\r\n\r\nreturn exports;\r\n})();\r\n\r\nif(typeof require !== 'undefined' && typeof module !== 'undefined' && typeof DO_NOT_EXPORT_CFB === 'undefined') { module.exports = CFB; }\r\nvar _fs;\r\nif(typeof require !== 'undefined') try { _fs = require('fs'); } catch(e) {}\r\n\r\n/* normalize data for blob ctor */\r\nfunction blobify(data) {\r\n\tif(typeof data === \"string\") return s2ab(data);\r\n\tif(Array.isArray(data)) return a2u(data);\r\n\treturn data;\r\n}\r\n/* write or download file */\r\nfunction write_dl(fname, payload, enc) {\r\n\t/*global IE_SaveFile, Blob, navigator, saveAs, URL, document, File, chrome */\r\n\tif(typeof _fs !== 'undefined' && _fs.writeFileSync) return enc ? _fs.writeFileSync(fname, payload, enc) : _fs.writeFileSync(fname, payload);\r\n\tvar data = (enc == \"utf8\") ? utf8write(payload) : payload;\r\nif(typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\r\n\tif(typeof Blob !== 'undefined') {\r\n\t\tvar blob = new Blob([blobify(data)], {type:\"application/octet-stream\"});\r\nif(typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\r\nif(typeof saveAs !== 'undefined') return saveAs(blob, fname);\r\n\t\tif(typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\r\n\t\t\tvar url = URL.createObjectURL(blob);\r\nif(typeof chrome === 'object' && typeof (chrome.downloads||{}).download == \"function\") {\r\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\r\n\t\t\t\treturn chrome.downloads.download({ url: url, filename: fname, saveAs: true});\r\n\t\t\t}\r\n\t\t\tvar a = document.createElement(\"a\");\r\n\t\t\tif(a.download != null) {\r\na.download = fname; a.href = url; document.body.appendChild(a); a.click();\r\ndocument.body.removeChild(a);\r\n\t\t\t\tif(URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function() { URL.revokeObjectURL(url); }, 60000);\r\n\t\t\t\treturn url;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// $FlowIgnore\r\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\r\n\t\t// $FlowIgnore\r\n\t\tvar out = File(fname); out.open(\"w\"); out.encoding = \"binary\";\r\n\t\tif(Array.isArray(payload)) payload = a2s(payload);\r\n\t\tout.write(payload); out.close(); return payload;\r\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\r\n\tthrow new Error(\"cannot save file \" + fname);\r\n}\r\n\r\n/* read binary data from file */\r\nfunction read_binary(path) {\r\n\tif(typeof _fs !== 'undefined') return _fs.readFileSync(path);\r\n\t// $FlowIgnore\r\n\tif(typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try { // extendscript\r\n\t\t// $FlowIgnore\r\n\t\tvar infile = File(path); infile.open(\"r\"); infile.encoding = \"binary\";\r\n\t\tvar data = infile.read(); infile.close();\r\n\t\treturn data;\r\n\t} catch(e) { if(!e.message || !e.message.match(/onstruct/)) throw e; }\r\n\tthrow new Error(\"Cannot access file \" + path);\r\n}\r\nfunction keys(o) {\r\n\tvar ks = Object.keys(o), o2 = [];\r\n\tfor(var i = 0; i < ks.length; ++i) if(o.hasOwnProperty(ks[i])) o2.push(ks[i]);\r\n\treturn o2;\r\n}\r\n\r\nfunction evert_key(obj, key) {\r\n\tvar o = ([]), K = keys(obj);\r\n\tfor(var i = 0; i !== K.length; ++i) if(o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\r\n\treturn o;\r\n}\r\n\r\nfunction evert(obj) {\r\n\tvar o = ([]), K = keys(obj);\r\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\r\n\treturn o;\r\n}\r\n\r\nfunction evert_num(obj) {\r\n\tvar o = ([]), K = keys(obj);\r\n\tfor(var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i],10);\r\n\treturn o;\r\n}\r\n\r\nfunction evert_arr(obj) {\r\n\tvar o = ([]), K = keys(obj);\r\n\tfor(var i = 0; i !== K.length; ++i) {\r\n\t\tif(o[obj[K[i]]] == null) o[obj[K[i]]] = [];\r\n\t\to[obj[K[i]]].push(K[i]);\r\n\t}\r\n\treturn o;\r\n}\r\n\r\nvar basedate = new Date(1899, 11, 30, 0, 0, 0); // 2209161600000\r\nvar dnthresh = basedate.getTime() + (new Date().getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000;\r\nfunction datenum(v, date1904) {\r\n\tvar epoch = v.getTime();\r\n\tif(date1904) epoch -= 1462*24*60*60*1000;\r\n\treturn (epoch - dnthresh) / (24 * 60 * 60 * 1000);\r\n}\r\nfunction numdate(v) {\r\n\tvar out = new Date();\r\n\tout.setTime(v * 24 * 60 * 60 * 1000 + dnthresh);\r\n\treturn out;\r\n}\r\n\r\n/* ISO 8601 Duration */\r\nfunction parse_isodur(s) {\r\n\tvar sec = 0, mt = 0, time = false;\r\n\tvar m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\r\n\tif(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\r\n\tfor(var i = 1; i != m.length; ++i) {\r\n\t\tif(!m[i]) continue;\r\n\t\tmt = 1;\r\n\t\tif(i > 3) time = true;\r\n\t\tswitch(m[i].slice(m[i].length-1)) {\r\n\t\t\tcase 'Y':\r\n\t\t\t\tthrow new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length-1));\r\n\t\t\tcase 'D': mt *= 24;\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'H': mt *= 60;\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'M':\r\n\t\t\t\tif(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\r\n\t\t\t\telse mt *= 60;\r\n\t\t\t\t/* falls through */\r\n\t\t\tcase 'S': break;\r\n\t\t}\r\n\t\tsec += mt * parseInt(m[i], 10);\r\n\t}\r\n\treturn sec;\r\n}\r\n\r\nvar good_pd_date = new Date('2017-02-19T19:06:09.000Z');\r\nif(isNaN(good_pd_date.getFullYear())) good_pd_date = new Date('2/19/17');\r\nvar good_pd = good_pd_date.getFullYear() == 2017;\r\n/* parses a date as a local date */\r\nfunction parseDate(str, fixdate) {\r\n\tvar d = new Date(str);\r\n\tif(good_pd) {\r\nif(fixdate > 0) d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\r\n\t\telse if(fixdate < 0) d.setTime(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\r\n\t\treturn d;\r\n\t}\r\n\tif(str instanceof Date) return str;\r\n\tif(good_pd_date.getFullYear() == 1917 && !isNaN(d.getFullYear())) {\r\n\t\tvar s = d.getFullYear();\r\n\t\tif(str.indexOf(\"\" + s) > -1) return d;\r\n\t\td.setFullYear(d.getFullYear() + 100); return d;\r\n\t}\r\n\tvar n = str.match(/\\d+/g)||[\"2017\",\"2\",\"19\",\"0\",\"0\",\"0\"];\r\n\tvar out = new Date(+n[0], +n[1] - 1, +n[2], (+n[3]||0), (+n[4]||0), (+n[5]||0));\r\n\tif(str.indexOf(\"Z\") > -1) out = new Date(out.getTime() - out.getTimezoneOffset() * 60 * 1000);\r\n\treturn out;\r\n}\r\n\r\nfunction cc2str(arr) {\r\n\tvar o = \"\";\r\n\tfor(var i = 0; i != arr.length; ++i) o += String.fromCharCode(arr[i]);\r\n\treturn o;\r\n}\r\n\r\nfunction dup(o) {\r\n\tif(typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\r\n\tif(typeof o != 'object' || o == null) return o;\r\n\tif(o instanceof Date) return new Date(o.getTime());\r\n\tvar out = {};\r\n\tfor(var k in o) if(o.hasOwnProperty(k)) out[k] = dup(o[k]);\r\n\treturn out;\r\n}\r\n\r\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\r\n\r\n/* TODO: stress test */\r\nfunction fuzzynum(s) {\r\n\tvar v = Number(s);\r\n\tif(!isNaN(v)) return v;\r\n\tvar wt = 1;\r\n\tvar ss = s.replace(/([\\d]),([\\d])/g,\"$1$2\").replace(/[$]/g,\"\").replace(/[%]/g, function() { wt *= 100; return \"\";});\r\n\tif(!isNaN(v = Number(ss))) return v / wt;\r\n\tss = ss.replace(/[(](.*)[)]/,function($$, $1) { wt = -wt; return $1;});\r\n\tif(!isNaN(v = Number(ss))) return v / wt;\r\n\treturn v;\r\n}\r\nfunction fuzzydate(s) {\r\n\tvar o = new Date(s), n = new Date(NaN);\r\n\tvar y = o.getYear(), m = o.getMonth(), d = o.getDate();\r\n\tif(isNaN(d)) return n;\r\n\tif(y < 0 || y > 8099) return n;\r\n\tif((m > 0 || d > 1) && y != 101) return o;\r\n\tif(s.toLowerCase().match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) return o;\r\n\tif(s.match(/[^-0-9:,\\/\\\\]/)) return n;\r\n\treturn o;\r\n}\r\n\r\nvar safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\r\nfunction split_regex(str, re, def) {\r\n\tif(safe_split_regex || typeof re == \"string\") return str.split(re);\r\n\tvar p = str.split(re), o = [p[0]];\r\n\tfor(var i = 1; i < p.length; ++i) { o.push(def); o.push(p[i]); }\r\n\treturn o;\r\n}\r\nfunction getdatastr(data) {\r\n\tif(!data) return null;\r\n\tif(data.data) return debom(data.data);\r\n\tif(data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\r\n\tif(data.asBinary) return debom(data.asBinary());\r\n\tif(data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(),0)));\r\n\treturn null;\r\n}\r\n\r\nfunction getdatabin(data) {\r\n\tif(!data) return null;\r\n\tif(data.data) return char_codes(data.data);\r\n\tif(data.asNodeBuffer && has_buf) return data.asNodeBuffer();\r\n\tif(data._data && data._data.getContent) {\r\n\t\tvar o = data._data.getContent();\r\n\t\tif(typeof o == \"string\") return char_codes(o);\r\n\t\treturn Array.prototype.slice.call(o);\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nfunction getdata(data) { return (data && data.name.slice(-4) === \".bin\") ? getdatabin(data) : getdatastr(data); }\r\n\r\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\r\n/* OASIS does not comment on filename case sensitivity */\r\nfunction safegetzipfile(zip, file) {\r\n\tvar k = keys(zip.files);\r\n\tvar f = file.toLowerCase(), g = f.replace(/\\//g,'\\\\');\r\n\tfor(var i=0; i<k.length; ++i) {\r\n\t\tvar n = k[i].toLowerCase();\r\n\t\tif(f == n || g == n) return zip.files[k[i]];\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nfunction getzipfile(zip, file) {\r\n\tvar o = safegetzipfile(zip, file);\r\n\tif(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\r\n\treturn o;\r\n}\r\n\r\nfunction getzipdata(zip, file, safe) {\r\n\tif(!safe) return getdata(getzipfile(zip, file));\r\n\tif(!file) return null;\r\n\ttry { return getzipdata(zip, file); } catch(e) { return null; }\r\n}\r\n\r\nfunction getzipstr(zip, file, safe) {\r\n\tif(!safe) return getdatastr(getzipfile(zip, file));\r\n\tif(!file) return null;\r\n\ttry { return getzipstr(zip, file); } catch(e) { return null; }\r\n}\r\n\r\nfunction zipentries(zip) {\r\n\tvar k = keys(zip.files), o = [];\r\n\tfor(var i = 0; i < k.length; ++i) if(k[i].slice(-1) != '/') o.push(k[i]);\r\n\treturn o.sort();\r\n}\r\n\r\nvar jszip;\r\n/*global JSZipSync:true */\r\nif(typeof JSZipSync !== 'undefined') jszip = JSZipSync;\r\nif(typeof exports !== 'undefined') {\r\n\tif(typeof module !== 'undefined' && module.exports) {\r\n\t\tif(typeof jszip === 'undefined') jszip = require('./jszip.js');\r\n\t}\r\n}\r\n\r\nfunction resolve_path(path, base) {\r\n\tvar result = base.split('/');\r\n\tif(base.slice(-1) != \"/\") result.pop(); // folder path\r\n\tvar target = path.split('/');\r\n\twhile (target.length !== 0) {\r\n\t\tvar step = target.shift();\r\n\t\tif (step === '..') result.pop();\r\n\t\telse if (step !== '.') result.push(step);\r\n\t}\r\n\treturn result.join('/');\r\n}\r\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\r\nvar attregexg=/([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\r\nvar tagregex=/<[\\/\\?]?[a-zA-Z0-9:]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s?[\\/\\?]?>/g;\r\nif(!(XML_HEADER.match(tagregex))) tagregex = /<[^>]*>/g;\r\nvar nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\r\nfunction parsexmltag(tag, skip_root) {\r\n\tvar z = ({});\r\n\tvar eq = 0, c = 0;\r\n\tfor(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\r\n\tif(!skip_root) z[0] = tag.slice(0, eq);\r\n\tif(eq === tag.length) return z;\r\n\tvar m = tag.match(attregexg), j=0, v=\"\", i=0, q=\"\", cc=\"\", quot = 1;\r\n\tif(m) for(i = 0; i != m.length; ++i) {\r\n\t\tcc = m[i];\r\n\t\tfor(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\r\n\t\tq = cc.slice(0,c).trim();\r\n\t\twhile(cc.charCodeAt(c+1) == 32) ++c;\r\n\t\tquot = ((eq=cc.charCodeAt(c+1)) == 34 || eq == 39) ? 1 : 0;\r\n\t\tv = cc.slice(c+1+quot, cc.length-quot);\r\n\t\tfor(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\r\n\t\tif(j===q.length) {\r\n\t\t\tif(q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\r\n\t\t\tz[q] = v;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar k = (j===5 && q.slice(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.slice(j+1);\r\n\t\t\tif(z[k] && q.slice(j-3,j) == \"ext\") continue; // from ods\r\n\t\t\tz[k] = v;\r\n\t\t}\r\n\t}\r\n\treturn z;\r\n}\r\nfunction strip_ns(x) { return x.replace(nsregex2, \"<$1\"); }\r\n\r\nvar encodings = {\r\n\t'&quot;': '\"',\r\n\t'&apos;': \"'\",\r\n\t'&gt;': '>',\r\n\t'&lt;': '<',\r\n\t'&amp;': '&'\r\n};\r\nvar rencoding = evert(encodings);\r\n//var rencstr = \"&<>'\\\"\".split(\"\");\r\n\r\n// TODO: CP remap (need to read file version to determine OS)\r\nvar unescapexml = (function() {\r\n\t/* 22.4.2.4 bstr (Basic String) */\r\n\tvar encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/g, coderegex = /_x([\\da-fA-F]{4})_/g;\r\n\treturn function unescapexml(text) {\r\n\t\tvar s = text + '', i = s.indexOf(\"<![CDATA[\");\r\n\t\tif(i == -1) return s.replace(encregex, function($$, $1) { return encodings[$$]||String.fromCharCode(parseInt($1,$$.indexOf(\"x\")>-1?16:10))||$$; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\r\n\t\tvar j = s.indexOf(\"]]>\");\r\n\t\treturn unescapexml(s.slice(0, i)) + s.slice(i+9,j) + unescapexml(s.slice(j+3));\r\n\t};\r\n})();\r\n\r\nvar decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\r\nfunction escapexml(text){\r\n\tvar s = text + '';\r\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \"_\";});\r\n}\r\nfunction escapexmltag(text){ return escapexml(text).replace(/ /g,\"_x0020_\"); }\r\n\r\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\r\nfunction escapehtml(text){\r\n\tvar s = text + '';\r\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (\"000\"+s.charCodeAt(0).toString(16)).slice(-4) + \";\"; });\r\n}\r\n\r\nfunction escapexlml(text){\r\n\tvar s = text + '';\r\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(htmlcharegex,function(s) { return \"&#x\" + (s.charCodeAt(0).toString(16)).toUpperCase() + \";\"; });\r\n}\r\n\r\n/* TODO: handle codepages */\r\nvar xlml_fixstr = (function() {\r\n\tvar entregex = /&#(\\d+);/g;\r\n\tfunction entrepl($$,$1) { return String.fromCharCode(parseInt($1,10)); }\r\n\treturn function xlml_fixstr(str) { return str.replace(entregex,entrepl); };\r\n})();\r\nvar xlml_unfixstr = (function() {\r\n\treturn function xlml_unfixstr(str) { return str.replace(/(\\r\\n|[\\r\\n])/g,\"\\&#10;\"); };\r\n})();\r\n\r\nfunction parsexmlbool(value) {\r\n\tswitch(value) {\r\n\t\tcase 1: case true: case '1': case 'true': case 'TRUE': return true;\r\n\t\t/* case '0': case 'false': case 'FALSE':*/\r\n\t\tdefault: return false;\r\n\t}\r\n}\r\n\r\nvar utf8read = function utf8reada(orig) {\r\n\tvar out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\r\n\twhile (i < orig.length) {\r\n\t\tc = orig.charCodeAt(i++);\r\n\t\tif (c < 128) { out += String.fromCharCode(c); continue; }\r\n\t\td = orig.charCodeAt(i++);\r\n\t\tif (c>191 && c<224) { f = ((c & 31) << 6); f |= (d & 63); out += String.fromCharCode(f); continue; }\r\n\t\te = orig.charCodeAt(i++);\r\n\t\tif (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\r\n\t\tf = orig.charCodeAt(i++);\r\n\t\tw = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\r\n\t\tout += String.fromCharCode(0xD800 + ((w>>>10)&1023));\r\n\t\tout += String.fromCharCode(0xDC00 + (w&1023));\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nvar utf8write = function(orig) {\r\n\tvar out = [], i = 0, c = 0, d = 0;\r\n\twhile(i < orig.length) {\r\n\t\tc = orig.charCodeAt(i++);\r\n\t\tswitch(true) {\r\n\t\t\tcase c < 128: out.push(String.fromCharCode(c)); break;\r\n\t\t\tcase c < 2048:\r\n\t\t\t\tout.push(String.fromCharCode(192 + (c >> 6)));\r\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\r\n\t\t\t\tbreak;\r\n\t\t\tcase c >= 55296 && c < 57344:\r\n\t\t\t\tc -= 55296; d = orig.charCodeAt(i++) - 56320 + (c<<10);\r\n\t\t\t\tout.push(String.fromCharCode(240 + ((d >>18) & 7)));\r\n\t\t\t\tout.push(String.fromCharCode(144 + ((d >>12) & 63)));\r\n\t\t\t\tout.push(String.fromCharCode(128 + ((d >> 6) & 63)));\r\n\t\t\t\tout.push(String.fromCharCode(128 + (d & 63)));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tout.push(String.fromCharCode(224 + (c >> 12)));\r\n\t\t\t\tout.push(String.fromCharCode(128 + ((c >> 6) & 63)));\r\n\t\t\t\tout.push(String.fromCharCode(128 + (c & 63)));\r\n\t\t}\r\n\t}\r\n\treturn out.join(\"\");\r\n};\r\n\r\nif(has_buf) {\r\n\tvar utf8readb = function utf8readb(data) {\r\n\t\tvar out = new Buffer(2*data.length), w, i, j = 1, k = 0, ww=0, c;\r\n\t\tfor(i = 0; i < data.length; i+=j) {\r\n\t\t\tj = 1;\r\n\t\t\tif((c=data.charCodeAt(i)) < 128) w = c;\r\n\t\t\telse if(c < 224) { w = (c&31)*64+(data.charCodeAt(i+1)&63); j=2; }\r\n\t\t\telse if(c < 240) { w=(c&15)*4096+(data.charCodeAt(i+1)&63)*64+(data.charCodeAt(i+2)&63); j=3; }\r\n\t\t\telse { j = 4;\r\n\t\t\t\tw = (c & 7)*262144+(data.charCodeAt(i+1)&63)*4096+(data.charCodeAt(i+2)&63)*64+(data.charCodeAt(i+3)&63);\r\n\t\t\t\tw -= 65536; ww = 0xD800 + ((w>>>10)&1023); w = 0xDC00 + (w&1023);\r\n\t\t\t}\r\n\t\t\tif(ww !== 0) { out[k++] = ww&255; out[k++] = ww>>>8; ww = 0; }\r\n\t\t\tout[k++] = w%256; out[k++] = w>>>8;\r\n\t\t}\r\n\t\treturn out.slice(0,k).toString('ucs2');\r\n\t};\r\n\tvar corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\r\n\tif(utf8read(corpus) == utf8readb(corpus)) utf8read = utf8readb;\r\n\t// $FlowIgnore\r\n\tvar utf8readc = function utf8readc(data) { return Buffer(data, 'binary').toString('utf8'); };\r\n\tif(utf8read(corpus) == utf8readc(corpus)) utf8read = utf8readc;\r\n\r\n\tutf8write = function(data) { return new Buffer(data, 'utf8').toString(\"binary\"); };\r\n}\r\n\r\n// matches <foo>...</foo> extracts content\r\nvar matchtag = (function() {\r\n\tvar mtcache = ({});\r\n\treturn function matchtag(f,g) {\r\n\t\tvar t = f+\"|\"+(g||\"\");\r\n\t\tif(mtcache[t]) return mtcache[t];\r\n\t\treturn (mtcache[t] = new RegExp('<(?:\\\\w+:)?'+f+'(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?'+f+'>',((g||\"\"))));\r\n\t};\r\n})();\r\n\r\nvar htmldecode = (function() {\r\n\tvar entities = [\r\n\t\t['nbsp', ' '], ['middot', '·'],\r\n\t\t['quot', '\"'], ['apos', \"'\"], ['gt',   '>'], ['lt',   '<'], ['amp',  '&']\r\n\t].map(function(x) { return [new RegExp('&' + x[0] + ';', \"g\"), x[1]]; });\r\n\treturn function htmldecode(str) {\r\n\t\tvar o = str.trim().replace(/\\s+/g, \" \").replace(/<\\s*[bB][rR]\\s*\\/?>/g,\"\\n\").replace(/<[^>]*>/g,\"\");\r\n\t\tfor(var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\r\n\t\treturn o;\r\n\t};\r\n})();\r\n\r\nvar vtregex = (function(){ var vt_cache = {};\r\n\treturn function vt_regex(bt) {\r\n\t\tif(vt_cache[bt] !== undefined) return vt_cache[bt];\r\n\t\treturn (vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g') );\r\n};})();\r\nvar vtvregex = /<\\/?(?:vt:)?variant>/g, vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\r\nfunction parseVector(data, opts) {\r\n\tvar h = parsexmltag(data);\r\n\r\n\tvar matches = data.match(vtregex(h.baseType))||[];\r\n\tvar res = [];\r\n\tif(matches.length != h.size) {\r\n\t\tif(opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\r\n\t\treturn res;\r\n\t}\r\n\tmatches.forEach(function(x) {\r\n\t\tvar v = x.replace(vtvregex,\"\").match(vtmregex);\r\n\t\tif(v) res.push({v:utf8read(v[2]), t:v[1]});\r\n\t});\r\n\treturn res;\r\n}\r\n\r\nvar wtregex = /(^\\s|\\s$|\\n)/;\r\nfunction writetag(f,g) { return '<' + f + (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>'; }\r\n\r\nfunction wxt_helper(h) { return keys(h).map(function(k) { return \" \" + k + '=\"' + h[k] + '\"';}).join(\"\"); }\r\nfunction writextag(f,g,h) { return '<' + f + ((h != null) ? wxt_helper(h) : \"\") + ((g != null) ? (g.match(wtregex)?' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';}\r\n\r\nfunction write_w3cdtf(d, t) { try { return d.toISOString().replace(/\\.\\d*/,\"\"); } catch(e) { if(t) throw e; } return \"\"; }\r\n\r\nfunction write_vt(s) {\r\n\tswitch(typeof s) {\r\n\t\tcase 'string': return writextag('vt:lpwstr', s);\r\n\t\tcase 'number': return writextag((s|0)==s?'vt:i4':'vt:r8', String(s));\r\n\t\tcase 'boolean': return writextag('vt:bool',s?'true':'false');\r\n\t}\r\n\tif(s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\r\n\tthrow new Error(\"Unable to serialize \" + s);\r\n}\r\n\r\nvar XMLNS = ({\r\n\t'dc': 'http://purl.org/dc/elements/1.1/',\r\n\t'dcterms': 'http://purl.org/dc/terms/',\r\n\t'dcmitype': 'http://purl.org/dc/dcmitype/',\r\n\t'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\r\n\t'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\r\n\t'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\r\n\t'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\r\n\t'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\r\n\t'xsd': 'http://www.w3.org/2001/XMLSchema'\r\n});\r\n\r\nXMLNS.main = [\r\n\t'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n\t'http://purl.oclc.org/ooxml/spreadsheetml/main',\r\n\t'http://schemas.microsoft.com/office/excel/2006/main',\r\n\t'http://schemas.microsoft.com/office/excel/2006/2'\r\n];\r\n\r\nvar XLMLNS = ({\r\n\t'o':    'urn:schemas-microsoft-com:office:office',\r\n\t'x':    'urn:schemas-microsoft-com:office:excel',\r\n\t'ss':   'urn:schemas-microsoft-com:office:spreadsheet',\r\n\t'dt':   'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\r\n\t'mv':   'http://macVmlSchemaUri',\r\n\t'v':    'urn:schemas-microsoft-com:vml',\r\n\t'html': 'http://www.w3.org/TR/REC-html40'\r\n});\r\nfunction read_double_le(b, idx) {\r\n\tvar s = 1 - 2 * (b[idx + 7] >>> 7);\r\n\tvar e = ((b[idx + 7] & 0x7f) << 4) + ((b[idx + 6] >>> 4) & 0x0f);\r\n\tvar m = (b[idx+6]&0x0f);\r\n\tfor(var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\r\n\tif(e == 0x7ff) return m == 0 ? (s * Infinity) : NaN;\r\n\tif(e == 0) e = -1022;\r\n\telse { e -= 1023; m += Math.pow(2,52); }\r\n\treturn s * Math.pow(2, e - 52) * m;\r\n}\r\n\r\nfunction write_double_le(b, v, idx) {\r\n\tvar bs = ((((v < 0) || (1/v == -Infinity)) ? 1 : 0) << 7), e = 0, m = 0;\r\n\tvar av = bs ? (-v) : v;\r\n\tif(!isFinite(av)) { e = 0x7ff; m = isNaN(v) ? 0x6969 : 0; }\r\n\telse if(av == 0) e = m = 0;\r\n\telse {\r\n\t\te = Math.floor(Math.log(av) / Math.LN2);\r\n\t\tm = av * Math.pow(2, 52 - e);\r\n\t\tif((e <= -1023) && (!isFinite(m) || (m < Math.pow(2,52)))) { e = -1022; }\r\n\t\telse { m -= Math.pow(2,52); e+=1023; }\r\n\t}\r\n\tfor(var i = 0; i <= 5; ++i, m/=256) b[idx + i] = m & 0xff;\r\n\tb[idx + 6] = ((e & 0x0f) << 4) | (m & 0xf);\r\n\tb[idx + 7] = (e >> 4) | bs;\r\n}\r\n\r\nvar __toBuffer = function(bufs) { var x=[],w=10240; for(var i=0;i<bufs[0].length;++i) if(bufs[0][i]) for(var j=0,L=bufs[0][i].length;j<L;j+=w) x.push.apply(x, bufs[0][i].slice(j,j+w)); return x; };\r\nvar ___toBuffer = __toBuffer;\r\nvar __utf16le = function(b,s,e) { var ss=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\r\nvar ___utf16le = __utf16le;\r\nvar __hexlify = function(b,s,l) { var ss=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\r\nvar ___hexlify = __hexlify;\r\nvar __utf8 = function(b,s,e) { var ss=[]; for(var i=s; i<e; i++) ss.push(String.fromCharCode(__readUInt8(b,i))); return ss.join(\"\"); };\r\nvar ___utf8 = __utf8;\r\nvar __lpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\r\nvar ___lpstr = __lpstr;\r\nvar __cpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\r\nvar ___cpstr = __cpstr;\r\nvar __lpwstr = function(b,i) { var len = 2*__readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len-1) : \"\";};\r\nvar ___lpwstr = __lpwstr;\r\nvar __lpp4, ___lpp4;\r\n__lpp4 = ___lpp4 = function lpp4_(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf16le(b, i+4,i+4+len) : \"\";};\r\nvar __8lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? __utf8(b, i+4,i+4+len) : \"\";};\r\nvar ___8lpp4 = __8lpp4;\r\nvar __double, ___double;\r\n__double = ___double = function(b, idx) { return read_double_le(b, idx);};\r\nvar is_buf = function is_buf_a(a) { return Array.isArray(a); };\r\n\r\nif(has_buf) {\r\n\t__utf16le = function(b,s,e) { if(!Buffer.isBuffer(b)) return ___utf16le(b,s,e); return b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/; };\r\n\t__hexlify = function(b,s,l) { return Buffer.isBuffer(b) ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); };\r\n\t__lpstr = function lpstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\r\n\t__cpstr = function cpstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___cpstr(b, i); var len = b.readUInt32LE(i); return len > 0 ? b.toString('utf8',i+4,i+4+len-1) : \"\";};\r\n\t__lpwstr = function lpwstr_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpwstr(b, i); var len = 2*b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len-1);};\r\n\t__lpp4 = function lpp4_b(b, i) { if(!Buffer.isBuffer(b)) return ___lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf16le',i+4,i+4+len);};\r\n\t__8lpp4 = function lpp4_8b(b, i) { if(!Buffer.isBuffer(b)) return ___8lpp4(b, i); var len = b.readUInt32LE(i); return b.toString('utf8',i+4,i+4+len);};\r\n\t__utf8 = function utf8_b(b, s, e) { return (Buffer.isBuffer(b)) ? b.toString('utf8',s,e) : ___utf8(b,s,e); };\r\n\t__toBuffer = function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat(bufs[0]) : ___toBuffer(bufs);};\r\n\tbconcat = function(bufs) { return Buffer.isBuffer(bufs[0]) ? Buffer.concat(bufs) : [].concat.apply([], bufs); };\r\n\t__double = function double_(b, i) { if(Buffer.isBuffer(b)) return b.readDoubleLE(i); return ___double(b,i); };\r\n\tis_buf = function is_buf_b(a) { return Buffer.isBuffer(a) || Array.isArray(a); };\r\n}\r\n\r\n/* from js-xls */\r\nif(typeof cptable !== 'undefined') {\r\n\t__utf16le = function(b,s,e) { return cptable.utils.decode(1200, b.slice(s,e)).replace(chr0, ''); };\r\n\t__utf8 = function(b,s,e) { return cptable.utils.decode(65001, b.slice(s,e)); };\r\n\t__lpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(current_ansi, b.slice(i+4, i+4+len-1)) : \"\";};\r\n\t__cpstr = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(current_codepage, b.slice(i+4, i+4+len-1)) : \"\";};\r\n\t__lpwstr = function(b,i) { var len = 2*__readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(1200, b.slice(i+4,i+4+len-1)) : \"\";};\r\n\t__lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(1200, b.slice(i+4,i+4+len)) : \"\";};\r\n\t__8lpp4 = function(b,i) { var len = __readUInt32LE(b,i); return len > 0 ? cptable.utils.decode(65001, b.slice(i+4,i+4+len)) : \"\";};\r\n}\r\n\r\nvar __readUInt8 = function(b, idx) { return b[idx]; };\r\nvar __readUInt16LE = function(b, idx) { return (b[idx+1]*(1<<8))+b[idx]; };\r\nvar __readInt16LE = function(b, idx) { var u = (b[idx+1]*(1<<8))+b[idx]; return (u < 0x8000) ? u : ((0xffff - u + 1) * -1); };\r\nvar __readUInt32LE = function(b, idx) { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\r\nvar __readInt32LE = function(b, idx) { return (b[idx+3]<<24)|(b[idx+2]<<16)|(b[idx+1]<<8)|b[idx]; };\r\nvar __readInt32BE = function(b, idx) { return (b[idx]<<24)|(b[idx+1]<<16)|(b[idx+2]<<8)|b[idx+3]; };\r\n\r\nfunction ReadShift(size, t) {\r\n\tvar o=\"\", oI, oR, oo=[], w, vv, i, loc;\r\n\tswitch(t) {\r\n\t\tcase 'dbcs':\r\n\t\t\tloc = this.l;\r\n\t\t\tif(has_buf && Buffer.isBuffer(this)) o = this.slice(this.l, this.l+2*size).toString(\"utf16le\");\r\n\t\t\telse for(i = 0; i < size; ++i) { o+=String.fromCharCode(__readUInt16LE(this, loc)); loc+=2; }\r\n\t\t\tsize *= 2;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'utf8': o = __utf8(this, this.l, this.l + size); break;\r\n\t\tcase 'utf16le': size *= 2; o = __utf16le(this, this.l, this.l + size); break;\r\n\r\n\t\tcase 'wstr':\r\n\t\t\tif(typeof cptable !== 'undefined') o = cptable.utils.decode(current_codepage, this.slice(this.l, this.l+2*size));\r\n\t\t\telse return ReadShift.call(this, size, 'dbcs');\r\n\t\t\tsize = 2 * size; break;\r\n\r\n\t\t/* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\r\n\t\tcase 'lpstr-ansi': o = __lpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\r\n\t\tcase 'lpstr-cp': o = __cpstr(this, this.l); size = 4 + __readUInt32LE(this, this.l); break;\r\n\t\t/* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\r\n\t\tcase 'lpwstr': o = __lpwstr(this, this.l); size = 4 + 2 * __readUInt32LE(this, this.l); break;\r\n\t\t/* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\r\n\t\tcase 'lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __lpp4(this, this.l); if(size & 0x02) size += 2; break;\r\n\t\t/* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\r\n\t\tcase '8lpp4': size = 4 +  __readUInt32LE(this, this.l); o = __8lpp4(this, this.l); if(size & 0x03) size += 4 - (size & 0x03); break;\r\n\r\n\t\tcase 'cstr': size = 0; o = \"\";\r\n\t\t\twhile((w=__readUInt8(this, this.l + size++))!==0) oo.push(_getchar(w));\r\n\t\t\to = oo.join(\"\"); break;\r\n\t\tcase '_wstr': size = 0; o = \"\";\r\n\t\t\twhile((w=__readUInt16LE(this,this.l +size))!==0){oo.push(_getchar(w));size+=2;}\r\n\t\t\tsize+=2; o = oo.join(\"\"); break;\r\n\r\n\t\t/* sbcs and dbcs support continue records in the SST way TODO codepages */\r\n\t\tcase 'dbcs-cont': o = \"\"; loc = this.l;\r\n\t\t\tfor(i = 0; i < size; ++i) {\r\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\r\n\t\t\t\t\tw = __readUInt8(this, loc);\r\n\t\t\t\t\tthis.l = loc + 1;\r\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\r\n\t\t\t\t\treturn oo.join(\"\") + vv;\r\n\t\t\t\t}\r\n\t\t\t\too.push(_getchar(__readUInt16LE(this, loc)));\r\n\t\t\t\tloc+=2;\r\n\t\t\t} o = oo.join(\"\"); size *= 2; break;\r\n\r\n\t\tcase 'cpstr':\r\n\t\t\tif(typeof cptable !== 'undefined') {\r\n\t\t\t\to = cptable.utils.decode(current_codepage, this.slice(this.l, this.l + size));\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t/* falls through */\r\n\t\tcase 'sbcs-cont': o = \"\"; loc = this.l;\r\n\t\t\tfor(i = 0; i != size; ++i) {\r\n\t\t\t\tif(this.lens && this.lens.indexOf(loc) !== -1) {\r\n\t\t\t\t\tw = __readUInt8(this, loc);\r\n\t\t\t\t\tthis.l = loc + 1;\r\n\t\t\t\t\tvv = ReadShift.call(this, size-i, w ? 'dbcs-cont' : 'sbcs-cont');\r\n\t\t\t\t\treturn oo.join(\"\") + vv;\r\n\t\t\t\t}\r\n\t\t\t\too.push(_getchar(__readUInt8(this, loc)));\r\n\t\t\t\tloc+=1;\r\n\t\t\t} o = oo.join(\"\"); break;\r\n\r\n\t\tdefault:\r\n\tswitch(size) {\r\n\t\tcase 1: oI = __readUInt8(this, this.l); this.l++; return oI;\r\n\t\tcase 2: oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l); this.l += 2; return oI;\r\n\t\tcase 4: case -4:\r\n\t\t\tif(t === 'i' || ((this[this.l+3] & 0x80)===0)) { oI = ((size > 0) ? __readInt32LE : __readInt32BE)(this, this.l); this.l += 4; return oI; }\r\n\t\t\telse { oR = __readUInt32LE(this, this.l); this.l += 4; } return oR;\r\n\t\tcase 8: case -8:\r\n\t\t\tif(t === 'f') {\r\n\t\t\t\tif(size == 8) oR = __double(this, this.l);\r\n\t\t\t\telse oR = __double([this[this.l+7],this[this.l+6],this[this.l+5],this[this.l+4],this[this.l+3],this[this.l+2],this[this.l+1],this[this.l+0]], 0);\r\n\t\t\t\tthis.l += 8; return oR;\r\n\t\t\t} else size = 8;\r\n\t\t/* falls through */\r\n\t\tcase 16: o = __hexlify(this, this.l, size); break;\r\n\t}}\r\n\tthis.l+=size; return o;\r\n}\r\n\r\nvar __writeUInt32LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\r\nvar __writeInt32LE  = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\r\nvar __writeUInt16LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); };\r\n\r\nfunction WriteShift(t, val, f) {\r\n\tvar size = 0, i = 0;\r\n\tif(f === 'dbcs') {\r\nfor(i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\r\n\t\tsize = 2 * val.length;\r\n\t} else if(f === 'sbcs') {\r\n\t\t/* TODO: codepage */\r\nval = val.replace(/[^\\x00-\\x7F]/g, \"_\");\r\nfor(i = 0; i != val.length; ++i) this[this.l + i] = (val.charCodeAt(i) & 0xFF);\r\n\t\tsize = val.length;\r\n\t} else if(f === 'hex') {\r\n\t\tfor(; i < t; ++i) {\r\nthis[this.l++] = (parseInt(val.slice(2*i, 2*i+2), 16)||0);\r\n\t\t} return this;\r\n\t} else if(f === 'utf16le') {\r\nvar end = Math.min(this.l + t, this.length);\r\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\r\n\t\t\t\tvar cc = val.charCodeAt(i);\r\n\t\t\t\tthis[this.l++] = (cc & 0xff);\r\n\t\t\t\tthis[this.l++] = (cc >> 8);\r\n\t\t\t}\r\n\t\t\twhile(this.l < end) this[this.l++] = 0;\r\n\t\t\treturn this;\r\n\t} else  switch(t) {\r\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\r\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\r\n\t\tcase  3: size = 3; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; val >>>= 8; this[this.l+2] = val&0xFF; break;\r\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\r\n\t\tcase  8: size = 8; if(f === 'f') { write_double_le(this, val, this.l); break; }\r\n\t\t/* falls through */\r\n\t\tcase 16: break;\r\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\r\n\t}\r\n\tthis.l += size; return this;\r\n}\r\n\r\nfunction CheckField(hexstr, fld) {\r\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\r\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\r\n\tthis.l += hexstr.length>>1;\r\n}\r\n\r\nfunction prep_blob(blob, pos) {\r\n\tblob.l = pos;\r\n\tblob.read_shift = ReadShift;\r\n\tblob.chk = CheckField;\r\n\tblob.write_shift = WriteShift;\r\n}\r\n\r\nfunction parsenoop(blob, length) { blob.l += length; }\r\n\r\nfunction new_buf(sz) {\r\n\tvar o = new_raw_buf(sz);\r\n\tprep_blob(o, 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.1.4 Record */\r\nfunction recordhopper(data, cb, opts) {\r\n\tif(!data) return;\r\n\tvar tmpbyte, cntbyte, length;\r\n\tprep_blob(data, data.l || 0);\r\n\tvar L = data.length, RT = 0, tgt = 0;\r\n\twhile(data.l < L) {\r\n\t\tRT = data.read_shift(1);\r\n\t\tif(RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F)<<7);\r\n\t\tvar R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\r\n\t\ttmpbyte = data.read_shift(1);\r\n\t\tlength = tmpbyte & 0x7F;\r\n\t\tfor(cntbyte = 1; cntbyte <4 && (tmpbyte & 0x80); ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F)<<(7*cntbyte);\r\n\t\ttgt = data.l + length;\r\n\t\tvar d = (R.f||parsenoop)(data, length, opts);\r\n\t\tdata.l = tgt;\r\n\t\tif(cb(d, R.n, RT)) return;\r\n\t}\r\n}\r\n\r\n/* control buffer usage for fixed-length buffers */\r\nfunction buf_array() {\r\n\tvar bufs = [], blksz = has_buf ? 256 : 2048;\r\n\tvar newblk = function ba_newblk(sz) {\r\n\t\tvar o = (new_buf(sz));\r\n\t\tprep_blob(o, 0);\r\n\t\treturn o;\r\n\t};\r\n\r\n\tvar curbuf = newblk(blksz);\r\n\r\n\tvar endbuf = function ba_endbuf() {\r\n\t\tif(!curbuf) return;\r\n\t\tif(curbuf.length > curbuf.l) { curbuf = curbuf.slice(0, curbuf.l); curbuf.l = curbuf.length; }\r\n\t\tif(curbuf.length > 0) bufs.push(curbuf);\r\n\t\tcurbuf = null;\r\n\t};\r\n\r\n\tvar next = function ba_next(sz) {\r\n\t\tif(curbuf && (sz < (curbuf.length - curbuf.l))) return curbuf;\r\n\t\tendbuf();\r\n\t\treturn (curbuf = newblk(Math.max(sz+1, blksz)));\r\n\t};\r\n\r\n\tvar end = function ba_end() {\r\n\t\tendbuf();\r\n\t\treturn __toBuffer([bufs]);\r\n\t};\r\n\r\n\tvar push = function ba_push(buf) { endbuf(); curbuf = buf; if(curbuf.l == null) curbuf.l = curbuf.length; next(blksz); };\r\n\r\n\treturn ({ next:next, push:push, end:end, _bufs:bufs });\r\n}\r\n\r\nfunction write_record(ba, type, payload, length) {\r\n\tvar t = +XLSBRE[type], l;\r\n\tif(isNaN(t)) return; // TODO: throw something here?\r\n\tif(!length) length = XLSBRecordEnum[t].p || (payload||[]).length || 0;\r\n\tl = 1 + (t >= 0x80 ? 1 : 0) + 1/* + length*/;\r\n\tif(length >= 0x80) ++l; if(length >= 0x4000) ++l; if(length >= 0x200000) ++l;\r\n\tvar o = ba.next(l);\r\n\tif(t <= 0x7F) o.write_shift(1, t);\r\n\telse {\r\n\t\to.write_shift(1, (t & 0x7F) + 0x80);\r\n\t\to.write_shift(1, (t >> 7));\r\n\t}\r\n\tfor(var i = 0; i != 4; ++i) {\r\n\t\tif(length >= 0x80) { o.write_shift(1, (length & 0x7F)+0x80); length >>= 7; }\r\n\t\telse { o.write_shift(1, length); break; }\r\n\t}\r\n\tif(length > 0 && is_buf(payload)) ba.push(payload);\r\n}\r\n/* XLS ranges enforced */\r\nfunction shift_cell_xls(cell, tgt, opts) {\r\n\tvar out = dup(cell);\r\n\tif(tgt.s) {\r\n\t\tif(out.cRel) out.c += tgt.s.c;\r\n\t\tif(out.rRel) out.r += tgt.s.r;\r\n\t} else {\r\n\t\tif(out.cRel) out.c += tgt.c;\r\n\t\tif(out.rRel) out.r += tgt.r;\r\n\t}\r\n\tif(!opts || opts.biff < 12) {\r\n\t\twhile(out.c >= 0x100) out.c -= 0x100;\r\n\t\twhile(out.r >= 0x10000) out.r -= 0x10000;\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nfunction shift_range_xls(cell, range, opts) {\r\n\tvar out = dup(cell);\r\n\tout.s = shift_cell_xls(out.s, range.s, opts);\r\n\tout.e = shift_cell_xls(out.e, range.s, opts);\r\n\treturn out;\r\n}\r\n\r\nfunction encode_cell_xls(c, biff) {\r\n\tif(c.cRel && c.c < 0) { c = dup(c); c.c += (biff > 8) ? 0x4000 : 0x100; }\r\n\tif(c.rRel && c.r < 0) { c = dup(c); c.r += (biff > 8) ? 0x100000 : ((biff > 5) ? 0x10000 : 0x4000); }\r\n\tvar s = encode_cell(c);\r\n\tif(c.cRel === 0) s = fix_col(s);\r\n\tif(c.rRel === 0) s = fix_row(s);\r\n\treturn s;\r\n}\r\n\r\nfunction encode_range_xls(r, opts) {\r\n\tif(r.s.r == 0 && !r.s.rRel) {\r\n\t\tif(r.e.r == (opts.biff >= 12 ? 0xFFFFF : (opts.biff >= 8 ? 0x10000 : 0x4000)) && !r.e.rRel) {\r\n\t\t\treturn (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\r\n\t\t}\r\n\t}\r\n\tif(r.s.c == 0 && !r.s.cRel) {\r\n\t\tif(r.e.c == (opts.biff >= 12 ? 0xFFFF : 0xFF) && !r.e.cRel) {\r\n\t\t\treturn (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\r\n\t\t}\r\n\t}\r\n\treturn encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\r\n}\r\nvar OFFCRYPTO = {};\r\n\r\nvar make_offcrypto = function(O, _crypto) {\r\n\tvar crypto;\r\n\tif(typeof _crypto !== 'undefined') crypto = _crypto;\r\n\telse if(typeof require !== 'undefined') {\r\n\t\ttry { crypto = require('crypto'); }\r\n\t\tcatch(e) { crypto = null; }\r\n\t}\r\n\r\n\tO.rc4 = function(key, data) {\r\n\t\tvar S = new Array(256);\r\n\t\tvar c = 0, i = 0, j = 0, t = 0;\r\n\t\tfor(i = 0; i != 256; ++i) S[i] = i;\r\n\t\tfor(i = 0; i != 256; ++i) {\r\n\t\t\tj = (j + S[i] + (key[i%key.length]).charCodeAt(0))&255;\r\n\t\t\tt = S[i]; S[i] = S[j]; S[j] = t;\r\n\t\t}\r\n\t\t// $FlowIgnore\r\n\t\ti = j = 0; var out = Buffer(data.length);\r\n\t\tfor(c = 0; c != data.length; ++c) {\r\n\t\t\ti = (i + 1)&255;\r\n\t\t\tj = (j + S[i])%256;\r\n\t\t\tt = S[i]; S[i] = S[j]; S[j] = t;\r\n\t\t\tout[c] = (data[c] ^ S[(S[i]+S[j])&255]);\r\n\t\t}\r\n\t\treturn out;\r\n\t};\r\n\r\n\tO.md5 = function(hex) {\r\n\t\tif(!crypto) throw new Error(\"Unsupported crypto\");\r\n\t\treturn crypto.createHash('md5').update(hex).digest('hex');\r\n\t};\r\n};\r\n/*global crypto:true */\r\nmake_offcrypto(OFFCRYPTO, typeof crypto !== \"undefined\" ? crypto : undefined);\r\n\r\nfunction decode_row(rowstr) { return parseInt(unfix_row(rowstr),10) - 1; }\r\nfunction encode_row(row) { return \"\" + (row + 1); }\r\nfunction fix_row(cstr) { return cstr.replace(/([A-Z]|^)(\\d+)$/,\"$1$$$2\"); }\r\nfunction unfix_row(cstr) { return cstr.replace(/\\$(\\d+)$/,\"$1\"); }\r\n\r\nfunction decode_col(colstr) { var c = unfix_col(colstr), d = 0, i = 0; for(; i !== c.length; ++i) d = 26*d + c.charCodeAt(i) - 64; return d - 1; }\r\nfunction encode_col(col) { var s=\"\"; for(++col; col; col=Math.floor((col-1)/26)) s = String.fromCharCode(((col-1)%26) + 65) + s; return s; }\r\nfunction fix_col(cstr) { return cstr.replace(/^([A-Z])/,\"$$$1\"); }\r\nfunction unfix_col(cstr) { return cstr.replace(/^\\$([A-Z])/,\"$1\"); }\r\n\r\nfunction split_cell(cstr) { return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/,\"$1,$2\").split(\",\"); }\r\nfunction decode_cell(cstr) { var splt = split_cell(cstr); return { c:decode_col(splt[0]), r:decode_row(splt[1]) }; }\r\nfunction encode_cell(cell) { return encode_col(cell.c) + encode_row(cell.r); }\r\nfunction decode_range(range) { var x =range.split(\":\").map(decode_cell); return {s:x[0],e:x[x.length-1]}; }\r\nfunction encode_range(cs,ce) {\r\n\tif(typeof ce === 'undefined' || typeof ce === 'number') {\r\nreturn encode_range(cs.s, cs.e);\r\n\t}\r\nif(typeof cs !== 'string') cs = encode_cell((cs));\r\n\tif(typeof ce !== 'string') ce = encode_cell((ce));\r\nreturn cs == ce ? cs : cs + \":\" + ce;\r\n}\r\n\r\nfunction safe_decode_range(range) {\r\n\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\r\n\tvar idx = 0, i = 0, cc = 0;\r\n\tvar len = range.length;\r\n\tfor(idx = 0; i < len; ++i) {\r\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\r\n\t\tidx = 26*idx + cc;\r\n\t}\r\n\to.s.c = --idx;\r\n\r\n\tfor(idx = 0; i < len; ++i) {\r\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\r\n\t\tidx = 10*idx + cc;\r\n\t}\r\n\to.s.r = --idx;\r\n\r\n\tif(i === len || range.charCodeAt(++i) === 58) { o.e.c=o.s.c; o.e.r=o.s.r; return o; }\r\n\r\n\tfor(idx = 0; i != len; ++i) {\r\n\t\tif((cc=range.charCodeAt(i)-64) < 1 || cc > 26) break;\r\n\t\tidx = 26*idx + cc;\r\n\t}\r\n\to.e.c = --idx;\r\n\r\n\tfor(idx = 0; i != len; ++i) {\r\n\t\tif((cc=range.charCodeAt(i)-48) < 0 || cc > 9) break;\r\n\t\tidx = 10*idx + cc;\r\n\t}\r\n\to.e.r = --idx;\r\n\treturn o;\r\n}\r\n\r\nfunction safe_format_cell(cell, v) {\r\n\tvar q = (cell.t == 'd' && v instanceof Date);\r\n\tif(cell.z != null) try { return (cell.w = SSF.format(cell.z, q ? datenum(v) : v)); } catch(e) { }\r\n\ttry { return (cell.w = SSF.format((cell.XF||{}).numFmtId||(q ? 14 : 0),  q ? datenum(v) : v)); } catch(e) { return ''+v; }\r\n}\r\n\r\nfunction format_cell(cell, v, o) {\r\n\tif(cell == null || cell.t == null || cell.t == 'z') return \"\";\r\n\tif(cell.w !== undefined) return cell.w;\r\n\tif(cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\r\n\tif(v == undefined) return safe_format_cell(cell, cell.v);\r\n\treturn safe_format_cell(cell, v);\r\n}\r\n\r\nfunction sheet_to_workbook(sheet, opts) {\r\n\tvar n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\r\n\tvar sheets = {}; sheets[n] = sheet;\r\n\treturn { SheetNames: [n], Sheets: sheets };\r\n}\r\n\r\nfunction sheet_add_aoa(_ws, data, opts) {\r\n\tvar o = opts || {};\r\n\tvar dense = _ws ? Array.isArray(_ws) : o.dense;\r\n\tif(DENSE != null && dense == null) dense = DENSE;\r\n\tvar ws = _ws || (dense ? ([]) : ({}));\r\n\tvar _R = 0, _C = 0;\r\n\tif(ws && o.origin != null) {\r\n\t\tif(typeof o.origin == 'number') _R = o.origin;\r\n\t\telse {\r\n\t\t\tvar _origin = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\r\n\t\t\t_R = _origin.r; _C = _origin.c;\r\n\t\t}\r\n\t}\r\n\tvar range = ({s: {c:10000000, r:10000000}, e: {c:0, r:0}});\r\n\tif(ws['!ref']) {\r\n\t\tvar _range = safe_decode_range(ws['!ref']);\r\n\t\trange.s.c = _range.s.c;\r\n\t\trange.s.r = _range.s.r;\r\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\r\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\r\n\t\tif(_R == -1) range.e.r = _R = _range.e.r + 1;\r\n\t}\r\n\tfor(var R = 0; R != data.length; ++R) {\r\n\t\tfor(var C = 0; C != data[R].length; ++C) {\r\n\t\t\tif(typeof data[R][C] === 'undefined') continue;\r\n\t\t\tvar cell = ({v: data[R][C] });\r\n\t\t\tif(Array.isArray(cell.v)) { cell.f = data[R][C][1]; cell.v = cell.v[0]; }\r\n\t\t\tvar __R = _R + R, __C = _C + C;\r\n\t\t\tif(range.s.r > __R) range.s.r = __R;\r\n\t\t\tif(range.s.c > __C) range.s.c = __C;\r\n\t\t\tif(range.e.r < __R) range.e.r = __R;\r\n\t\t\tif(range.e.c < __C) range.e.c = __C;\r\n\t\t\tif(cell.v === null) { if(cell.f) cell.t = 'n'; else if(!o.cellStubs) continue; else cell.t = 'z'; }\r\n\t\t\telse if(typeof cell.v === 'number') cell.t = 'n';\r\n\t\t\telse if(typeof cell.v === 'boolean') cell.t = 'b';\r\n\t\t\telse if(cell.v instanceof Date) {\r\n\t\t\t\tcell.z = o.dateNF || SSF._table[14];\r\n\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.w = SSF.format(cell.z, datenum(cell.v)); }\r\n\t\t\t\telse { cell.t = 'n'; cell.v = datenum(cell.v); cell.w = SSF.format(cell.z, cell.v); }\r\n\t\t\t}\r\n\t\t\telse cell.t = 's';\r\n\t\t\tif(dense) {\r\n\t\t\t\tif(!ws[__R]) ws[__R] = [];\r\n\t\t\t\tws[__R][__C] = cell;\r\n\t\t\t} else {\r\n\t\t\t\tvar cell_ref = encode_cell(({c:__C,r:__R}));\r\n\t\t\t\tws[cell_ref] = cell;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(range.s.c < 10000000) ws['!ref'] = encode_range(range);\r\n\treturn ws;\r\n}\r\nfunction aoa_to_sheet(data, opts) { return sheet_add_aoa(null, data, opts); }\r\n\r\nfunction write_UInt32LE(x, o) {\r\n\tif(!o) o = new_buf(4);\r\n\to.write_shift(4, x);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.5.168 */\r\nfunction parse_XLWideString(data) {\r\n\tvar cchCharacters = data.read_shift(4);\r\n\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\r\n}\r\nfunction write_XLWideString(data, o) {\r\n\tvar _null = false; if(o == null) { _null = true; o = new_buf(4+2*data.length); }\r\n\to.write_shift(4, data.length);\r\n\tif(data.length > 0) o.write_shift(0, data, 'dbcs');\r\n\treturn _null ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.5.143 */\r\nfunction parse_StrRun(data) {\r\n\treturn { ich: data.read_shift(2), ifnt: data.read_shift(2) };\r\n}\r\nfunction write_StrRun(run, o) {\r\n\tif(!o) o = new_buf(4);\r\n\to.write_shift(2, run.ich || 0);\r\n\to.write_shift(2, run.ifnt || 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.5.121 */\r\nfunction parse_RichStr(data, length) {\r\n\tvar start = data.l;\r\n\tvar flags = data.read_shift(1);\r\n\tvar str = parse_XLWideString(data);\r\n\tvar rgsStrRun = [];\r\n\tvar z = ({ t: str, h: str });\r\n\tif((flags & 1) !== 0) { /* fRichStr */\r\n\t\t/* TODO: formatted string */\r\n\t\tvar dwSizeStrRun = data.read_shift(4);\r\n\t\tfor(var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\r\n\t\tz.r = rgsStrRun;\r\n\t}\r\n\telse z.r = [{ich:0, ifnt:0}];\r\n\t//if((flags & 2) !== 0) { /* fExtStr */\r\n\t//\t/* TODO: phonetic string */\r\n\t//}\r\n\tdata.l = start + length;\r\n\treturn z;\r\n}\r\nfunction write_RichStr(str, o) {\r\n\t/* TODO: formatted string */\r\n\tvar _null = false; if(o == null) { _null = true; o = new_buf(15+4*str.t.length); }\r\n\to.write_shift(1,0);\r\n\twrite_XLWideString(str.t, o);\r\n\treturn _null ? o.slice(0, o.l) : o;\r\n}\r\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\r\nvar parse_BrtCommentText = parse_RichStr;\r\nfunction write_BrtCommentText(str, o) {\r\n\t/* TODO: formatted string */\r\n\tvar _null = false; if(o == null) { _null = true; o = new_buf(23+4*str.t.length); }\r\n\to.write_shift(1,1);\r\n\twrite_XLWideString(str.t, o);\r\n\to.write_shift(4,1);\r\n\twrite_StrRun({ich:0,ifnt:0}, o);\r\n\treturn _null ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.5.9 */\r\nfunction parse_XLSBCell(data) {\r\n\tvar col = data.read_shift(4);\r\n\tvar iStyleRef = data.read_shift(2);\r\n\tiStyleRef += data.read_shift(1) <<16;\r\n\tdata.l++; //var fPhShow = data.read_shift(1);\r\n\treturn { c:col, iStyleRef: iStyleRef };\r\n}\r\nfunction write_XLSBCell(cell, o) {\r\n\tif(o == null) o = new_buf(8);\r\n\to.write_shift(-4, cell.c);\r\n\to.write_shift(3, cell.iStyleRef || cell.s);\r\n\to.write_shift(1, 0); /* fPhShow */\r\n\treturn o;\r\n}\r\n\r\n\r\n/* [MS-XLSB] 2.5.21 */\r\nvar parse_XLSBCodeName = parse_XLWideString;\r\nvar write_XLSBCodeName = write_XLWideString;\r\n\r\n/* [MS-XLSB] 2.5.166 */\r\nfunction parse_XLNullableWideString(data) {\r\n\tvar cchCharacters = data.read_shift(4);\r\n\treturn cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\r\n}\r\nfunction write_XLNullableWideString(data, o) {\r\n\tvar _null = false; if(o == null) { _null = true; o = new_buf(127); }\r\n\to.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\r\n\tif(data.length > 0) o.write_shift(0, data, 'dbcs');\r\n\treturn _null ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.5.165 */\r\nvar parse_XLNameWideString = parse_XLWideString;\r\n//var write_XLNameWideString = write_XLWideString;\r\n\r\n/* [MS-XLSB] 2.5.114 */\r\nvar parse_RelID = parse_XLNullableWideString;\r\nvar write_RelID = write_XLNullableWideString;\r\n\r\n\r\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\r\nfunction parse_RkNumber(data) {\r\n\tvar b = data.slice(data.l, data.l+4);\r\n\tvar fX100 = (b[0] & 1), fInt = (b[0] & 2);\r\n\tdata.l+=4;\r\n\tb[0] &= 0xFC; // b[0] &= ~3;\r\n\tvar RK = fInt === 0 ? __double([0,0,0,0,b[0],b[1],b[2],b[3]],0) : __readInt32LE(b,0)>>2;\r\n\treturn fX100 ? (RK/100) : RK;\r\n}\r\nfunction write_RkNumber(data, o) {\r\n\tif(o == null) o = new_buf(4);\r\n\tvar fX100 = 0, fInt = 0, d100 = data * 100;\r\n\tif((data == (data | 0)) && (data >= -(1<<29)) && (data < (1 << 29))) { fInt = 1; }\r\n\telse if((d100 == (d100 | 0)) && (d100 >= -(1<<29)) && (d100 < (1 << 29))) { fInt = 1; fX100 = 1; }\r\n\tif(fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));\r\n\telse throw new Error(\"unsupported RkNumber \" + data); // TODO\r\n}\r\n\r\n\r\n/* [MS-XLSB] 2.5.117 RfX */\r\nfunction parse_RfX(data ) {\r\n\tvar cell = ({s: {}, e: {}});\r\n\tcell.s.r = data.read_shift(4);\r\n\tcell.e.r = data.read_shift(4);\r\n\tcell.s.c = data.read_shift(4);\r\n\tcell.e.c = data.read_shift(4);\r\n\treturn cell;\r\n}\r\nfunction write_RfX(r, o) {\r\n\tif(!o) o = new_buf(16);\r\n\to.write_shift(4, r.s.r);\r\n\to.write_shift(4, r.e.r);\r\n\to.write_shift(4, r.s.c);\r\n\to.write_shift(4, r.e.c);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\r\nvar parse_UncheckedRfX = parse_RfX;\r\nvar write_UncheckedRfX = write_RfX;\r\n\r\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\r\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\r\nfunction parse_Xnum(data) { return data.read_shift(8, 'f'); }\r\nfunction write_Xnum(data, o) { return (o || new_buf(8)).write_shift(8, data, 'f'); }\r\n\r\n/* [MS-XLSB] 2.5.97.2 */\r\nvar BErr = {\r\n0x00: \"#NULL!\",\r\n0x07: \"#DIV/0!\",\r\n0x0F: \"#VALUE!\",\r\n0x17: \"#REF!\",\r\n0x1D: \"#NAME?\",\r\n0x24: \"#NUM!\",\r\n0x2A: \"#N/A\",\r\n0x2B: \"#GETTING_DATA\",\r\n0xFF: \"#WTF?\"\r\n};\r\nvar RBErr = evert_num(BErr);\r\n\r\n/* [MS-XLSB] 2.4.324 BrtColor */\r\nfunction parse_BrtColor(data) {\r\n\tvar out = {};\r\n\tvar d = data.read_shift(1);\r\n\r\n\t//var fValidRGB = d & 1;\r\n\tvar xColorType = d >>> 1;\r\n\r\n\tvar index = data.read_shift(1);\r\n\tvar nTS = data.read_shift(2, 'i');\r\n\tvar bR = data.read_shift(1);\r\n\tvar bG = data.read_shift(1);\r\n\tvar bB = data.read_shift(1);\r\n\tdata.l++; //var bAlpha = data.read_shift(1);\r\n\r\n\tswitch(xColorType) {\r\n\t\tcase 0: out.auto = 1; break;\r\n\t\tcase 1:\r\n\t\t\tout.index = index;\r\n\t\t\tvar icv = XLSIcv[index];\r\n\t\t\t/* automatic pseudo index 81 */\r\n\t\t\tif(icv) out.rgb = rgb2Hex(icv);\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\t/* if(!fValidRGB) throw new Error(\"invalid\"); */\r\n\t\t\tout.rgb = rgb2Hex([bR, bG, bB]);\r\n\t\t\tbreak;\r\n\t\tcase 3: out.theme = index; break;\r\n\t}\r\n\tif(nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\r\n\r\n\treturn out;\r\n}\r\nfunction write_BrtColor(color, o) {\r\n\tif(!o) o = new_buf(8);\r\n\tif(!color||color.auto) { o.write_shift(4, 0); o.write_shift(4, 0); return o; }\r\n\tif(color.index) {\r\n\t\to.write_shift(1, 0x02);\r\n\t\to.write_shift(1, color.index);\r\n\t} else if(color.theme) {\r\n\t\to.write_shift(1, 0x06);\r\n\t\to.write_shift(1, color.theme);\r\n\t} else {\r\n\t\to.write_shift(1, 0x05);\r\n\t\to.write_shift(1, 0);\r\n\t}\r\n\tvar nTS = color.tint || 0;\r\n\tif(nTS > 0) nTS *= 32767;\r\n\telse if(nTS < 0) nTS *= 32768;\r\n\to.write_shift(2, nTS);\r\n\tif(!color.rgb) {\r\n\t\to.write_shift(2, 0);\r\n\t\to.write_shift(1, 0);\r\n\t\to.write_shift(1, 0);\r\n\t} else {\r\n\t\tvar rgb = (color.rgb || 'FFFFFF');\r\n\t\to.write_shift(1, parseInt(rgb.slice(0,2),16));\r\n\t\to.write_shift(1, parseInt(rgb.slice(2,4),16));\r\n\t\to.write_shift(1, parseInt(rgb.slice(4,6),16));\r\n\t\to.write_shift(1, 0xFF);\r\n\t}\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.5.52 */\r\nfunction parse_FontFlags(data) {\r\n\tvar d = data.read_shift(1);\r\n\tdata.l++;\r\n\tvar out = {\r\n\t\t/* fBold: d & 0x01 */\r\n\t\tfItalic: d & 0x02,\r\n\t\t/* fUnderline: d & 0x04 */\r\n\t\tfStrikeout: d & 0x08,\r\n\t\tfOutline: d & 0x10,\r\n\t\tfShadow: d & 0x20,\r\n\t\tfCondense: d & 0x40,\r\n\t\tfExtend: d & 0x80\r\n\t};\r\n\treturn out;\r\n}\r\nfunction write_FontFlags(font, o) {\r\n\tif(!o) o = new_buf(2);\r\n\tvar grbit =\r\n\t\t(font.italic   ? 0x02 : 0) |\r\n\t\t(font.strike   ? 0x08 : 0) |\r\n\t\t(font.outline  ? 0x10 : 0) |\r\n\t\t(font.shadow   ? 0x20 : 0) |\r\n\t\t(font.condense ? 0x40 : 0) |\r\n\t\t(font.extend   ? 0x80 : 0);\r\n\to.write_shift(1, grbit);\r\n\to.write_shift(1, 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\r\nfunction parse_ClipboardFormatOrString(o, w) {\r\n\t// $FlowIgnore\r\n\tvar ClipFmt = {2:\"BITMAP\",3:\"METAFILEPICT\",8:\"DIB\",14:\"ENHMETAFILE\"};\r\n\tvar m = o.read_shift(4);\r\n\tswitch(m) {\r\n\t\tcase 0x00000000: return \"\";\r\n\t\tcase 0xffffffff: case 0xfffffffe: return ClipFmt[o.read_shift(4)]||\"\";\r\n\t}\r\n\tif(m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\r\n\to.l -= 4;\r\n\treturn o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\r\n}\r\nfunction parse_ClipboardFormatOrAnsiString(o) { return parse_ClipboardFormatOrString(o, 1); }\r\nfunction parse_ClipboardFormatOrUnicodeString(o) { return parse_ClipboardFormatOrString(o, 2); }\r\n\r\n/* [MS-OLEPS] 2.2 PropertyType */\r\n//var VT_EMPTY    = 0x0000;\r\n//var VT_NULL     = 0x0001;\r\nvar VT_I2       = 0x0002;\r\nvar VT_I4       = 0x0003;\r\n//var VT_R4       = 0x0004;\r\n//var VT_R8       = 0x0005;\r\n//var VT_CY       = 0x0006;\r\n//var VT_DATE     = 0x0007;\r\n//var VT_BSTR     = 0x0008;\r\n//var VT_ERROR    = 0x000A;\r\nvar VT_BOOL     = 0x000B;\r\nvar VT_VARIANT  = 0x000C;\r\n//var VT_DECIMAL  = 0x000E;\r\n//var VT_I1       = 0x0010;\r\n//var VT_UI1      = 0x0011;\r\n//var VT_UI2      = 0x0012;\r\nvar VT_UI4      = 0x0013;\r\n//var VT_I8       = 0x0014;\r\n//var VT_UI8      = 0x0015;\r\n//var VT_INT      = 0x0016;\r\n//var VT_UINT     = 0x0017;\r\nvar VT_LPSTR    = 0x001E;\r\n//var VT_LPWSTR   = 0x001F;\r\nvar VT_FILETIME = 0x0040;\r\nvar VT_BLOB     = 0x0041;\r\n//var VT_STREAM   = 0x0042;\r\n//var VT_STORAGE  = 0x0043;\r\n//var VT_STREAMED_Object  = 0x0044;\r\n//var VT_STORED_Object    = 0x0045;\r\n//var VT_BLOB_Object      = 0x0046;\r\nvar VT_CF       = 0x0047;\r\n//var VT_CLSID    = 0x0048;\r\n//var VT_VERSIONED_STREAM = 0x0049;\r\nvar VT_VECTOR   = 0x1000;\r\n//var VT_ARRAY    = 0x2000;\r\n\r\nvar VT_STRING   = 0x0050; // 2.3.3.1.11 VtString\r\nvar VT_USTR     = 0x0051; // 2.3.3.1.12 VtUnalignedString\r\nvar VT_CUSTOM   = [VT_STRING, VT_USTR];\r\n\r\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\r\nvar DocSummaryPIDDSI = {\r\n0x01: { n: 'CodePage', t: VT_I2 },\r\n0x02: { n: 'Category', t: VT_STRING },\r\n0x03: { n: 'PresentationFormat', t: VT_STRING },\r\n0x04: { n: 'ByteCount', t: VT_I4 },\r\n0x05: { n: 'LineCount', t: VT_I4 },\r\n0x06: { n: 'ParagraphCount', t: VT_I4 },\r\n0x07: { n: 'SlideCount', t: VT_I4 },\r\n0x08: { n: 'NoteCount', t: VT_I4 },\r\n0x09: { n: 'HiddenCount', t: VT_I4 },\r\n0x0a: { n: 'MultimediaClipCount', t: VT_I4 },\r\n0x0b: { n: 'Scale', t: VT_BOOL },\r\n0x0c: { n: 'HeadingPair', t: VT_VECTOR | VT_VARIANT },\r\n0x0d: { n: 'DocParts', t: VT_VECTOR | VT_LPSTR },\r\n0x0e: { n: 'Manager', t: VT_STRING },\r\n0x0f: { n: 'Company', t: VT_STRING },\r\n0x10: { n: 'LinksDirty', t: VT_BOOL },\r\n0x11: { n: 'CharacterCount', t: VT_I4 },\r\n0x13: { n: 'SharedDoc', t: VT_BOOL },\r\n0x16: { n: 'HLinksChanged', t: VT_BOOL },\r\n0x17: { n: 'AppVersion', t: VT_I4, p: 'version' },\r\n0x18: { n: 'DigSig', t: VT_BLOB },\r\n0x1A: { n: 'ContentType', t: VT_STRING },\r\n0x1B: { n: 'ContentStatus', t: VT_STRING },\r\n0x1C: { n: 'Language', t: VT_STRING },\r\n0x1D: { n: 'Version', t: VT_STRING },\r\n0xFF: {}\r\n};\r\n\r\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\r\nvar SummaryPIDSI = {\r\n0x01: { n: 'CodePage', t: VT_I2 },\r\n0x02: { n: 'Title', t: VT_STRING },\r\n0x03: { n: 'Subject', t: VT_STRING },\r\n0x04: { n: 'Author', t: VT_STRING },\r\n0x05: { n: 'Keywords', t: VT_STRING },\r\n0x06: { n: 'Comments', t: VT_STRING },\r\n0x07: { n: 'Template', t: VT_STRING },\r\n0x08: { n: 'LastAuthor', t: VT_STRING },\r\n0x09: { n: 'RevNumber', t: VT_STRING },\r\n0x0A: { n: 'EditTime', t: VT_FILETIME },\r\n0x0B: { n: 'LastPrinted', t: VT_FILETIME },\r\n0x0C: { n: 'CreatedDate', t: VT_FILETIME },\r\n0x0D: { n: 'ModifiedDate', t: VT_FILETIME },\r\n0x0E: { n: 'PageCount', t: VT_I4 },\r\n0x0F: { n: 'WordCount', t: VT_I4 },\r\n0x10: { n: 'CharCount', t: VT_I4 },\r\n0x11: { n: 'Thumbnail', t: VT_CF },\r\n0x12: { n: 'ApplicationName', t: VT_STRING },\r\n0x13: { n: 'DocumentSecurity', t: VT_I4 },\r\n0xFF: {}\r\n};\r\n\r\n/* [MS-OLEPS] 2.18 */\r\nvar SpecialProperties = {\r\n0x80000000: { n: 'Locale', t: VT_UI4 },\r\n0x80000003: { n: 'Behavior', t: VT_UI4 },\r\n0x72627262: {}\r\n};\r\n\r\n(function() {\r\n\tfor(var y in SpecialProperties) if(SpecialProperties.hasOwnProperty(y))\r\n\tDocSummaryPIDDSI[y] = SummaryPIDSI[y] = SpecialProperties[y];\r\n})();\r\n\r\n/* [MS-XLS] 2.4.63 Country/Region codes */\r\nvar CountryEnum = {\r\n0x0001: \"US\", // United States\r\n0x0002: \"CA\", // Canada\r\n0x0003: \"\", // Latin America (except Brazil)\r\n0x0007: \"RU\", // Russia\r\n0x0014: \"EG\", // Egypt\r\n0x001E: \"GR\", // Greece\r\n0x001F: \"NL\", // Netherlands\r\n0x0020: \"BE\", // Belgium\r\n0x0021: \"FR\", // France\r\n0x0022: \"ES\", // Spain\r\n0x0024: \"HU\", // Hungary\r\n0x0027: \"IT\", // Italy\r\n0x0029: \"CH\", // Switzerland\r\n0x002B: \"AT\", // Austria\r\n0x002C: \"GB\", // United Kingdom\r\n0x002D: \"DK\", // Denmark\r\n0x002E: \"SE\", // Sweden\r\n0x002F: \"NO\", // Norway\r\n0x0030: \"PL\", // Poland\r\n0x0031: \"DE\", // Germany\r\n0x0034: \"MX\", // Mexico\r\n0x0037: \"BR\", // Brazil\r\n0x003d: \"AU\", // Australia\r\n0x0040: \"NZ\", // New Zealand\r\n0x0042: \"TH\", // Thailand\r\n0x0051: \"JP\", // Japan\r\n0x0052: \"KR\", // Korea\r\n0x0054: \"VN\", // Viet Nam\r\n0x0056: \"CN\", // China\r\n0x005A: \"TR\", // Turkey\r\n0x0069: \"JS\", // Ramastan\r\n0x00D5: \"DZ\", // Algeria\r\n0x00D8: \"MA\", // Morocco\r\n0x00DA: \"LY\", // Libya\r\n0x015F: \"PT\", // Portugal\r\n0x0162: \"IS\", // Iceland\r\n0x0166: \"FI\", // Finland\r\n0x01A4: \"CZ\", // Czech Republic\r\n0x0376: \"TW\", // Taiwan\r\n0x03C1: \"LB\", // Lebanon\r\n0x03C2: \"JO\", // Jordan\r\n0x03C3: \"SY\", // Syria\r\n0x03C4: \"IQ\", // Iraq\r\n0x03C5: \"KW\", // Kuwait\r\n0x03C6: \"SA\", // Saudi Arabia\r\n0x03CB: \"AE\", // United Arab Emirates\r\n0x03CC: \"IL\", // Israel\r\n0x03CE: \"QA\", // Qatar\r\n0x03D5: \"IR\", // Iran\r\n0xFFFF: \"US\"  // United States\r\n};\r\n\r\n/* [MS-XLS] 2.5.127 */\r\nvar XLSFillPattern = [\r\n\tnull,\r\n\t'solid',\r\n\t'mediumGray',\r\n\t'darkGray',\r\n\t'lightGray',\r\n\t'darkHorizontal',\r\n\t'darkVertical',\r\n\t'darkDown',\r\n\t'darkUp',\r\n\t'darkGrid',\r\n\t'darkTrellis',\r\n\t'lightHorizontal',\r\n\t'lightVertical',\r\n\t'lightDown',\r\n\t'lightUp',\r\n\t'lightGrid',\r\n\t'lightTrellis',\r\n\t'gray125',\r\n\t'gray0625'\r\n];\r\n\r\nfunction rgbify(arr) { return arr.map(function(x) { return [(x>>16)&255,(x>>8)&255,x&255]; }); }\r\n\r\n/* [MS-XLS] 2.5.161 */\r\n/* [MS-XLSB] 2.5.75 Icv */\r\nvar XLSIcv = rgbify([\r\n\t/* Color Constants */\r\n\t0x000000,\r\n\t0xFFFFFF,\r\n\t0xFF0000,\r\n\t0x00FF00,\r\n\t0x0000FF,\r\n\t0xFFFF00,\r\n\t0xFF00FF,\r\n\t0x00FFFF,\r\n\r\n\t/* Overridable Defaults */\r\n\t0x000000,\r\n\t0xFFFFFF,\r\n\t0xFF0000,\r\n\t0x00FF00,\r\n\t0x0000FF,\r\n\t0xFFFF00,\r\n\t0xFF00FF,\r\n\t0x00FFFF,\r\n\r\n\t0x800000,\r\n\t0x008000,\r\n\t0x000080,\r\n\t0x808000,\r\n\t0x800080,\r\n\t0x008080,\r\n\t0xC0C0C0,\r\n\t0x808080,\r\n\t0x9999FF,\r\n\t0x993366,\r\n\t0xFFFFCC,\r\n\t0xCCFFFF,\r\n\t0x660066,\r\n\t0xFF8080,\r\n\t0x0066CC,\r\n\t0xCCCCFF,\r\n\r\n\t0x000080,\r\n\t0xFF00FF,\r\n\t0xFFFF00,\r\n\t0x00FFFF,\r\n\t0x800080,\r\n\t0x800000,\r\n\t0x008080,\r\n\t0x0000FF,\r\n\t0x00CCFF,\r\n\t0xCCFFFF,\r\n\t0xCCFFCC,\r\n\t0xFFFF99,\r\n\t0x99CCFF,\r\n\t0xFF99CC,\r\n\t0xCC99FF,\r\n\t0xFFCC99,\r\n\r\n\t0x3366FF,\r\n\t0x33CCCC,\r\n\t0x99CC00,\r\n\t0xFFCC00,\r\n\t0xFF9900,\r\n\t0xFF6600,\r\n\t0x666699,\r\n\t0x969696,\r\n\t0x003366,\r\n\t0x339966,\r\n\t0x003300,\r\n\t0x333300,\r\n\t0x993300,\r\n\t0x993366,\r\n\t0x333399,\r\n\t0x333333,\r\n\r\n\t/* Other entries to appease BIFF8/12 */\r\n\t0xFFFFFF, /* 0x40 icvForeground ?? */\r\n\t0x000000, /* 0x41 icvBackground ?? */\r\n\t0x000000, /* 0x42 icvFrame ?? */\r\n\t0x000000, /* 0x43 icv3D ?? */\r\n\t0x000000, /* 0x44 icv3DText ?? */\r\n\t0x000000, /* 0x45 icv3DHilite ?? */\r\n\t0x000000, /* 0x46 icv3DShadow ?? */\r\n\t0x000000, /* 0x47 icvHilite ?? */\r\n\t0x000000, /* 0x48 icvCtlText ?? */\r\n\t0x000000, /* 0x49 icvCtlScrl ?? */\r\n\t0x000000, /* 0x4A icvCtlInv ?? */\r\n\t0x000000, /* 0x4B icvCtlBody ?? */\r\n\t0x000000, /* 0x4C icvCtlFrame ?? */\r\n\t0x000000, /* 0x4D icvCtlFore ?? */\r\n\t0x000000, /* 0x4E icvCtlBack ?? */\r\n\t0x000000, /* 0x4F icvCtlNeutral */\r\n\t0x000000, /* 0x50 icvInfoBk ?? */\r\n\t0x000000 /* 0x51 icvInfoText ?? */\r\n]);\r\n\r\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\r\n/* 12.3 Part Summary <SpreadsheetML> */\r\n/* 14.2 Part Summary <DrawingML> */\r\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\r\nvar ct2type/*{[string]:string}*/ = ({\r\n\t/* Workbook */\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\r\n\r\n\t/* Worksheet */\r\n\t\"application/vnd.ms-excel.binIndexWs\": \"TODO\", /* Binary Index */\r\n\r\n\t/* Macrosheet */\r\n\t\"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\r\n\t\"application/vnd.ms-excel.binIndexMs\": \"TODO\", /* Binary Index */\r\n\r\n\t/* File Properties */\r\n\t\"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\r\n\t\"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\r\n\t\"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\r\n\r\n\t/* Custom Data Properties */\r\n\t\"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\r\n\r\n\t/* PivotTable */\r\n\t\"application/vnd.ms-excel.pivotTable\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\r\n\r\n\t/* Chart Colors */\r\n\t\"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\r\n\r\n\t/* Chart Style */\r\n\t\"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\r\n\r\n\t/* Calculation Chain */\r\n\t\"application/vnd.ms-excel.calcChain\": \"calcchains\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\r\n\r\n\t/* Printer Settings */\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\r\n\r\n\t/* ActiveX */\r\n\t\"application/vnd.ms-office.activeX\": \"TODO\",\r\n\t\"application/vnd.ms-office.activeX+xml\": \"TODO\",\r\n\r\n\t/* Custom Toolbars */\r\n\t\"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\r\n\r\n\t/* External Data Connections */\r\n\t\"application/vnd.ms-excel.connections\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\r\n\r\n\t/* External Links */\r\n\t\"application/vnd.ms-excel.externalLink\": \"links\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\r\n\r\n\t/* Metadata */\r\n\t\"application/vnd.ms-excel.sheetMetadata\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"TODO\",\r\n\r\n\t/* PivotCache */\r\n\t\"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\r\n\t\"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\r\n\r\n\t/* Query Table */\r\n\t\"application/vnd.ms-excel.queryTable\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\r\n\r\n\t/* Shared Workbook */\r\n\t\"application/vnd.ms-excel.userNames\": \"TODO\",\r\n\t\"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\r\n\t\"application/vnd.ms-excel.revisionLog\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\r\n\r\n\t/* Single Cell Table */\r\n\t\"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\r\n\r\n\t/* Slicer */\r\n\t\"application/vnd.ms-excel.slicer\": \"TODO\",\r\n\t\"application/vnd.ms-excel.slicerCache\": \"TODO\",\r\n\t\"application/vnd.ms-excel.slicer+xml\": \"TODO\",\r\n\t\"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\r\n\r\n\t/* Sort Map */\r\n\t\"application/vnd.ms-excel.wsSortMap\": \"TODO\",\r\n\r\n\t/* Table */\r\n\t\"application/vnd.ms-excel.table\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\r\n\r\n\t/* Themes */\r\n\t\"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\r\n\r\n\t/* Theme Override */\r\n\t\"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\r\n\r\n\t/* Timeline */\r\n\t\"application/vnd.ms-excel.Timeline+xml\": \"TODO\", /* verify */\r\n\t\"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\", /* verify */\r\n\r\n\t/* VBA */\r\n\t\"application/vnd.ms-office.vbaProject\": \"vba\",\r\n\t\"application/vnd.ms-office.vbaProjectSignature\": \"vba\",\r\n\r\n\t/* Volatile Dependencies */\r\n\t\"application/vnd.ms-office.volatileDependencies\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\r\n\r\n\t/* Control Properties */\r\n\t\"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\r\n\r\n\t/* Data Model */\r\n\t\"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\r\n\r\n\t/* Survey */\r\n\t\"application/vnd.ms-excel.Survey+xml\": \"TODO\",\r\n\r\n\t/* Drawing */\r\n\t\"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\r\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\r\n\t\"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\r\n\r\n\t/* VML */\r\n\t\"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\r\n\r\n\t\"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\r\n\t\"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\r\n\r\n\t/* Image */\r\n\t\"image/png\": \"TODO\",\r\n\r\n\t\"sheet\": \"js\"\r\n});\r\n\r\nvar CT_LIST = (function(){\r\n\tvar o = {\r\n\t\tworkbooks: {\r\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\r\n\t\t\txlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\r\n\t\t\txlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\r\n\t\t\txlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\r\n\t\t\txltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\r\n\t\t},\r\n\t\tstrs: { /* Shared Strings */\r\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\r\n\t\t\txlsb: \"application/vnd.ms-excel.sharedStrings\"\r\n\t\t},\r\n\t\tcomments: { /* Comments */\r\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\r\n\t\t\txlsb: \"application/vnd.ms-excel.comments\"\r\n\t\t},\r\n\t\tsheets: { /* Worksheet */\r\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\r\n\t\t\txlsb: \"application/vnd.ms-excel.worksheet\"\r\n\t\t},\r\n\t\tcharts: { /* Chartsheet */\r\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\r\n\t\t\txlsb: \"application/vnd.ms-excel.chartsheet\"\r\n\t\t},\r\n\t\tdialogs: { /* Dialogsheet */\r\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\r\n\t\t\txlsb: \"application/vnd.ms-excel.dialogsheet\"\r\n\t\t},\r\n\t\tmacros: { /* Macrosheet (Excel 4.0 Macros) */\r\n\t\t\txlsx: \"application/vnd.ms-excel.macrosheet+xml\",\r\n\t\t\txlsb: \"application/vnd.ms-excel.macrosheet\"\r\n\t\t},\r\n\t\tstyles: { /* Styles */\r\n\t\t\txlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\r\n\t\t\txlsb: \"application/vnd.ms-excel.styles\"\r\n\t\t}\r\n\t};\r\n\tkeys(o).forEach(function(k) { [\"xlsm\", \"xlam\"].forEach(function(v) { if(!o[k][v]) o[k][v] = o[k].xlsx; }); });\r\n\tkeys(o).forEach(function(k){ keys(o[k]).forEach(function(v) { ct2type[o[k][v]] = k; }); });\r\n\treturn o;\r\n})();\r\n\r\nvar type2ct/*{[string]:Array<string>}*/ = evert_arr(ct2type);\r\n\r\nXMLNS.CT = 'http://schemas.openxmlformats.org/package/2006/content-types';\r\n\r\nfunction new_ct() {\r\n\treturn ({\r\n\t\tworkbooks:[], sheets:[], charts:[], dialogs:[], macros:[],\r\n\t\trels:[], strs:[], comments:[], links:[],\r\n\t\tcoreprops:[], extprops:[], custprops:[], themes:[], styles:[],\r\n\t\tcalcchains:[], vba: [], drawings: [],\r\n\t\tTODO:[], xmlns: \"\" });\r\n}\r\n\r\nfunction parse_ct(data) {\r\n\tvar ct = new_ct();\r\n\tif(!data || !data.match) return ct;\r\n\tvar ctext = {};\r\n\t(data.match(tagregex)||[]).forEach(function(x) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\tswitch(y[0].replace(nsregex,\"<\")) {\r\n\t\t\tcase '<?xml': break;\r\n\t\t\tcase '<Types': ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/)||[\"\",\"\"])[1] ]; break;\r\n\t\t\tcase '<Default': ctext[y.Extension] = y.ContentType; break;\r\n\t\t\tcase '<Override':\r\n\t\t\t\tif(ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\tif(ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\r\n\tct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\r\n\tct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\r\n\tct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\r\n\tct.defaults = ctext;\r\n\tdelete ct.calcchains;\r\n\treturn ct;\r\n}\r\n\r\nvar CTYPE_XML_ROOT = writextag('Types', null, {\r\n\t'xmlns': XMLNS.CT,\r\n\t'xmlns:xsd': XMLNS.xsd,\r\n\t'xmlns:xsi': XMLNS.xsi\r\n});\r\n\r\nvar CTYPE_DEFAULTS = [\r\n\t['xml', 'application/xml'],\r\n\t['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'],\r\n\t['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'],\r\n\t/* from test files */\r\n\t['bmp', 'image/bmp'],\r\n\t['png', 'image/png'],\r\n\t['gif', 'image/gif'],\r\n\t['emf', 'image/x-emf'],\r\n\t['wmf', 'image/x-wmf'],\r\n\t['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'],\r\n\t['tif', 'image/tiff'], ['tiff', 'image/tiff'],\r\n\t['pdf', 'application/pdf'],\r\n\t['rels', type2ct.rels[0]]\r\n].map(function(x) {\r\n\treturn writextag('Default', null, {'Extension':x[0], 'ContentType': x[1]});\r\n});\r\n\r\nfunction write_ct(ct, opts) {\r\n\tvar o = [], v;\r\n\to[o.length] = (XML_HEADER);\r\n\to[o.length] = (CTYPE_XML_ROOT);\r\n\to = o.concat(CTYPE_DEFAULTS);\r\n\tvar f1 = function(w) {\r\n\t\tif(ct[w] && ct[w].length > 0) {\r\n\t\t\tv = ct[w][0];\r\n\t\t\to[o.length] = (writextag('Override', null, {\r\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\r\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType || 'xlsx']\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\tvar f2 = function(w) {\r\n\t\t(ct[w]||[]).forEach(function(v) {\r\n\t\t\to[o.length] = (writextag('Override', null, {\r\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\r\n\t\t\t\t'ContentType': CT_LIST[w][opts.bookType || 'xlsx']\r\n\t\t\t}));\r\n\t\t});\r\n\t};\r\n\tvar f3 = function(t) {\r\n\t\t(ct[t]||[]).forEach(function(v) {\r\n\t\t\to[o.length] = (writextag('Override', null, {\r\n\t\t\t\t'PartName': (v[0] == '/' ? \"\":\"/\") + v,\r\n\t\t\t\t'ContentType': type2ct[t][0]\r\n\t\t\t}));\r\n\t\t});\r\n\t};\r\n\tf1('workbooks');\r\n\tf2('sheets');\r\n\tf2('charts');\r\n\tf3('themes');\r\n\t['strs', 'styles'].forEach(f1);\r\n\t['coreprops', 'extprops', 'custprops'].forEach(f3);\r\n\tf3('vba');\r\n\tf3('comments');\r\n\tf3('drawings');\r\n\tif(o.length>2){ o[o.length] = ('</Types>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n/* 9.3 Relationships */\r\nvar RELS = ({\r\n\tWB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n\tSHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\r\n\tHLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\r\n\tVML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\r\n\tVBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\r\n});\r\n\r\n/* 9.3.3 Representing Relationships */\r\nfunction get_rels_path(file) {\r\n\tvar n = file.lastIndexOf(\"/\");\r\n\treturn file.slice(0,n+1) + '_rels/' + file.slice(n+1) + \".rels\";\r\n}\r\n\r\nfunction parse_rels(data, currentFilePath) {\r\n\tif (!data) return data;\r\n\tif (currentFilePath.charAt(0) !== '/') {\r\n\t\tcurrentFilePath = '/'+currentFilePath;\r\n\t}\r\n\tvar rels = {};\r\n\tvar hash = {};\r\n\r\n\t(data.match(tagregex)||[]).forEach(function(x) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\t/* 9.3.2.2 OPC_Relationships */\r\n\t\tif (y[0] === '<Relationship') {\r\n\t\t\tvar rel = {}; rel.Type = y.Type; rel.Target = y.Target; rel.Id = y.Id; rel.TargetMode = y.TargetMode;\r\n\t\t\tvar canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\r\n\t\t\trels[canonictarget] = rel;\r\n\t\t\thash[y.Id] = rel;\r\n\t\t}\r\n\t});\r\n\trels[\"!id\"] = hash;\r\n\treturn rels;\r\n}\r\n\r\nXMLNS.RELS = 'http://schemas.openxmlformats.org/package/2006/relationships';\r\n\r\nvar RELS_ROOT = writextag('Relationships', null, {\r\n\t//'xmlns:ns0': XMLNS.RELS,\r\n\t'xmlns': XMLNS.RELS\r\n});\r\n\r\n/* TODO */\r\nfunction write_rels(rels) {\r\n\tvar o = [XML_HEADER, RELS_ROOT];\r\n\tkeys(rels['!id']).forEach(function(rid) {\r\n\t\to[o.length] = (writextag('Relationship', null, rels['!id'][rid]));\r\n\t});\r\n\tif(o.length>2){ o[o.length] = ('</Relationships>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n\r\nfunction add_rels(rels, rId, f, type, relobj) {\r\n\tif(!relobj) relobj = {};\r\n\tif(!rels['!id']) rels['!id'] = {};\r\n\tif(rId < 0) for(rId = 1; rels['!id']['rId' + rId]; ++rId){/* empty */}\r\n\trelobj.Id = 'rId' + rId;\r\n\trelobj.Type = type;\r\n\trelobj.Target = f;\r\n\tif(relobj.Type == RELS.HLINK) relobj.TargetMode = \"External\";\r\n\tif(rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\r\n\trels['!id'][relobj.Id] = relobj;\r\n\trels[('/' + relobj.Target).replace(\"//\",\"/\")] = relobj;\r\n\treturn rId;\r\n}\r\n/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\r\n/* Part 3 Section 4 Manifest File */\r\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\r\nfunction parse_manifest(d, opts) {\r\n\tvar str = xlml_normalize(d);\r\n\tvar Rn;\r\n\tvar FEtag;\r\n\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\r\n\t\tcase 'manifest': break; // 4.2 <manifest:manifest>\r\n\t\tcase 'file-entry': // 4.3 <manifest:file-entry>\r\n\t\t\tFEtag = parsexmltag(Rn[0], false);\r\n\t\t\tif(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\r\n\t\t\tbreak;\r\n\t\tcase 'encryption-data': // 4.4 <manifest:encryption-data>\r\n\t\tcase 'algorithm': // 4.5 <manifest:algorithm>\r\n\t\tcase 'start-key-generation': // 4.6 <manifest:start-key-generation>\r\n\t\tcase 'key-derivation': // 4.7 <manifest:key-derivation>\r\n\t\t\tthrow new Error(\"Unsupported ODS Encryption\");\r\n\t\tdefault: if(opts && opts.WTF) throw Rn;\r\n\t}\r\n}\r\n\r\nfunction write_manifest(manifest) {\r\n\tvar o = [XML_HEADER];\r\n\to.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\r\n\to.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\r\n\tfor(var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\r\n\to.push('</manifest:manifest>');\r\n\treturn o.join(\"\");\r\n}\r\n\r\n/* Part 3 Section 6 Metadata Manifest File */\r\nfunction write_rdf_type(file, res, tag) {\r\n\treturn [\r\n\t\t'  <rdf:Description rdf:about=\"' + file + '\">\\n',\r\n\t\t'    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + '#' + res + '\"/>\\n',\r\n\t\t'  </rdf:Description>\\n'\r\n\t].join(\"\");\r\n}\r\nfunction write_rdf_has(base, file) {\r\n\treturn [\r\n\t\t'  <rdf:Description rdf:about=\"' + base + '\">\\n',\r\n\t\t'    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n',\r\n\t\t'  </rdf:Description>\\n'\r\n\t].join(\"\");\r\n}\r\nfunction write_rdf(rdf) {\r\n\tvar o = [XML_HEADER];\r\n\to.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\r\n\tfor(var i = 0; i != rdf.length; ++i) {\r\n\t\to.push(write_rdf_type(rdf[i][0], rdf[i][1]));\r\n\t\to.push(write_rdf_has(\"\",rdf[i][0]));\r\n\t}\r\n\to.push(write_rdf_type(\"\",\"Document\", \"pkg\"));\r\n\to.push('</rdf:RDF>');\r\n\treturn o.join(\"\");\r\n}\r\n/* TODO: pull properties */\r\nvar write_meta_ods = (function() {\r\n\tvar payload = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>Sheet' + 'JS ' + XLSX.version + '</meta:generator></office:meta></office:document-meta>';\r\n\treturn function wmo() {\r\n\t\treturn payload;\r\n\t};\r\n})();\r\n\r\n/* ECMA-376 Part II 11.1 Core Properties Part */\r\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\r\nvar CORE_PROPS = [\r\n\t[\"cp:category\", \"Category\"],\r\n\t[\"cp:contentStatus\", \"ContentStatus\"],\r\n\t[\"cp:keywords\", \"Keywords\"],\r\n\t[\"cp:lastModifiedBy\", \"LastAuthor\"],\r\n\t[\"cp:lastPrinted\", \"LastPrinted\"],\r\n\t[\"cp:revision\", \"RevNumber\"],\r\n\t[\"cp:version\", \"Version\"],\r\n\t[\"dc:creator\", \"Author\"],\r\n\t[\"dc:description\", \"Comments\"],\r\n\t[\"dc:identifier\", \"Identifier\"],\r\n\t[\"dc:language\", \"Language\"],\r\n\t[\"dc:subject\", \"Subject\"],\r\n\t[\"dc:title\", \"Title\"],\r\n\t[\"dcterms:created\", \"CreatedDate\", 'date'],\r\n\t[\"dcterms:modified\", \"ModifiedDate\", 'date']\r\n];\r\n\r\nXMLNS.CORE_PROPS = \"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\";\r\nRELS.CORE_PROPS  = 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties';\r\n\r\nvar CORE_PROPS_REGEX = (function() {\r\n\tvar r = new Array(CORE_PROPS.length);\r\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\r\n\t\tvar f = CORE_PROPS[i];\r\n\t\tvar g = \"(?:\"+ f[0].slice(0,f[0].indexOf(\":\")) +\":)\"+ f[0].slice(f[0].indexOf(\":\")+1);\r\n\t\tr[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\r\n\t}\r\n\treturn r;\r\n})();\r\n\r\nfunction parse_core_props(data) {\r\n\tvar p = {};\r\n\tdata = utf8read(data);\r\n\r\n\tfor(var i = 0; i < CORE_PROPS.length; ++i) {\r\n\t\tvar f = CORE_PROPS[i], cur = data.match(CORE_PROPS_REGEX[i]);\r\n\t\tif(cur != null && cur.length > 0) p[f[1]] = cur[1];\r\n\t\tif(f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate(p[f[1]]);\r\n\t}\r\n\r\n\treturn p;\r\n}\r\n\r\nvar CORE_PROPS_XML_ROOT = writextag('cp:coreProperties', null, {\r\n\t//'xmlns': XMLNS.CORE_PROPS,\r\n\t'xmlns:cp': XMLNS.CORE_PROPS,\r\n\t'xmlns:dc': XMLNS.dc,\r\n\t'xmlns:dcterms': XMLNS.dcterms,\r\n\t'xmlns:dcmitype': XMLNS.dcmitype,\r\n\t'xmlns:xsi': XMLNS.xsi\r\n});\r\n\r\nfunction cp_doit(f, g, h, o, p) {\r\n\tif(p[f] != null || g == null || g === \"\") return;\r\n\tp[f] = g;\r\n\to[o.length] = (h ? writextag(f,g,h) : writetag(f,g));\r\n}\r\n\r\nfunction write_core_props(cp, _opts) {\r\n\tvar opts = _opts || {};\r\n\tvar o = [XML_HEADER, CORE_PROPS_XML_ROOT], p = {};\r\n\tif(!cp && !opts.Props) return o.join(\"\");\r\n\r\n\tif(cp) {\r\n\t\tif(cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\r\n\t\tif(cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\"xsi:type\":\"dcterms:W3CDTF\"}, o, p);\r\n\t}\r\n\r\n\tfor(var i = 0; i != CORE_PROPS.length; ++i) {\r\n\t\tvar f = CORE_PROPS[i];\r\n\t\tvar v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\r\n\t\tif(v === true) v = \"1\";\r\n\t\telse if(v === false) v = \"0\";\r\n\t\telse if(typeof v == \"number\") v = String(v);\r\n\t\tif(v != null) cp_doit(f[0], v, null, o, p);\r\n\t}\r\n\tif(o.length>2){ o[o.length] = ('</cp:coreProperties>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n/* 15.2.12.3 Extended File Properties Part */\r\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\r\nvar EXT_PROPS = [\r\n\t[\"Application\", \"Application\", \"string\"],\r\n\t[\"AppVersion\", \"AppVersion\", \"string\"],\r\n\t[\"Company\", \"Company\", \"string\"],\r\n\t[\"DocSecurity\", \"DocSecurity\", \"string\"],\r\n\t[\"Manager\", \"Manager\", \"string\"],\r\n\t[\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"],\r\n\t[\"SharedDoc\", \"SharedDoc\", \"bool\"],\r\n\t[\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"],\r\n\t[\"ScaleCrop\", \"ScaleCrop\", \"bool\"],\r\n\t[\"HeadingPairs\", \"HeadingPairs\", \"raw\"],\r\n\t[\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]\r\n];\r\n\r\nXMLNS.EXT_PROPS = \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\";\r\nRELS.EXT_PROPS  = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties';\r\n\r\nfunction parse_ext_props(data, p, opts) {\r\n\tvar q = {}; if(!p) p = {};\r\n\tdata = utf8read(data);\r\n\r\n\tEXT_PROPS.forEach(function(f) {\r\n\t\tswitch(f[2]) {\r\n\t\t\tcase \"string\": p[f[1]] = (data.match(matchtag(f[0]))||[])[1]; break;\r\n\t\t\tcase \"bool\": p[f[1]] = (data.match(matchtag(f[0]))||[])[1] === \"true\"; break;\r\n\t\t\tcase \"raw\":\r\n\t\t\t\tvar cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\r\n\t\t\t\tif(cur && cur.length > 0) q[f[1]] = cur[1];\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n\r\n\tif(q.HeadingPairs && q.TitlesOfParts) {\r\n\t\tvar v = parseVector(q.HeadingPairs, opts);\r\n\t\tvar parts = parseVector(q.TitlesOfParts, opts).map(function (x) { return x.v; });\r\n\t\tvar idx = 0, len = 0;\r\n\t\tif(parts.length > 0) for(var i = 0; i !== v.length; i += 2) {\r\n\t\t\tlen = +(v[i+1].v);\r\n\t\t\tswitch(v[i].v) {\r\n\t\t\t\tcase \"Worksheets\":\r\n\t\t\t\tcase \"工作表\":\r\n\t\t\t\tcase \"Листы\":\r\n\t\t\t\tcase \"أوراق العمل\":\r\n\t\t\t\tcase \"ワークシート\":\r\n\t\t\t\tcase \"גליונות עבודה\":\r\n\t\t\t\tcase \"Arbeitsblätter\":\r\n\t\t\t\tcase \"Çalışma Sayfaları\":\r\n\t\t\t\tcase \"Feuilles de calcul\":\r\n\t\t\t\tcase \"Fogli di lavoro\":\r\n\t\t\t\tcase \"Folhas de cálculo\":\r\n\t\t\t\tcase \"Planilhas\":\r\n\t\t\t\tcase \"Regneark\":\r\n\t\t\t\tcase \"Werkbladen\":\r\n\t\t\t\t\tp.Worksheets = len;\r\n\t\t\t\t\tp.SheetNames = parts.slice(idx, idx + len);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"Named Ranges\":\r\n\t\t\t\tcase \"名前付き一覧\":\r\n\t\t\t\tcase \"Benannte Bereiche\":\r\n\t\t\t\tcase \"Navngivne områder\":\r\n\t\t\t\t\tp.NamedRanges = len;\r\n\t\t\t\t\tp.DefinedNames = parts.slice(idx, idx + len);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"Charts\":\r\n\t\t\t\tcase \"Diagramme\":\r\n\t\t\t\t\tp.Chartsheets = len;\r\n\t\t\t\t\tp.ChartNames = parts.slice(idx, idx + len);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tidx += len;\r\n\t\t}\r\n\t}\r\n\r\n\treturn p;\r\n}\r\n\r\nvar EXT_PROPS_XML_ROOT = writextag('Properties', null, {\r\n\t'xmlns': XMLNS.EXT_PROPS,\r\n\t'xmlns:vt': XMLNS.vt\r\n});\r\n\r\nfunction write_ext_props(cp) {\r\n\tvar o = [], W = writextag;\r\n\tif(!cp) cp = {};\r\n\tcp.Application = \"SheetJS\";\r\n\to[o.length] = (XML_HEADER);\r\n\to[o.length] = (EXT_PROPS_XML_ROOT);\r\n\r\n\tEXT_PROPS.forEach(function(f) {\r\n\t\tif(cp[f[1]] === undefined) return;\r\n\t\tvar v;\r\n\t\tswitch(f[2]) {\r\n\t\t\tcase 'string': v = String(cp[f[1]]); break;\r\n\t\t\tcase 'bool': v = cp[f[1]] ? 'true' : 'false'; break;\r\n\t\t}\r\n\t\tif(v !== undefined) o[o.length] = (W(f[0], v));\r\n\t});\r\n\r\n\t/* TODO: HeadingPairs, TitlesOfParts */\r\n\to[o.length] = (W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>')+W('vt:variant', W('vt:i4', String(cp.Worksheets))), {size:2, baseType:\"variant\"})));\r\n\to[o.length] = (W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function(s) { return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\"; }).join(\"\"), {size: cp.Worksheets, baseType:\"lpstr\"})));\r\n\tif(o.length>2){ o[o.length] = ('</Properties>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n/* 15.2.12.2 Custom File Properties Part */\r\nXMLNS.CUST_PROPS = \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\";\r\nRELS.CUST_PROPS  = 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties';\r\n\r\nvar custregex = /<[^>]+>[^<]*/g;\r\nfunction parse_cust_props(data, opts) {\r\n\tvar p = {}, name = \"\";\r\n\tvar m = data.match(custregex);\r\n\tif(m) for(var i = 0; i != m.length; ++i) {\r\n\t\tvar x = m[i], y = parsexmltag(x);\r\n\t\tswitch(y[0]) {\r\n\t\t\tcase '<?xml': break;\r\n\t\t\tcase '<Properties': break;\r\n\t\t\tcase '<property': name = y.name; break;\r\n\t\t\tcase '</property>': name = null; break;\r\n\t\t\tdefault: if (x.indexOf('<vt:') === 0) {\r\n\t\t\t\tvar toks = x.split('>');\r\n\t\t\t\tvar type = toks[0].slice(4), text = toks[1];\r\n\t\t\t\t/* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase 'lpstr': case 'bstr': case 'lpwstr':\r\n\t\t\t\t\t\tp[name] = unescapexml(text);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'bool':\r\n\t\t\t\t\t\tp[name] = parsexmlbool(text);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'i1': case 'i2': case 'i4': case 'i8': case 'int': case 'uint':\r\n\t\t\t\t\t\tp[name] = parseInt(text, 10);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'r4': case 'r8': case 'decimal':\r\n\t\t\t\t\t\tp[name] = parseFloat(text);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'filetime': case 'date':\r\n\t\t\t\t\t\tp[name] = parseDate(text);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cy': case 'error':\r\n\t\t\t\t\t\tp[name] = unescapexml(text);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(type.slice(-1) == '/') break;\r\n\t\t\t\t\t\tif(opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\r\n\t\t\t\t}\r\n\t\t\t} else if(x.slice(0,2) === \"</\") {/* empty */\r\n\t\t\t} else if(opts.WTF) throw new Error(x);\r\n\t\t}\r\n\t}\r\n\treturn p;\r\n}\r\n\r\nvar CUST_PROPS_XML_ROOT = writextag('Properties', null, {\r\n\t'xmlns': XMLNS.CUST_PROPS,\r\n\t'xmlns:vt': XMLNS.vt\r\n});\r\n\r\nfunction write_cust_props(cp) {\r\n\tvar o = [XML_HEADER, CUST_PROPS_XML_ROOT];\r\n\tif(!cp) return o.join(\"\");\r\n\tvar pid = 1;\r\n\tkeys(cp).forEach(function custprop(k) { ++pid;\r\n\t\t// $FlowIgnore\r\n\t\to[o.length] = (writextag('property', write_vt(cp[k]), {\r\n\t\t\t'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\r\n\t\t\t'pid': pid,\r\n\t\t\t'name': k\r\n\t\t}));\r\n\t});\r\n\tif(o.length>2){ o[o.length] = '</Properties>'; o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n/* Common Name -> XLML Name */\r\nvar XLMLDocPropsMap = {\r\n\tTitle: 'Title',\r\n\tSubject: 'Subject',\r\n\tAuthor: 'Author',\r\n\tKeywords: 'Keywords',\r\n\tComments: 'Description',\r\n\tLastAuthor: 'LastAuthor',\r\n\tRevNumber: 'Revision',\r\n\tApplication: 'AppName',\r\n\t/* TotalTime: 'TotalTime', */\r\n\tLastPrinted: 'LastPrinted',\r\n\tCreatedDate: 'Created',\r\n\tModifiedDate: 'LastSaved',\r\n\t/* Pages */\r\n\t/* Words */\r\n\t/* Characters */\r\n\tCategory: 'Category',\r\n\t/* PresentationFormat */\r\n\tManager: 'Manager',\r\n\tCompany: 'Company',\r\n\t/* Guid */\r\n\t/* HyperlinkBase */\r\n\t/* Bytes */\r\n\t/* Lines */\r\n\t/* Paragraphs */\r\n\t/* CharactersWithSpaces */\r\n\tAppVersion: 'Version',\r\n\r\n\tContentStatus: 'ContentStatus', /* NOTE: missing from schema */\r\n\tIdentifier: 'Identifier', /* NOTE: missing from schema */\r\n\tLanguage: 'Language' /* NOTE: missing from schema */\r\n};\r\nvar evert_XLMLDPM = evert(XLMLDocPropsMap);\r\n\r\nfunction xlml_set_prop(Props, tag, val) {\r\n\ttag = evert_XLMLDPM[tag] || tag;\r\n\tProps[tag] = val;\r\n}\r\n\r\nfunction xlml_write_docprops(Props, opts) {\r\n\tvar o = [];\r\n\tkeys(XLMLDocPropsMap).map(function(m) {\r\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(CORE_PROPS[i][1] == m) return CORE_PROPS[i];\r\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(EXT_PROPS[i][1] == m) return EXT_PROPS[i];\r\n\t\tthrow m;\r\n\t}).forEach(function(p) {\r\n\t\tif(Props[p[1]] == null) return;\r\n\t\tvar m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\r\n\t\tswitch(p[2]) {\r\n\t\t\tcase 'date': m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"Z\"); break;\r\n\t\t}\r\n\t\tif(typeof m == 'number') m = String(m);\r\n\t\telse if(m === true || m === false) { m = m ? \"1\" : \"0\"; }\r\n\t\telse if(m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/,\"\");\r\n\t\to.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\r\n\t});\r\n\treturn writextag('DocumentProperties', o.join(\"\"), {xmlns:XLMLNS.o });\r\n}\r\nfunction xlml_write_custprops(Props, Custprops) {\r\n\tvar BLACKLIST = [\"Worksheets\",\"SheetNames\"];\r\n\tvar T = 'CustomDocumentProperties';\r\n\tvar o = [];\r\n\tif(Props) keys(Props).forEach(function(k) {\r\nif(!Props.hasOwnProperty(k)) return;\r\n\t\tfor(var i = 0; i < CORE_PROPS.length; ++i) if(k == CORE_PROPS[i][1]) return;\r\n\t\tfor(i = 0; i < EXT_PROPS.length; ++i) if(k == EXT_PROPS[i][1]) return;\r\n\t\tfor(i = 0; i < BLACKLIST.length; ++i) if(k == BLACKLIST[i]) return;\r\n\r\n\t\tvar m = Props[k];\r\n\t\tvar t = \"string\";\r\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\r\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\r\n\t\telse m = String(m);\r\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\r\n\t});\r\n\tif(Custprops) keys(Custprops).forEach(function(k) {\r\nif(!Custprops.hasOwnProperty(k)) return;\r\n\t\tif(Props && Props.hasOwnProperty(k)) return;\r\n\t\tvar m = Custprops[k];\r\n\t\tvar t = \"string\";\r\n\t\tif(typeof m == 'number') { t = \"float\"; m = String(m); }\r\n\t\telse if(m === true || m === false) { t = \"boolean\"; m = m ? \"1\" : \"0\"; }\r\n\t\telse if(m instanceof Date) { t = \"dateTime.tz\"; m = m.toISOString(); }\r\n\t\telse m = String(m);\r\n\t\to.push(writextag(escapexmltag(k), m, {\"dt:dt\":t}));\r\n\t});\r\n\treturn '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\r\n}\r\n/* [MS-DTYP] 2.3.3 FILETIME */\r\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\r\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\r\nfunction parse_FILETIME(blob) {\r\n\tvar dwLowDateTime = blob.read_shift(4), dwHighDateTime = blob.read_shift(4);\r\n\treturn new Date(((dwHighDateTime/1e7*Math.pow(2,32) + dwLowDateTime/1e7) - 11644473600)*1000).toISOString().replace(/\\.000/,\"\");\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\r\nfunction parse_lpstr(blob, type, pad) {\r\n\tvar start = blob.l;\r\n\tvar str = blob.read_shift(0, 'lpstr-cp');\r\n\tif(pad) while((blob.l - start) & 3) ++blob.l;\r\n\treturn str;\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\r\nfunction parse_lpwstr(blob, type, pad) {\r\n\tvar str = blob.read_shift(0, 'lpwstr');\r\n\tif(pad) blob.l += (4 - ((str.length+1) & 3)) & 3;\r\n\treturn str;\r\n}\r\n\r\n\r\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\r\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\r\nfunction parse_VtStringBase(blob, stringType, pad) {\r\n\tif(stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\r\n\treturn parse_lpstr(blob, stringType, pad);\r\n}\r\n\r\nfunction parse_VtString(blob, t, pad) { return parse_VtStringBase(blob, t, pad === false ? 0: 4); }\r\nfunction parse_VtUnalignedString(blob, t) { if(!t) throw new Error(\"VtUnalignedString must have positive length\"); return parse_VtStringBase(blob, t, 0); }\r\n\r\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\r\nfunction parse_VtVecUnalignedLpstrValue(blob) {\r\n\tvar length = blob.read_shift(4);\r\n\tvar ret = [];\r\n\tfor(var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0,'');\r\n\treturn ret;\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.3.1.10 VtVecUnalignedLpstr */\r\nfunction parse_VtVecUnalignedLpstr(blob) {\r\n\treturn parse_VtVecUnalignedLpstrValue(blob);\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\r\nfunction parse_VtHeadingPair(blob) {\r\n\tvar headingString = parse_TypedPropertyValue(blob, VT_USTR);\r\n\tvar headerParts = parse_TypedPropertyValue(blob, VT_I4);\r\n\treturn [headingString, headerParts];\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\r\nfunction parse_VtVecHeadingPairValue(blob) {\r\n\tvar cElements = blob.read_shift(4);\r\n\tvar out = [];\r\n\tfor(var i = 0; i != cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\r\n\treturn out;\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.3.1.15 VtVecHeadingPair */\r\nfunction parse_VtVecHeadingPair(blob) {\r\n\t// NOTE: When invoked, wType & padding were already consumed\r\n\treturn parse_VtVecHeadingPairValue(blob);\r\n}\r\n\r\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\r\nfunction parse_dictionary(blob,CodePage) {\r\n\tvar cnt = blob.read_shift(4);\r\n\tvar dict = ({});\r\n\tfor(var j = 0; j != cnt; ++j) {\r\n\t\tvar pid = blob.read_shift(4);\r\n\t\tvar len = blob.read_shift(4);\r\n\t\tdict[pid] = blob.read_shift(len, (CodePage === 0x4B0 ?'utf16le':'utf8')).replace(chr0,'').replace(chr1,'!');\r\n\t}\r\n\tif(blob.l & 3) blob.l = (blob.l>>2+1)<<2;\r\n\treturn dict;\r\n}\r\n\r\n/* [MS-OLEPS] 2.9 BLOB */\r\nfunction parse_BLOB(blob) {\r\n\tvar size = blob.read_shift(4);\r\n\tvar bytes = blob.slice(blob.l,blob.l+size);\r\n\tblob.l += size;\r\n\tif((size & 3) > 0) blob.l += (4 - (size & 3)) & 3;\r\n\treturn bytes;\r\n}\r\n\r\n/* [MS-OLEPS] 2.11 ClipboardData */\r\nfunction parse_ClipboardData(blob) {\r\n\t// TODO\r\n\tvar o = {};\r\n\to.Size = blob.read_shift(4);\r\n\t//o.Format = blob.read_shift(4);\r\n\tblob.l += o.Size + 3 - (o.Size - 1) % 4;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\r\nfunction parse_TypedPropertyValue(blob, type, _opts) {\r\n\tvar t = blob.read_shift(2), ret, opts = _opts||{};\r\n\tblob.l += 2;\r\n\tif(type !== VT_VARIANT)\r\n\tif(t !== type && VT_CUSTOM.indexOf(type)===-1) throw new Error('Expected type ' + type + ' saw ' + t);\r\n\tswitch(type === VT_VARIANT ? t : type) {\r\n\t\tcase 0x02 /*VT_I2*/: ret = blob.read_shift(2, 'i'); if(!opts.raw) blob.l += 2; return ret;\r\n\t\tcase 0x03 /*VT_I4*/: ret = blob.read_shift(4, 'i'); return ret;\r\n\t\tcase 0x0B /*VT_BOOL*/: return blob.read_shift(4) !== 0x0;\r\n\t\tcase 0x13 /*VT_UI4*/: ret = blob.read_shift(4); return ret;\r\n\t\tcase 0x1E /*VT_LPSTR*/: return parse_lpstr(blob, t, 4).replace(chr0,'');\r\n\t\tcase 0x1F /*VT_LPWSTR*/: return parse_lpwstr(blob);\r\n\t\tcase 0x40 /*VT_FILETIME*/: return parse_FILETIME(blob);\r\n\t\tcase 0x41 /*VT_BLOB*/: return parse_BLOB(blob);\r\n\t\tcase 0x47 /*VT_CF*/: return parse_ClipboardData(blob);\r\n\t\tcase 0x50 /*VT_STRING*/: return parse_VtString(blob, t, !opts.raw).replace(chr0,'');\r\n\t\tcase 0x51 /*VT_USTR*/: return parse_VtUnalignedString(blob, t/*, 4*/).replace(chr0,'');\r\n\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: return parse_VtVecHeadingPair(blob);\r\n\t\tcase 0x101E /*VT_LPSTR*/: return parse_VtVecUnalignedLpstr(blob);\r\n\t\tdefault: throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\r\n\t}\r\n}\r\n\r\n/* [MS-OLEPS] 2.20 PropertySet */\r\nfunction parse_PropertySet(blob, PIDSI) {\r\n\tvar start_addr = blob.l;\r\n\tvar size = blob.read_shift(4);\r\n\tvar NumProps = blob.read_shift(4);\r\n\tvar Props = [], i = 0;\r\n\tvar CodePage = 0;\r\n\tvar Dictionary = -1, DictObj = ({});\r\n\tfor(i = 0; i != NumProps; ++i) {\r\n\t\tvar PropID = blob.read_shift(4);\r\n\t\tvar Offset = blob.read_shift(4);\r\n\t\tProps[i] = [PropID, Offset + start_addr];\r\n\t}\r\n\tProps.sort(function(x,y) { return x[1] - y[1]; });\r\n\tvar PropH = {};\r\n\tfor(i = 0; i != NumProps; ++i) {\r\n\t\tif(blob.l !== Props[i][1]) {\r\n\t\t\tvar fail = true;\r\n\t\t\tif(i>0 && PIDSI) switch(PIDSI[Props[i-1][0]].t) {\r\n\t\t\t\tcase 0x02 /*VT_I2*/: if(blob.l+2 === Props[i][1]) { blob.l+=2; fail = false; } break;\r\n\t\t\t\tcase 0x50 /*VT_STRING*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\r\n\t\t\t\tcase 0x100C /*VT_VECTOR|VT_VARIANT*/: if(blob.l <= Props[i][1]) { blob.l=Props[i][1]; fail = false; } break;\r\n\t\t\t}\r\n\t\t\tif((!PIDSI||i==0) && blob.l <= Props[i][1]) { fail=false; blob.l = Props[i][1]; }\r\n\t\t\tif(fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\r\n\t\t}\r\n\t\tif(PIDSI) {\r\n\t\t\tvar piddsi = PIDSI[Props[i][0]];\r\n\t\t\tPropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {raw:true});\r\n\t\t\tif(piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + String(PropH[piddsi.n] & 0xFFFF);\r\n\t\t\tif(piddsi.n == \"CodePage\") switch(PropH[piddsi.n]) {\r\n\t\t\t\tcase 0: PropH[piddsi.n] = 1252;\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase 874:\r\n\t\t\t\tcase 932:\r\n\t\t\t\tcase 936:\r\n\t\t\t\tcase 949:\r\n\t\t\t\tcase 950:\r\n\t\t\t\tcase 1250:\r\n\t\t\t\tcase 1251:\r\n\t\t\t\tcase 1253:\r\n\t\t\t\tcase 1254:\r\n\t\t\t\tcase 1255:\r\n\t\t\t\tcase 1256:\r\n\t\t\t\tcase 1257:\r\n\t\t\t\tcase 1258:\r\n\t\t\t\tcase 10000:\r\n\t\t\t\tcase 1200:\r\n\t\t\t\tcase 1201:\r\n\t\t\t\tcase 1252:\r\n\t\t\t\tcase 65000: case -536:\r\n\t\t\t\tcase 65001: case -535:\r\n\t\t\t\t\tset_cp(CodePage = (PropH[piddsi.n]>>>0) & 0xFFFF); break;\r\n\t\t\t\tdefault: throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(Props[i][0] === 0x1) {\r\n\t\t\t\tCodePage = PropH.CodePage = (parse_TypedPropertyValue(blob, VT_I2));\r\n\t\t\t\tset_cp(CodePage);\r\n\t\t\t\tif(Dictionary !== -1) {\r\n\t\t\t\t\tvar oldpos = blob.l;\r\n\t\t\t\t\tblob.l = Props[Dictionary][1];\r\n\t\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\r\n\t\t\t\t\tblob.l = oldpos;\r\n\t\t\t\t}\r\n\t\t\t} else if(Props[i][0] === 0) {\r\n\t\t\t\tif(CodePage === 0) { Dictionary = i; blob.l = Props[i+1][1]; continue; }\r\n\t\t\t\tDictObj = parse_dictionary(blob,CodePage);\r\n\t\t\t} else {\r\n\t\t\t\tvar name = DictObj[Props[i][0]];\r\n\t\t\t\tvar val;\r\n\t\t\t\t/* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\r\n\t\t\t\tswitch(blob[blob.l]) {\r\n\t\t\t\t\tcase 0x41 /*VT_BLOB*/: blob.l += 4; val = parse_BLOB(blob); break;\r\n\t\t\t\t\tcase 0x1E /*VT_LPSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]); break;\r\n\t\t\t\t\tcase 0x1F /*VT_LPWSTR*/: blob.l += 4; val = parse_VtString(blob, blob[blob.l-4]); break;\r\n\t\t\t\t\tcase 0x03 /*VT_I4*/: blob.l += 4; val = blob.read_shift(4, 'i'); break;\r\n\t\t\t\t\tcase 0x13 /*VT_UI4*/: blob.l += 4; val = blob.read_shift(4); break;\r\n\t\t\t\t\tcase 0x05 /*VT_R8*/: blob.l += 4; val = blob.read_shift(8, 'f'); break;\r\n\t\t\t\t\tcase 0x0B /*VT_BOOL*/: blob.l += 4; val = parsebool(blob, 4); break;\r\n\t\t\t\t\tcase 0x40 /*VT_FILETIME*/: blob.l += 4; val = parseDate(parse_FILETIME(blob)); break;\r\n\t\t\t\t\tdefault: throw new Error(\"unparsed value: \" + blob[blob.l]);\r\n\t\t\t\t}\r\n\t\t\t\tPropH[name] = val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tblob.l = start_addr + size; /* step ahead to skip padding */\r\n\treturn PropH;\r\n}\r\n\r\n/* [MS-OLEPS] 2.21 PropertySetStream */\r\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\r\n\tvar blob = file.content;\r\n\tif(!blob) return ({});\r\n\tprep_blob(blob, 0);\r\n\r\n\tvar NumSets, FMTID0, FMTID1, Offset0, Offset1 = 0;\r\n\tblob.chk('feff', 'Byte Order: ');\r\n\r\n\t/*var vers = */blob.read_shift(2); // TODO: check version\r\n\tvar SystemIdentifier = blob.read_shift(4);\r\n\tvar CLSID = blob.read_shift(16);\r\n\tif(CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\r\n\tNumSets = blob.read_shift(4);\r\n\tif(NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\r\n\tFMTID0 = blob.read_shift(16); Offset0 = blob.read_shift(4);\r\n\r\n\tif(NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);\r\n\telse if(NumSets === 2) { FMTID1 = blob.read_shift(16); Offset1 = blob.read_shift(4); }\r\n\tvar PSet0 = parse_PropertySet(blob, PIDSI);\r\n\r\n\tvar rval = ({ SystemIdentifier: SystemIdentifier });\r\n\tfor(var y in PSet0) rval[y] = PSet0[y];\r\n\t//rval.blob = blob;\r\n\trval.FMTID = FMTID0;\r\n\t//rval.PSet0 = PSet0;\r\n\tif(NumSets === 1) return rval;\r\n\tif(Offset1 - blob.l == 2) blob.l += 2;\r\n\tif(blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\r\n\tvar PSet1;\r\n\ttry { PSet1 = parse_PropertySet(blob, null); } catch(e) {/* empty */}\r\n\tfor(y in PSet1) rval[y] = PSet1[y];\r\n\trval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\r\n\treturn rval;\r\n}\r\n\r\n\r\nfunction parsenoop2(blob, length) { blob.read_shift(length); return null; }\r\nfunction writezeroes(n, o) { if(!o) o=new_buf(n); for(var j=0; j<n; ++j) o.write_shift(1, 0); return o; }\r\n\r\nfunction parslurp(blob, length, cb) {\r\n\tvar arr = [], target = blob.l + length;\r\n\twhile(blob.l < target) arr.push(cb(blob, target - blob.l));\r\n\tif(target !== blob.l) throw new Error(\"Slurp error\");\r\n\treturn arr;\r\n}\r\n\r\nfunction parsebool(blob, length) { return blob.read_shift(length) === 0x1; }\r\nfunction writebool(v, o) { if(!o) o=new_buf(2); o.write_shift(2, +!!v); return o; }\r\n\r\nfunction parseuint16(blob) { return blob.read_shift(2, 'u'); }\r\nfunction writeuint16(v, o) { if(!o) o=new_buf(2); o.write_shift(2, v); return o; }\r\nfunction parseuint16a(blob, length) { return parslurp(blob,length,parseuint16);}\r\n\r\n/* --- 2.5 Structures --- */\r\n\r\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\r\nfunction parse_Bes(blob) {\r\n\tvar v = blob.read_shift(1), t = blob.read_shift(1);\r\n\treturn t === 0x01 ? v : v === 0x01;\r\n}\r\nfunction write_Bes(v, t, o) {\r\n\tif(!o) o = new_buf(2);\r\n\to.write_shift(1, +v);\r\n\to.write_shift(1, ((t == 'e') ? 1 : 0));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\r\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\r\n\tvar cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\r\n\tvar encoding = 'sbcs-cont';\r\n\tvar cp = current_codepage;\r\n\tif(opts && opts.biff >= 8) current_codepage = 1200;\r\n\tif(!opts || opts.biff == 8 ) {\r\n\t\tvar fHighByte = blob.read_shift(1);\r\n\t\tif(fHighByte) { encoding = 'dbcs-cont'; }\r\n\t} else if(opts.biff == 12) {\r\n\t\tencoding = 'wstr';\r\n\t}\r\n\tif(opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\r\n\tvar o = cch ? blob.read_shift(cch, encoding) : \"\";\r\n\tcurrent_codepage = cp;\r\n\treturn o;\r\n}\r\n\r\n/* 2.5.293 XLUnicodeRichExtendedString */\r\nfunction parse_XLUnicodeRichExtendedString(blob) {\r\n\tvar cp = current_codepage;\r\n\tcurrent_codepage = 1200;\r\n\tvar cch = blob.read_shift(2), flags = blob.read_shift(1);\r\n\tvar /*fHighByte = flags & 0x1,*/ fExtSt = flags & 0x4, fRichSt = flags & 0x8;\r\n\tvar width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\r\n\tvar cRun = 0, cbExtRst;\r\n\tvar z = {};\r\n\tif(fRichSt) cRun = blob.read_shift(2);\r\n\tif(fExtSt) cbExtRst = blob.read_shift(4);\r\n\tvar encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\r\n\tvar msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\r\n\tif(fRichSt) blob.l += 4 * cRun; //TODO: parse this\r\n\tif(fExtSt) blob.l += cbExtRst; //TODO: parse this\r\n\tz.t = msg;\r\n\tif(!fRichSt) { z.raw = \"<t>\" + z.t + \"</t>\"; z.r = z.t; }\r\n\tcurrent_codepage = cp;\r\n\treturn z;\r\n}\r\n\r\n/* 2.5.296 XLUnicodeStringNoCch */\r\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\r\n\tvar retval;\r\n\tif(opts) {\r\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\r\n\t\tif(opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\r\n\t}\r\n\tvar fHighByte = blob.read_shift(1);\r\n\tif(fHighByte===0) { retval = blob.read_shift(cch, 'sbcs-cont'); }\r\n\telse { retval = blob.read_shift(cch, 'dbcs-cont'); }\r\n\treturn retval;\r\n}\r\n\r\n/* 2.5.294 XLUnicodeString */\r\nfunction parse_XLUnicodeString(blob, length, opts) {\r\n\tvar cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\r\n\tif(cch === 0) { blob.l++; return \"\"; }\r\n\treturn parse_XLUnicodeStringNoCch(blob, cch, opts);\r\n}\r\n/* BIFF5 override */\r\nfunction parse_XLUnicodeString2(blob, length, opts) {\r\n\tif(opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\r\n\tvar cch = blob.read_shift(1);\r\n\tif(cch === 0) { blob.l++; return \"\"; }\r\n\treturn blob.read_shift(cch, (opts.biff <= 4 || !blob.lens ) ? 'cpstr' : 'sbcs-cont');\r\n}\r\n/* TODO: BIFF5 and lower, codepage awareness */\r\nfunction write_XLUnicodeString(str, opts, o) {\r\n\tif(!o) o = new_buf(3 + 2 * str.length);\r\n\to.write_shift(2, str.length);\r\n\to.write_shift(1, 1);\r\n\to.write_shift(31, str, 'utf16le');\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.5.61 ControlInfo */\r\nfunction parse_ControlInfo(blob) {\r\n\tvar flags = blob.read_shift(1);\r\n\tblob.l++;\r\n\tvar accel = blob.read_shift(2);\r\n\tblob.l += 2;\r\n\treturn [flags, accel];\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\r\nfunction parse_URLMoniker(blob) {\r\n\tvar len = blob.read_shift(4), start = blob.l;\r\n\tvar extra = false;\r\n\tif(len > 24) {\r\n\t\t/* look ahead */\r\n\t\tblob.l += len - 24;\r\n\t\tif(blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\r\n\t\tblob.l = start;\r\n\t}\r\n\tvar url = blob.read_shift((extra?len-24:len)>>1, 'utf16le').replace(chr0,\"\");\r\n\tif(extra) blob.l += 24;\r\n\treturn url;\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\r\nfunction parse_FileMoniker(blob) {\r\n\tblob.l += 2; //var cAnti = blob.read_shift(2);\r\n\tvar ansiPath = blob.read_shift(0, 'lpstr-ansi');\r\n\tblob.l += 2; //var endServer = blob.read_shift(2);\r\n\tif(blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\r\n\tvar sz = blob.read_shift(4);\r\n\tif(sz === 0) return ansiPath.replace(/\\\\/g,\"/\");\r\n\tvar bytes = blob.read_shift(4);\r\n\tif(blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\r\n\tvar unicodePath = blob.read_shift(bytes>>1, 'utf16le').replace(chr0,\"\");\r\n\treturn unicodePath;\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\r\nfunction parse_HyperlinkMoniker(blob, length) {\r\n\tvar clsid = blob.read_shift(16); length -= 16;\r\n\tswitch(clsid) {\r\n\t\tcase \"e0c9ea79f9bace118c8200aa004ba90b\": return parse_URLMoniker(blob, length);\r\n\t\tcase \"0303000000000000c000000000000046\": return parse_FileMoniker(blob, length);\r\n\t\tdefault: throw new Error(\"Unsupported Moniker \" + clsid);\r\n\t}\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\r\nfunction parse_HyperlinkString(blob) {\r\n\tvar len = blob.read_shift(4);\r\n\tvar o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\r\nfunction parse_Hyperlink(blob, length) {\r\n\tvar end = blob.l + length;\r\n\tvar sVer = blob.read_shift(4);\r\n\tif(sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\r\n\tvar flags = blob.read_shift(2);\r\n\tblob.l += 2;\r\n\tvar displayName, targetFrameName, moniker, oleMoniker, Loc=\"\", guid, fileTime;\r\n\tif(flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\r\n\tif(flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\r\n\tif((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\r\n\tif((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\r\n\tif(flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\r\n\tif(flags & 0x0020) guid = blob.read_shift(16);\r\n\tif(flags & 0x0040) fileTime = parse_FILETIME(blob/*, 8*/);\r\n\tblob.l = end;\r\n\tvar target = targetFrameName||moniker||oleMoniker||\"\";\r\n\tif(target && Loc) target+=\"#\"+Loc;\r\n\tif(!target) target = \"#\" + Loc;\r\n\tvar out = ({Target:target});\r\n\tif(guid) out.guid = guid;\r\n\tif(fileTime) out.time = fileTime;\r\n\tif(displayName) out.Tooltip = displayName;\r\n\treturn out;\r\n}\r\nfunction write_Hyperlink(hl) {\r\n\tvar out = new_buf(512), i = 0;\r\n\tvar Target = hl.Target;\r\n\tvar F = Target.indexOf(\"#\") > -1 ? 0x1f : 0x17;\r\n\tswitch(Target.charAt(0)) { case \"#\": F=0x1c; break; case \".\": F&=~2; break; }\r\n\tout.write_shift(4,2); out.write_shift(4, F);\r\n\tvar data = [8,6815827,6619237,4849780,83]; for(i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\r\n\tif(F == 0x1C) {\r\n\t\tTarget = Target.slice(1);\r\n\t\tout.write_shift(4, Target.length + 1);\r\n\t\tfor(i = 0; i < Target.length; ++i) out.write_shift(2, Target.charCodeAt(i));\r\n\t\tout.write_shift(2, 0);\r\n\t} else if(F & 0x02) {\r\n\t\tdata = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\r\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\r\n\t\tout.write_shift(4, 2*(Target.length + 1));\r\n\t\tfor(i = 0; i < Target.length; ++i) out.write_shift(2, Target.charCodeAt(i));\r\n\t\tout.write_shift(2, 0);\r\n\t} else {\r\n\t\tdata = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\r\n\t\tfor(i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\r\n\t\tvar P = 0;\r\n\t\twhile(Target.slice(P*3,P*3+3)==\"../\"||Target.slice(P*3,P*3+3)==\"..\\\\\") ++P;\r\n\t\tout.write_shift(2, P);\r\n\t\tout.write_shift(4, Target.length + 1);\r\n\t\tfor(i = 0; i < Target.length; ++i) out.write_shift(1, Target.charCodeAt(i) & 0xFF);\r\n\t\tout.write_shift(1, 0);\r\n\t\tout.write_shift(2, 0xFFFF);\r\n\t\tout.write_shift(2, 0xDEAD);\r\n\t\tfor(i = 0; i < 6; ++i) out.write_shift(4, 0);\r\n\t}\r\n\treturn out.slice(0, out.l);\r\n}\r\n\r\n/* 2.5.178 LongRGBA */\r\nfunction parse_LongRGBA(blob) { var r = blob.read_shift(1), g = blob.read_shift(1), b = blob.read_shift(1), a = blob.read_shift(1); return [r,g,b,a]; }\r\n\r\n/* 2.5.177 LongRGB */\r\nfunction parse_LongRGB(blob, length) { var x = parse_LongRGBA(blob, length); x[3] = 0; return x; }\r\n\r\n\r\n/* [MS-XLS] 2.5.19 */\r\nfunction parse_XLSCell(blob) {\r\n\tvar rw = blob.read_shift(2); // 0-indexed\r\n\tvar col = blob.read_shift(2);\r\n\tvar ixfe = blob.read_shift(2);\r\n\treturn ({r:rw, c:col, ixfe:ixfe});\r\n}\r\nfunction write_XLSCell(R, C, ixfe, o) {\r\n\tif(!o) o = new_buf(6);\r\n\to.write_shift(2, R);\r\n\to.write_shift(2, C);\r\n\to.write_shift(2, ixfe||0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.5.134 */\r\nfunction parse_frtHeader(blob) {\r\n\tvar rt = blob.read_shift(2);\r\n\tvar flags = blob.read_shift(2); // TODO: parse these flags\r\n\tblob.l += 8;\r\n\treturn {type: rt, flags: flags};\r\n}\r\n\r\n\r\n\r\nfunction parse_OptXLUnicodeString(blob, length, opts) { return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts); }\r\n\r\n/* [MS-XLS] 2.5.344 */\r\nfunction parse_XTI(blob, length, opts) {\r\n\tvar w = opts.biff > 8 ? 4 : 2;\r\n\tvar iSupBook = blob.read_shift(w), itabFirst = blob.read_shift(w,'i'), itabLast = blob.read_shift(w,'i');\r\n\treturn [iSupBook, itabFirst, itabLast];\r\n}\r\n\r\n/* [MS-XLS] 2.5.218 */\r\nfunction parse_RkRec(blob) {\r\n\tvar ixfe = blob.read_shift(2);\r\n\tvar RK = parse_RkNumber(blob);\r\n\treturn [ixfe, RK];\r\n}\r\n\r\n/* [MS-XLS] 2.5.1 */\r\nfunction parse_AddinUdf(blob, length, opts) {\r\n\tblob.l += 4; length -= 4;\r\n\tvar l = blob.l + length;\r\n\tvar udfName = parse_ShortXLUnicodeString(blob, length, opts);\r\n\tvar cb = blob.read_shift(2);\r\n\tl -= blob.l;\r\n\tif(cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\r\n\tblob.l += cb;\r\n\treturn udfName;\r\n}\r\n\r\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\r\nfunction parse_Ref8U(blob) {\r\n\tvar rwFirst = blob.read_shift(2);\r\n\tvar rwLast = blob.read_shift(2);\r\n\tvar colFirst = blob.read_shift(2);\r\n\tvar colLast = blob.read_shift(2);\r\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\r\n}\r\nfunction write_Ref8U(r, o) {\r\n\tif(!o) o = new_buf(8);\r\n\to.write_shift(2, r.s.r);\r\n\to.write_shift(2, r.e.r);\r\n\to.write_shift(2, r.s.c);\r\n\to.write_shift(2, r.e.c);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.5.211 */\r\nfunction parse_RefU(blob) {\r\n\tvar rwFirst = blob.read_shift(2);\r\n\tvar rwLast = blob.read_shift(2);\r\n\tvar colFirst = blob.read_shift(1);\r\n\tvar colLast = blob.read_shift(1);\r\n\treturn {s:{c:colFirst, r:rwFirst}, e:{c:colLast,r:rwLast}};\r\n}\r\n\r\n/* [MS-XLS] 2.5.207 */\r\nvar parse_Ref = parse_RefU;\r\n\r\n/* [MS-XLS] 2.5.143 */\r\nfunction parse_FtCmo(blob) {\r\n\tblob.l += 4;\r\n\tvar ot = blob.read_shift(2);\r\n\tvar id = blob.read_shift(2);\r\n\tvar flags = blob.read_shift(2);\r\n\tblob.l+=12;\r\n\treturn [id, ot, flags];\r\n}\r\n\r\n/* [MS-XLS] 2.5.149 */\r\nfunction parse_FtNts(blob) {\r\n\tvar out = {};\r\n\tblob.l += 4;\r\n\tblob.l += 16; // GUID TODO\r\n\tout.fSharedNote = blob.read_shift(2);\r\n\tblob.l += 4;\r\n\treturn out;\r\n}\r\n\r\n/* [MS-XLS] 2.5.142 */\r\nfunction parse_FtCf(blob) {\r\n\tvar out = {};\r\n\tblob.l += 4;\r\n\tblob.cf = blob.read_shift(2);\r\n\treturn out;\r\n}\r\n\r\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\r\nfunction parse_FtSkip(blob) { blob.l += 2; blob.l += blob.read_shift(2); }\r\nvar FtTab = {\r\n0x00: parse_FtSkip,      /* FtEnd */\r\n0x04: parse_FtSkip,      /* FtMacro */\r\n0x05: parse_FtSkip,      /* FtButton */\r\n0x06: parse_FtSkip,      /* FtGmo */\r\n0x07: parse_FtCf,        /* FtCf */\r\n0x08: parse_FtSkip,      /* FtPioGrbit */\r\n0x09: parse_FtSkip,      /* FtPictFmla */\r\n0x0A: parse_FtSkip,      /* FtCbls */\r\n0x0B: parse_FtSkip,      /* FtRbo */\r\n0x0C: parse_FtSkip,      /* FtSbs */\r\n0x0D: parse_FtNts,       /* FtNts */\r\n0x0E: parse_FtSkip,      /* FtSbsFmla */\r\n0x0F: parse_FtSkip,      /* FtGboData */\r\n0x10: parse_FtSkip,      /* FtEdoData */\r\n0x11: parse_FtSkip,      /* FtRboData */\r\n0x12: parse_FtSkip,      /* FtCblsData */\r\n0x13: parse_FtSkip,      /* FtLbsData */\r\n0x14: parse_FtSkip,      /* FtCblsFmla */\r\n0x15: parse_FtCmo\r\n};\r\nfunction parse_FtArray(blob, length) {\r\n\tvar tgt = blob.l + length;\r\n\tvar fts = [];\r\n\twhile(blob.l < tgt) {\r\n\t\tvar ft = blob.read_shift(2);\r\n\t\tblob.l-=2;\r\n\t\ttry {\r\n\t\t\tfts.push(FtTab[ft](blob, tgt - blob.l));\r\n\t\t} catch(e) { blob.l = tgt; return fts; }\r\n\t}\r\n\tif(blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\r\n\treturn fts;\r\n}\r\n\r\n/* --- 2.4 Records --- */\r\n\r\n/* [MS-XLS] 2.4.21 */\r\nfunction parse_BOF(blob, length) {\r\n\tvar o = {BIFFVer:0, dt:0};\r\n\to.BIFFVer = blob.read_shift(2); length -= 2;\r\n\tif(length >= 2) { o.dt = blob.read_shift(2); blob.l -= 2; }\r\n\tswitch(o.BIFFVer) {\r\n\t\tcase 0x0600: /* BIFF8 */\r\n\t\tcase 0x0500: /* BIFF5 */\r\n\t\tcase 0x0400: /* BIFF4 */\r\n\t\tcase 0x0300: /* BIFF3 */\r\n\t\tcase 0x0200: /* BIFF2 */\r\n\t\tcase 0x0002: case 0x0007: /* BIFF2 */\r\n\t\t\tbreak;\r\n\t\tdefault: if(length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\r\n\t}\r\n\r\n\tblob.read_shift(length);\r\n\treturn o;\r\n}\r\nfunction write_BOF(wb, t, o) {\r\n\tvar h = 0x0600, w = 16;\r\n\tswitch(o.bookType) {\r\n\t\tcase 'biff8': break;\r\n\t\tcase 'biff5': h = 0x0500; w = 8; break;\r\n\t\tcase 'biff4': h = 0x0004; w = 6; break;\r\n\t\tcase 'biff3': h = 0x0003; w = 6; break;\r\n\t\tcase 'biff2': h = 0x0002; w = 4; break;\r\n\t\tcase 'xla': break;\r\n\t\tdefault: throw new Error(\"unsupported BIFF version\");\r\n\t}\r\n\tvar out = new_buf(w);\r\n\tout.write_shift(2, h);\r\n\tout.write_shift(2, t);\r\n\tif(w > 4) out.write_shift(2, 0x7262);\r\n\tif(w > 6) out.write_shift(2, 0x07CD);\r\n\tif(w > 8) {\r\n\t\tout.write_shift(2, 0xC009);\r\n\t\tout.write_shift(2, 0x0001);\r\n\t\tout.write_shift(2, 0x0706);\r\n\t\tout.write_shift(2, 0x0000);\r\n\t}\r\n\treturn out;\r\n}\r\n\r\n\r\n/* [MS-XLS] 2.4.146 */\r\nfunction parse_InterfaceHdr(blob, length) {\r\n\tif(length === 0) return 0x04b0;\r\n\tif((blob.read_shift(2))!==0x04b0){/* empty */}\r\n\treturn 0x04b0;\r\n}\r\n\r\n\r\n/* [MS-XLS] 2.4.349 */\r\nfunction parse_WriteAccess(blob, length, opts) {\r\n\tif(opts.enc) { blob.l += length; return \"\"; }\r\n\tvar l = blob.l;\r\n\t// TODO: make sure XLUnicodeString doesnt overrun\r\n\tvar UserName = parse_XLUnicodeString2(blob, 0, opts);\r\n\tblob.read_shift(length + l - blob.l);\r\n\treturn UserName;\r\n}\r\nfunction write_WriteAccess(s, opts) {\r\n\tvar b8 = !opts || opts.biff == 8;\r\n\tvar o = new_buf(b8 ? 112 : 54);\r\n\to.write_shift(opts.biff == 8 ? 2 : 1, 7);\r\n\tif(b8) o.write_shift(1, 0);\r\n\to.write_shift(4, 0x33336853);\r\n\to.write_shift(4, (0x00534A74 | (b8 ? 0 : 0x20000000)));\r\n\twhile(o.l < o.length) o.write_shift(1, (b8 ? 0 : 32));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.351 */\r\nfunction parse_WsBool(blob, length, opts) {\r\n\tvar flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\r\n\treturn { fDialog: flags & 0x10 };\r\n}\r\n\r\n/* [MS-XLS] 2.4.28 */\r\nfunction parse_BoundSheet8(blob, length, opts) {\r\n\tvar pos = blob.read_shift(4);\r\n\tvar hidden = blob.read_shift(1) & 0x03;\r\n\tvar dt = blob.read_shift(1);\r\n\tswitch(dt) {\r\n\t\tcase 0: dt = 'Worksheet'; break;\r\n\t\tcase 1: dt = 'Macrosheet'; break;\r\n\t\tcase 2: dt = 'Chartsheet'; break;\r\n\t\tcase 6: dt = 'VBAModule'; break;\r\n\t}\r\n\tvar name = parse_ShortXLUnicodeString(blob, 0, opts);\r\n\tif(name.length === 0) name = \"Sheet1\";\r\n\treturn { pos:pos, hs:hidden, dt:dt, name:name };\r\n}\r\nfunction write_BoundSheet8(data, opts) {\r\n\tvar w = (!opts || opts.biff >= 8 ? 2 : 1);\r\n\tvar o = new_buf(8 + w * data.name.length);\r\n\to.write_shift(4, data.pos);\r\n\to.write_shift(1, data.hs || 0);\r\n\to.write_shift(1, data.dt);\r\n\to.write_shift(1, data.name.length);\r\n\tif(opts.biff >= 8) o.write_shift(1, 1);\r\n\to.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\r\n\tvar out = o.slice(0, o.l);\r\n\tout.l = o.l; return out;\r\n}\r\n\r\n/* [MS-XLS] 2.4.265 TODO */\r\nfunction parse_SST(blob, length) {\r\n\tvar end = blob.l + length;\r\n\tvar cnt = blob.read_shift(4);\r\n\tvar ucnt = blob.read_shift(4);\r\n\tvar strs = ([]);\r\n\tfor(var i = 0; i != ucnt && blob.l < end; ++i) {\r\n\t\tstrs.push(parse_XLUnicodeRichExtendedString(blob));\r\n\t}\r\n\tstrs.Count = cnt; strs.Unique = ucnt;\r\n\treturn strs;\r\n}\r\n\r\n/* [MS-XLS] 2.4.107 */\r\nfunction parse_ExtSST(blob, length) {\r\n\tvar extsst = {};\r\n\textsst.dsst = blob.read_shift(2);\r\n\tblob.l += length-2;\r\n\treturn extsst;\r\n}\r\n\r\n\r\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\r\nfunction parse_Row(blob) {\r\n\tvar z = ({});\r\n\tz.r = blob.read_shift(2);\r\n\tz.c = blob.read_shift(2);\r\n\tz.cnt = blob.read_shift(2) - z.c;\r\n\tvar miyRw = blob.read_shift(2);\r\n\tblob.l += 4; // reserved(2), unused(2)\r\n\tvar flags = blob.read_shift(1); // various flags\r\n\tblob.l += 3; // reserved(8), ixfe(12), flags(4)\r\n\tif(flags & 0x07) z.level = flags & 0x07;\r\n\t// collapsed: flags & 0x10\r\n\tif(flags & 0x20) z.hidden = true;\r\n\tif(flags & 0x40) z.hpt = miyRw / 20;\r\n\treturn z;\r\n}\r\n\r\n\r\n/* [MS-XLS] 2.4.125 */\r\nfunction parse_ForceFullCalculation(blob) {\r\n\tvar header = parse_frtHeader(blob);\r\n\tif(header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\r\n\tvar fullcalc = blob.read_shift(4);\r\n\treturn fullcalc !== 0x0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* [MS-XLS] 2.4.215 rt */\r\nfunction parse_RecalcId(blob) {\r\n\tblob.read_shift(2);\r\n\treturn blob.read_shift(4);\r\n}\r\n\r\n/* [MS-XLS] 2.4.87 */\r\nfunction parse_DefaultRowHeight(blob, length, opts) {\r\n\tvar f = 0;\r\n\tif(!(opts && opts.biff == 2)) {\r\n\t\tf = blob.read_shift(2);\r\n\t}\r\n\tvar miyRw = blob.read_shift(2);\r\n\tif((opts && opts.biff == 2)) {\r\n\t\tf = 1 - (miyRw >> 15); miyRw &= 0x7fff;\r\n\t}\r\n\tvar fl = {Unsynced:f&1,DyZero:(f&2)>>1,ExAsc:(f&4)>>2,ExDsc:(f&8)>>3};\r\n\treturn [fl, miyRw];\r\n}\r\n\r\n/* [MS-XLS] 2.4.345 TODO */\r\nfunction parse_Window1(blob) {\r\n\tvar xWn = blob.read_shift(2), yWn = blob.read_shift(2), dxWn = blob.read_shift(2), dyWn = blob.read_shift(2);\r\n\tvar flags = blob.read_shift(2), iTabCur = blob.read_shift(2), iTabFirst = blob.read_shift(2);\r\n\tvar ctabSel = blob.read_shift(2), wTabRatio = blob.read_shift(2);\r\n\treturn { Pos: [xWn, yWn], Dim: [dxWn, dyWn], Flags: flags, CurTab: iTabCur,\r\n\t\tFirstTab: iTabFirst, Selected: ctabSel, TabRatio: wTabRatio };\r\n}\r\nfunction write_Window1() {\r\n\tvar o = new_buf(18);\r\n\to.write_shift(2, 0);\r\n\to.write_shift(2, 0);\r\n\to.write_shift(2, 0x7260);\r\n\to.write_shift(2, 0x44c0);\r\n\to.write_shift(2, 0x38);\r\n\to.write_shift(2, 0);\r\n\to.write_shift(2, 0);\r\n\to.write_shift(2, 1);\r\n\to.write_shift(2, 0x01f4);\r\n\treturn o;\r\n}\r\n/* [MS-XLS] 2.4.346 TODO */\r\nfunction parse_Window2(blob, length, opts) {\r\n\tif(opts && opts.biff >= 2 && opts.biff < 8) return {};\r\n\tvar f = blob.read_shift(2);\r\n\treturn { RTL: f & 0x40 };\r\n}\r\nfunction write_Window2(view) {\r\n\tvar o = new_buf(18), f = 0x6b6;\r\n\tif(view && view.RTL) f |= 0x40;\r\n\to.write_shift(2, f);\r\n\to.write_shift(4, 0);\r\n\to.write_shift(4, 64);\r\n\to.write_shift(4, 0);\r\n\to.write_shift(4, 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.122 TODO */\r\nfunction parse_Font(blob, length, opts) {\r\n\tvar o = {\r\n\t\tdyHeight: blob.read_shift(2),\r\n\t\tfl: blob.read_shift(2)\r\n\t};\r\n\tswitch((opts && opts.biff) || 8) {\r\n\t\tcase 2: break;\r\n\t\tcase 3: case 4: blob.l += 2; break;\r\n\t\tdefault: blob.l += 10; break;\r\n\t}\r\n\to.name = parse_ShortXLUnicodeString(blob, 0, opts);\r\n\treturn o;\r\n}\r\nfunction write_Font(data, opts) {\r\n\tvar name = data.name || \"Arial\";\r\n\tvar b5 = (opts && (opts.biff == 5)), w = (b5 ? (15 + name.length) : (16 + 2 * name.length));\r\n\tvar o = new_buf(w);\r\n\to.write_shift(2, (data.sz || 12) * 20);\r\n\to.write_shift(4, 0);\r\n\to.write_shift(2, 400);\r\n\to.write_shift(4, 0);\r\n\to.write_shift(2, 0);\r\n\to.write_shift(1, name.length);\r\n\tif(!b5) o.write_shift(1, 1);\r\n\to.write_shift((b5 ? 1 : 2) * name.length, name, (b5 ? \"sbcs\" : \"utf16le\"));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.149 */\r\nfunction parse_LabelSst(blob) {\r\n\tvar cell = parse_XLSCell(blob);\r\n\tcell.isst = blob.read_shift(4);\r\n\treturn cell;\r\n}\r\n\r\n/* [MS-XLS] 2.4.148 */\r\nfunction parse_Label(blob, length, opts) {\r\n\tvar target = blob.l + length;\r\n\tvar cell = parse_XLSCell(blob, 6);\r\n\tif(opts.biff == 2) blob.l++;\r\n\tvar str = parse_XLUnicodeString(blob, target - blob.l, opts);\r\n\tcell.val = str;\r\n\treturn cell;\r\n}\r\nfunction write_Label(R, C, v, os, opts) {\r\n\tvar b8 = !opts || opts.biff == 8;\r\n\tvar o = new_buf(6 + 2 + (+b8) + (1 + b8) * v.length);\r\n\twrite_XLSCell(R, C, os, o);\r\n\to.write_shift(2, v.length);\r\n\tif(b8) o.write_shift(1, 1);\r\n\to.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\r\n\treturn o;\r\n}\r\n\r\n\r\n/* [MS-XLS] 2.4.126 Number Formats */\r\nfunction parse_Format(blob, length, opts) {\r\n\tvar numFmtId = blob.read_shift(2);\r\n\tvar fmtstr = parse_XLUnicodeString2(blob, 0, opts);\r\n\treturn [numFmtId, fmtstr];\r\n}\r\nfunction write_Format(i, f, opts, o) {\r\n\tvar b5 = (opts && (opts.biff == 5));\r\n\tif(!o) o = new_buf(b5 ? (3 + f.length) : (5 + 2 * f.length));\r\n\to.write_shift(2, i);\r\n\to.write_shift((b5 ? 1 : 2), f.length);\r\n\tif(!b5) o.write_shift(1, 1);\r\n\to.write_shift((b5 ? 1 : 2) * f.length, f, (b5 ? 'sbcs' : 'utf16le'));\r\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\r\n\tif(out.l == null) out.l = out.length;\r\n\treturn out;\r\n}\r\nvar parse_BIFF2Format = parse_XLUnicodeString2;\r\n\r\n/* [MS-XLS] 2.4.90 */\r\nfunction parse_Dimensions(blob, length, opts) {\r\n\tvar end = blob.l + length;\r\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\r\n\tvar r = blob.read_shift(w), R = blob.read_shift(w);\r\n\tvar c = blob.read_shift(2), C = blob.read_shift(2);\r\n\tblob.l = end;\r\n\treturn {s: {r:r, c:c}, e: {r:R, c:C}};\r\n}\r\nfunction write_Dimensions(range, opts) {\r\n\tvar w = opts.biff == 8 || !opts.biff ? 4 : 2;\r\n\tvar o = new_buf(2*w + 6);\r\n\to.write_shift(w, range.s.r);\r\n\to.write_shift(w, range.e.r + 1);\r\n\to.write_shift(2, range.s.c);\r\n\to.write_shift(2, range.e.c + 1);\r\n\to.write_shift(2, 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.220 */\r\nfunction parse_RK(blob) {\r\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\r\n\tvar rkrec = parse_RkRec(blob);\r\n\treturn {r:rw, c:col, ixfe:rkrec[0], rknum:rkrec[1]};\r\n}\r\n\r\n/* [MS-XLS] 2.4.175 */\r\nfunction parse_MulRk(blob, length) {\r\n\tvar target = blob.l + length - 2;\r\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\r\n\tvar rkrecs = [];\r\n\twhile(blob.l < target) rkrecs.push(parse_RkRec(blob));\r\n\tif(blob.l !== target) throw new Error(\"MulRK read error\");\r\n\tvar lastcol = blob.read_shift(2);\r\n\tif(rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\r\n\treturn {r:rw, c:col, C:lastcol, rkrec:rkrecs};\r\n}\r\n/* [MS-XLS] 2.4.174 */\r\nfunction parse_MulBlank(blob, length) {\r\n\tvar target = blob.l + length - 2;\r\n\tvar rw = blob.read_shift(2), col = blob.read_shift(2);\r\n\tvar ixfes = [];\r\n\twhile(blob.l < target) ixfes.push(blob.read_shift(2));\r\n\tif(blob.l !== target) throw new Error(\"MulBlank read error\");\r\n\tvar lastcol = blob.read_shift(2);\r\n\tif(ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\r\n\treturn {r:rw, c:col, C:lastcol, ixfe:ixfes};\r\n}\r\n\r\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\r\nfunction parse_CellStyleXF(blob, length, style, opts) {\r\n\tvar o = {};\r\n\tvar a = blob.read_shift(4), b = blob.read_shift(4);\r\n\tvar c = blob.read_shift(4), d = blob.read_shift(2);\r\n\to.patternType = XLSFillPattern[c >> 26];\r\n\r\n\tif(!opts.cellStyles) return o;\r\n\to.alc = a & 0x07;\r\n\to.fWrap = (a >> 3) & 0x01;\r\n\to.alcV = (a >> 4) & 0x07;\r\n\to.fJustLast = (a >> 7) & 0x01;\r\n\to.trot = (a >> 8) & 0xFF;\r\n\to.cIndent = (a >> 16) & 0x0F;\r\n\to.fShrinkToFit = (a >> 20) & 0x01;\r\n\to.iReadOrder = (a >> 22) & 0x02;\r\n\to.fAtrNum = (a >> 26) & 0x01;\r\n\to.fAtrFnt = (a >> 27) & 0x01;\r\n\to.fAtrAlc = (a >> 28) & 0x01;\r\n\to.fAtrBdr = (a >> 29) & 0x01;\r\n\to.fAtrPat = (a >> 30) & 0x01;\r\n\to.fAtrProt = (a >> 31) & 0x01;\r\n\r\n\to.dgLeft = b & 0x0F;\r\n\to.dgRight = (b >> 4) & 0x0F;\r\n\to.dgTop = (b >> 8) & 0x0F;\r\n\to.dgBottom = (b >> 12) & 0x0F;\r\n\to.icvLeft = (b >> 16) & 0x7F;\r\n\to.icvRight = (b >> 23) & 0x7F;\r\n\to.grbitDiag = (b >> 30) & 0x03;\r\n\r\n\to.icvTop = c & 0x7F;\r\n\to.icvBottom = (c >> 7) & 0x7F;\r\n\to.icvDiag = (c >> 14) & 0x7F;\r\n\to.dgDiag = (c >> 21) & 0x0F;\r\n\r\n\to.icvFore = d & 0x7F;\r\n\to.icvBack = (d >> 7) & 0x7F;\r\n\to.fsxButton = (d >> 14) & 0x01;\r\n\treturn o;\r\n}\r\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\r\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\r\n\r\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\r\nfunction parse_XF(blob, length, opts) {\r\n\tvar o = {};\r\n\to.ifnt = blob.read_shift(2); o.numFmtId = blob.read_shift(2); o.flags = blob.read_shift(2);\r\n\to.fStyle = (o.flags >> 2) & 0x01;\r\n\tlength -= 6;\r\n\to.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\r\n\treturn o;\r\n}\r\nfunction write_XF(data, ixfeP, opts, o) {\r\n\tvar b5 = (opts && (opts.biff == 5));\r\n\tif(!o) o = new_buf(b5 ? 16 : 20);\r\n\to.write_shift(2, 0);\r\n\tif(data.style) {\r\n\t\to.write_shift(2, (data.numFmtId||0));\r\n\t\to.write_shift(2, 0xFFF4);\r\n\t} else {\r\n\t\to.write_shift(2, (data.numFmtId||0));\r\n\t\to.write_shift(2, (ixfeP<<4));\r\n\t}\r\n\to.write_shift(4, 0);\r\n\to.write_shift(4, 0);\r\n\tif(!b5) o.write_shift(4, 0);\r\n\to.write_shift(2, 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.134 */\r\nfunction parse_Guts(blob) {\r\n\tblob.l += 4;\r\n\tvar out = [blob.read_shift(2), blob.read_shift(2)];\r\n\tif(out[0] !== 0) out[0]--;\r\n\tif(out[1] !== 0) out[1]--;\r\n\tif(out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\r\n\treturn out;\r\n}\r\nfunction write_Guts(guts) {\r\n\tvar o = new_buf(8);\r\n\to.write_shift(4, 0);\r\n\to.write_shift(2, guts[0] ? guts[0] + 1 : 0);\r\n\to.write_shift(2, guts[1] ? guts[1] + 1 : 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.24 */\r\nfunction parse_BoolErr(blob, length, opts) {\r\n\tvar cell = parse_XLSCell(blob, 6);\r\n\tif(opts.biff == 2) ++blob.l;\r\n\tvar val = parse_Bes(blob, 2);\r\n\tcell.val = val;\r\n\tcell.t = (val === true || val === false) ? 'b' : 'e';\r\n\treturn cell;\r\n}\r\nfunction write_BoolErr(R, C, v, os, opts, t) {\r\n\tvar o = new_buf(8);\r\n\twrite_XLSCell(R, C, os, o);\r\n\twrite_Bes(v, t, o);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.180 Number */\r\nfunction parse_Number(blob) {\r\n\tvar cell = parse_XLSCell(blob, 6);\r\n\tvar xnum = parse_Xnum(blob, 8);\r\n\tcell.val = xnum;\r\n\treturn cell;\r\n}\r\nfunction write_Number(R, C, v, os) {\r\n\tvar o = new_buf(14);\r\n\twrite_XLSCell(R, C, os, o);\r\n\twrite_Xnum(v, o);\r\n\treturn o;\r\n}\r\n\r\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\r\n\r\n/* [MS-XLS] 2.4.271 */\r\nfunction parse_SupBook(blob, length, opts) {\r\n\tvar end = blob.l + length;\r\n\tvar ctab = blob.read_shift(2);\r\n\tvar cch = blob.read_shift(2);\r\n\topts.sbcch = cch;\r\n\tif(cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\r\n\tif(cch < 0x01 || cch >0xff) throw new Error(\"Unexpected SupBook type: \"+cch);\r\n\tvar virtPath = parse_XLUnicodeStringNoCch(blob, cch);\r\n\t/* TODO: 2.5.277 Virtual Path */\r\n\tvar rgst = [];\r\n\twhile(end > blob.l) rgst.push(parse_XLUnicodeString(blob));\r\n\treturn [cch, ctab, virtPath, rgst];\r\n}\r\n\r\n/* [MS-XLS] 2.4.105 TODO */\r\nfunction parse_ExternName(blob, length, opts) {\r\n\tvar flags = blob.read_shift(2);\r\n\tvar body;\r\n\tvar o = ({\r\n\t\tfBuiltIn: flags & 0x01,\r\n\t\tfWantAdvise: (flags >>> 1) & 0x01,\r\n\t\tfWantPict: (flags >>> 2) & 0x01,\r\n\t\tfOle: (flags >>> 3) & 0x01,\r\n\t\tfOleLink: (flags >>> 4) & 0x01,\r\n\t\tcf: (flags >>> 5) & 0x3FF,\r\n\t\tfIcon: flags >>> 15 & 0x01\r\n\t});\r\n\tif(opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length-2, opts);\r\n\t//else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\r\n\to.body = body || blob.read_shift(length-2);\r\n\tif(typeof body === \"string\") o.Name = body;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.150 TODO */\r\nvar XLSLblBuiltIn = [\r\n\t\"_xlnm.Consolidate_Area\",\r\n\t\"_xlnm.Auto_Open\",\r\n\t\"_xlnm.Auto_Close\",\r\n\t\"_xlnm.Extract\",\r\n\t\"_xlnm.Database\",\r\n\t\"_xlnm.Criteria\",\r\n\t\"_xlnm.Print_Area\",\r\n\t\"_xlnm.Print_Titles\",\r\n\t\"_xlnm.Recorder\",\r\n\t\"_xlnm.Data_Form\",\r\n\t\"_xlnm.Auto_Activate\",\r\n\t\"_xlnm.Auto_Deactivate\",\r\n\t\"_xlnm.Sheet_Title\",\r\n\t\"_xlnm._FilterDatabase\"\r\n];\r\nfunction parse_Lbl(blob, length, opts) {\r\n\tvar target = blob.l + length;\r\n\tvar flags = blob.read_shift(2);\r\n\tvar chKey = blob.read_shift(1);\r\n\tvar cch = blob.read_shift(1);\r\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\r\n\tvar itab = 0;\r\n\tif(!opts || opts.biff >= 5) {\r\n\t\tif(opts.biff != 5) blob.l += 2;\r\n\t\titab = blob.read_shift(2);\r\n\t\tif(opts.biff == 5) blob.l += 2;\r\n\t\tblob.l += 4;\r\n\t}\r\n\tvar name = parse_XLUnicodeStringNoCch(blob, cch, opts);\r\n\tif(flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\r\n\tvar npflen = target - blob.l; if(opts && opts.biff == 2) --npflen;\r\n\tvar rgce = target == blob.l || cce === 0 ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\r\n\treturn {\r\n\t\tchKey: chKey,\r\n\t\tName: name,\r\n\t\titab: itab,\r\n\t\trgce: rgce\r\n\t};\r\n}\r\n\r\n/* [MS-XLS] 2.4.106 TODO: verify filename encoding */\r\nfunction parse_ExternSheet(blob, length, opts) {\r\n\tif(opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\r\n\tvar o = [], target = blob.l + length, len = blob.read_shift(opts.biff > 8 ? 4 : 2);\r\n\twhile(len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\r\n\t\t// [iSupBook, itabFirst, itabLast];\r\n\tif(blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\r\n\treturn o;\r\n}\r\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\r\n\tif(blob[blob.l + 1] == 0x03) blob[blob.l]++;\r\n\tvar o = parse_ShortXLUnicodeString(blob, length, opts);\r\n\treturn o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.176 TODO: check older biff */\r\nfunction parse_NameCmt(blob, length, opts) {\r\n\tif(opts.biff < 8) { blob.l += length; return; }\r\n\tvar cchName = blob.read_shift(2);\r\n\tvar cchComment = blob.read_shift(2);\r\n\tvar name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\r\n\tvar comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\r\n\treturn [name, comment];\r\n}\r\n\r\n/* [MS-XLS] 2.4.260 */\r\nfunction parse_ShrFmla(blob, length, opts) {\r\n\tvar ref = parse_RefU(blob, 6);\r\n\tblob.l++;\r\n\tvar cUse = blob.read_shift(1);\r\n\tlength -= 8;\r\n\treturn [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\r\n}\r\n\r\n/* [MS-XLS] 2.4.4 TODO */\r\nfunction parse_Array(blob, length, opts) {\r\n\tvar ref = parse_Ref(blob, 6);\r\n\t/* TODO: fAlwaysCalc */\r\n\tswitch(opts.biff) {\r\n\t\tcase 2: blob.l ++; length -= 7; break;\r\n\t\tcase 3: case 4: blob.l += 2; length -= 8; break;\r\n\t\tdefault: blob.l += 6; length -= 12;\r\n\t}\r\n\treturn [ref, parse_ArrayParsedFormula(blob, length, opts, ref)];\r\n}\r\n\r\n/* [MS-XLS] 2.4.173 */\r\nfunction parse_MTRSettings(blob) {\r\n\tvar fMTREnabled = blob.read_shift(4) !== 0x00;\r\n\tvar fUserSetThreadCount = blob.read_shift(4) !== 0x00;\r\n\tvar cUserThreadCount = blob.read_shift(4);\r\n\treturn [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\r\n}\r\n\r\n/* [MS-XLS] 2.5.186 TODO: BIFF5 */\r\nfunction parse_NoteSh(blob, length, opts) {\r\n\tif(opts.biff < 8) return;\r\n\tvar row = blob.read_shift(2), col = blob.read_shift(2);\r\n\tvar flags = blob.read_shift(2), idObj = blob.read_shift(2);\r\n\tvar stAuthor = parse_XLUnicodeString2(blob, 0, opts);\r\n\tif(opts.biff < 8) blob.read_shift(1);\r\n\treturn [{r:row,c:col}, stAuthor, idObj, flags];\r\n}\r\n\r\n/* [MS-XLS] 2.4.179 */\r\nfunction parse_Note(blob, length, opts) {\r\n\t/* TODO: Support revisions */\r\n\treturn parse_NoteSh(blob, length, opts);\r\n}\r\n\r\n/* [MS-XLS] 2.4.168 */\r\nfunction parse_MergeCells(blob, length) {\r\n\tvar merges = [];\r\n\tvar cmcs = blob.read_shift(2);\r\n\twhile (cmcs--) merges.push(parse_Ref8U(blob,length));\r\n\treturn merges;\r\n}\r\nfunction write_MergeCells(merges) {\r\n\tvar o = new_buf(2 + merges.length * 8);\r\n\to.write_shift(2, merges.length);\r\n\tfor(var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\r\nfunction parse_Obj(blob, length, opts) {\r\n\tif(opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\r\n\tvar cmo = parse_FtCmo(blob, 22); // id, ot, flags\r\n\tvar fts = parse_FtArray(blob, length-22, cmo[1]);\r\n\treturn { cmo: cmo, ft:fts };\r\n}\r\n/* from older spec */\r\nvar parse_BIFF5OT = [];\r\nparse_BIFF5OT[0x08] = function(blob, length) {\r\n\tvar tgt = blob.l + length;\r\n\tblob.l += 10; // todo\r\n\tvar cf = blob.read_shift(2);\r\n\tblob.l += 4;\r\n\tblob.l += 2; //var cbPictFmla = blob.read_shift(2);\r\n\tblob.l += 2;\r\n\tblob.l += 2; //var grbit = blob.read_shift(2);\r\n\tblob.l += 4;\r\n\tvar cchName = blob.read_shift(1);\r\n\tblob.l += cchName; // TODO: stName\r\n\tblob.l = tgt; // TODO: fmla\r\n\treturn { fmt:cf };\r\n};\r\n\r\nfunction parse_BIFF5Obj(blob, length, opts) {\r\n\tblob.l += 4; //var cnt = blob.read_shift(4);\r\n\tvar ot = blob.read_shift(2);\r\n\tvar id = blob.read_shift(2);\r\n\tvar grbit = blob.read_shift(2);\r\n\tblob.l += 2; //var colL = blob.read_shift(2);\r\n\tblob.l += 2; //var dxL = blob.read_shift(2);\r\n\tblob.l += 2; //var rwT = blob.read_shift(2);\r\n\tblob.l += 2; //var dyT = blob.read_shift(2);\r\n\tblob.l += 2; //var colR = blob.read_shift(2);\r\n\tblob.l += 2; //var dxR = blob.read_shift(2);\r\n\tblob.l += 2; //var rwB = blob.read_shift(2);\r\n\tblob.l += 2; //var dyB = blob.read_shift(2);\r\n\tblob.l += 2; //var cbMacro = blob.read_shift(2);\r\n\tblob.l += 6;\r\n\tlength -= 36;\r\n\tvar fts = [];\r\n\tfts.push((parse_BIFF5OT[ot]||parsenoop)(blob, length, opts));\r\n\treturn { cmo: [id, ot, grbit], ft:fts };\r\n}\r\n\r\n/* [MS-XLS] 2.4.329 TODO: parse properly */\r\nfunction parse_TxO(blob, length, opts) {\r\n\tvar s = blob.l;\r\n\tvar texts = \"\";\r\ntry {\r\n\tblob.l += 4;\r\n\tvar ot = (opts.lastobj||{cmo:[0,0]}).cmo[1];\r\n\tvar controlInfo; // eslint-disable-line no-unused-vars\r\n\tif([0,5,7,11,12,14].indexOf(ot) == -1) blob.l += 6;\r\n\telse controlInfo = parse_ControlInfo(blob, 6, opts);\r\n\tvar cchText = blob.read_shift(2);\r\n\t/*var cbRuns = */blob.read_shift(2);\r\n\t/*var ifntEmpty = */parseuint16(blob, 2);\r\n\tvar len = blob.read_shift(2);\r\n\tblob.l += len;\r\n\t//var fmla = parse_ObjFmla(blob, s + length - blob.l);\r\n\r\n\tfor(var i = 1; i < blob.lens.length-1; ++i) {\r\n\t\tif(blob.l-s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\r\n\t\tvar hdr = blob[blob.l];\r\n\t\tvar t = parse_XLUnicodeStringNoCch(blob, blob.lens[i+1]-blob.lens[i]-1);\r\n\t\ttexts += t;\r\n\t\tif(texts.length >= (hdr ? cchText : 2*cchText)) break;\r\n\t}\r\n\tif(texts.length !== cchText && texts.length !== cchText*2) {\r\n\t\tthrow new Error(\"cchText: \" + cchText + \" != \" + texts.length);\r\n\t}\r\n\r\n\tblob.l = s + length;\r\n\t/* [MS-XLS] 2.5.272 TxORuns */\r\n//\tvar rgTxoRuns = [];\r\n//\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\r\n//\tvar cchText2 = blob.read_shift(2);\r\n//\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\r\n//\tblob.l += 6;\r\n//\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\r\n\treturn { t: texts };\r\n} catch(e) { blob.l = s + length; return { t: texts }; }\r\n}\r\n\r\n/* [MS-XLS] 2.4.140 */\r\nfunction parse_HLink(blob, length) {\r\n\tvar ref = parse_Ref8U(blob, 8);\r\n\tblob.l += 16; /* CLSID */\r\n\tvar hlink = parse_Hyperlink(blob, length-24);\r\n\treturn [ref, hlink];\r\n}\r\nfunction write_HLink(hl) {\r\n\tvar O = new_buf(24);\r\n\tvar ref = decode_cell(hl[0]);\r\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\r\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\r\n\tvar clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\r\n\tfor(var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\r\n\treturn bconcat([O, write_Hyperlink(hl[1])]);\r\n}\r\n\r\n\r\n/* [MS-XLS] 2.4.141 */\r\nfunction parse_HLinkTooltip(blob, length) {\r\n\tblob.read_shift(2);\r\n\tvar ref = parse_Ref8U(blob, 8);\r\n\tvar wzTooltip = blob.read_shift((length-10)/2, 'dbcs-cont');\r\n\twzTooltip = wzTooltip.replace(chr0,\"\");\r\n\treturn [ref, wzTooltip];\r\n}\r\nfunction write_HLinkTooltip(hl) {\r\n\tvar TT = hl[1].Tooltip;\r\n\tvar O = new_buf(10 + 2 * (TT.length + 1));\r\n\tO.write_shift(2, 0x0800);\r\n\tvar ref = decode_cell(hl[0]);\r\n\tO.write_shift(2, ref.r); O.write_shift(2, ref.r);\r\n\tO.write_shift(2, ref.c); O.write_shift(2, ref.c);\r\n\tfor(var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\r\n\tO.write_shift(2, 0);\r\n\treturn O;\r\n}\r\n\r\n/* [MS-XLS] 2.4.63 */\r\nfunction parse_Country(blob) {\r\n\tvar o = [0,0], d;\r\n\td = blob.read_shift(2); o[0] = CountryEnum[d] || d;\r\n\td = blob.read_shift(2); o[1] = CountryEnum[d] || d;\r\n\treturn o;\r\n}\r\nfunction write_Country(o) {\r\n\tif(!o) o = new_buf(4);\r\n\to.write_shift(2, 0x01);\r\n\to.write_shift(2, 0x01);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.50 ClrtClient */\r\nfunction parse_ClrtClient(blob) {\r\n\tvar ccv = blob.read_shift(2);\r\n\tvar o = [];\r\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.188 */\r\nfunction parse_Palette(blob) {\r\n\tvar ccv = blob.read_shift(2);\r\n\tvar o = [];\r\n\twhile(ccv-->0) o.push(parse_LongRGB(blob, 8));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.354 */\r\nfunction parse_XFCRC(blob) {\r\n\tblob.l += 2;\r\n\tvar o = {cxfs:0, crc:0};\r\n\to.cxfs = blob.read_shift(2);\r\n\to.crc = blob.read_shift(4);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.53 TODO: parse flags */\r\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\r\nfunction parse_ColInfo(blob, length, opts) {\r\n\tif(!opts.cellStyles) return parsenoop(blob, length);\r\n\tvar w = opts && opts.biff >= 12 ? 4 : 2;\r\n\tvar colFirst = blob.read_shift(w);\r\n\tvar colLast = blob.read_shift(w);\r\n\tvar coldx = blob.read_shift(w);\r\n\tvar ixfe = blob.read_shift(w);\r\n\tvar flags = blob.read_shift(2);\r\n\tif(w == 2) blob.l += 2;\r\n\treturn {s:colFirst, e:colLast, w:coldx, ixfe:ixfe, flags:flags};\r\n}\r\n\r\n/* [MS-XLS] 2.4.257 */\r\nfunction parse_Setup(blob, length) {\r\n\tvar o = {};\r\n\tif(length < 32) return o;\r\n\tblob.l += 16;\r\n\to.header = parse_Xnum(blob, 8);\r\n\to.footer = parse_Xnum(blob, 8);\r\n\tblob.l += 2;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.4.261 */\r\nfunction parse_ShtProps(blob, length, opts) {\r\n\tvar def = {area:false};\r\n\tif(opts.biff != 5) { blob.l += length; return def; }\r\n\tvar d = blob.read_shift(1); blob.l += 3;\r\n\tif((d & 0x10)) def.area = true;\r\n\treturn def;\r\n}\r\n\r\n/* [MS-XLS] 2.4.241 */\r\nfunction write_RRTabId(n) {\r\n\tvar out = new_buf(2 * n);\r\n\tfor(var i = 0; i < n; ++i) out.write_shift(2, i+1);\r\n\treturn out;\r\n}\r\n\r\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\r\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\r\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\r\n\r\n/* --- Specific to versions before BIFF8 --- */\r\nfunction parse_ImData(blob) {\r\n\tvar cf = blob.read_shift(2);\r\n\tvar env = blob.read_shift(2);\r\n\tvar lcb = blob.read_shift(4);\r\n\tvar o = {fmt:cf, env:env, len:lcb, data:blob.slice(blob.l,blob.l+lcb)};\r\n\tblob.l += lcb;\r\n\treturn o;\r\n}\r\n\r\n/* BIFF2_??? where ??? is the name from [XLS] */\r\nfunction parse_BIFF2STR(blob, length, opts) {\r\n\tvar cell = parse_XLSCell(blob, 6);\r\n\t++blob.l;\r\n\tvar str = parse_XLUnicodeString2(blob, length-7, opts);\r\n\tcell.t = 'str';\r\n\tcell.val = str;\r\n\treturn cell;\r\n}\r\n\r\nfunction parse_BIFF2NUM(blob) {\r\n\tvar cell = parse_XLSCell(blob, 6);\r\n\t++blob.l;\r\n\tvar num = parse_Xnum(blob, 8);\r\n\tcell.t = 'n';\r\n\tcell.val = num;\r\n\treturn cell;\r\n}\r\nfunction write_BIFF2NUM(r, c, val) {\r\n\tvar out = new_buf(15);\r\n\twrite_BIFF2Cell(out, r, c);\r\n\tout.write_shift(8, val, 'f');\r\n\treturn out;\r\n}\r\n\r\nfunction parse_BIFF2INT(blob) {\r\n\tvar cell = parse_XLSCell(blob, 6);\r\n\t++blob.l;\r\n\tvar num = blob.read_shift(2);\r\n\tcell.t = 'n';\r\n\tcell.val = num;\r\n\treturn cell;\r\n}\r\nfunction write_BIFF2INT(r, c, val) {\r\n\tvar out = new_buf(9);\r\n\twrite_BIFF2Cell(out, r, c);\r\n\tout.write_shift(2, val);\r\n\treturn out;\r\n}\r\n\r\nfunction parse_BIFF2STRING(blob) {\r\n\tvar cch = blob.read_shift(1);\r\n\tif(cch === 0) { blob.l++; return \"\"; }\r\n\treturn blob.read_shift(cch, 'sbcs-cont');\r\n}\r\n\r\n/* TODO: convert to BIFF8 font struct */\r\nfunction parse_BIFF2FONTXTRA(blob, length) {\r\n\tblob.l += 6; // unknown\r\n\tblob.l += 2; // font weight \"bls\"\r\n\tblob.l += 1; // charset\r\n\tblob.l += 3; // unknown\r\n\tblob.l += 1; // font family\r\n\tblob.l += length - 13;\r\n}\r\n\r\n/* TODO: parse rich text runs */\r\nfunction parse_RString(blob, length, opts) {\r\n\tvar end = blob.l + length;\r\n\tvar cell = parse_XLSCell(blob, 6);\r\n\tvar cch = blob.read_shift(2);\r\n\tvar str = parse_XLUnicodeStringNoCch(blob, cch, opts);\r\n\tblob.l = end;\r\n\tcell.t = 'str';\r\n\tcell.val = str;\r\n\treturn cell;\r\n}\r\n/* from js-harb (C) 2014-present  SheetJS */\r\nvar DBF = (function() {\r\nvar dbf_codepage_map = {\r\n\t/* Code Pages Supported by Visual FoxPro */\r\n0x01:   437,           0x02:   850,\r\n0x03:  1252,           0x04: 10000,\r\n0x64:   852,           0x65:   866,\r\n0x66:   865,           0x67:   861,\r\n0x68:   895,           0x69:   620,\r\n0x6A:   737,           0x6B:   857,\r\n0x78:   950,           0x79:   949,\r\n0x7A:   936,           0x7B:   932,\r\n0x7C:   874,           0x7D:  1255,\r\n0x7E:  1256,           0x96: 10007,\r\n0x97: 10029,           0x98: 10006,\r\n0xC8:  1250,           0xC9:  1251,\r\n0xCA:  1254,           0xCB:  1253,\r\n\r\n\t/* shapefile DBF extension */\r\n0x00: 20127,           0x08:   865,\r\n0x09:   437,           0x0A:   850,\r\n0x0B:   437,           0x0D:   437,\r\n0x0E:   850,           0x0F:   437,\r\n0x10:   850,           0x11:   437,\r\n0x12:   850,           0x13:   932,\r\n0x14:   850,           0x15:   437,\r\n0x16:   850,           0x17:   865,\r\n0x18:   437,           0x19:   437,\r\n0x1A:   850,           0x1B:   437,\r\n0x1C:   863,           0x1D:   850,\r\n0x1F:   852,           0x22:   852,\r\n0x23:   852,           0x24:   860,\r\n0x25:   850,           0x26:   866,\r\n0x37:   850,           0x40:   852,\r\n0x4D:   936,           0x4E:   949,\r\n0x4F:   950,           0x50:   874,\r\n0x57:  1252,           0x58:  1252,\r\n0x59:  1252,\r\n\r\n0xFF: 16969\r\n};\r\n\r\n/* TODO: find an actual specification */\r\nfunction dbf_to_aoa(buf, opts) {\r\n\tvar out = [];\r\n\t/* TODO: browser based */\r\n\tvar d = (new_raw_buf(1));\r\n\tswitch(opts.type) {\r\n\t\tcase 'base64': d = s2a(Base64.decode(buf)); break;\r\n\t\tcase 'binary': d = s2a(buf); break;\r\n\t\tcase 'buffer':\r\n\t\tcase 'array': d = buf; break;\r\n\t}\r\n\tprep_blob(d, 0);\r\n\t/* header */\r\n\tvar ft = d.read_shift(1);\r\n\tvar memo = false;\r\n\tvar vfp = false, l7 = false;\r\n\tswitch(ft) {\r\n\t\tcase 0x02: case 0x03: break;\r\n\t\tcase 0x30: vfp = true; memo = true; break;\r\n\t\tcase 0x31: vfp = true; break;\r\n\t\tcase 0x83: memo = true; break;\r\n\t\tcase 0x8B: memo = true; break;\r\n\t\tcase 0x8C: memo = true; l7 = true; break;\r\n\t\tcase 0xF5: memo = true; break;\r\n\t\tdefault: throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\r\n\t}\r\n\tvar /*filedate = new Date(),*/ nrow = 0, fpos = 0;\r\n\tif(ft == 0x02) nrow = d.read_shift(2);\r\n\t/*filedate = new Date(d.read_shift(1) + 1900, d.read_shift(1) - 1, d.read_shift(1));*/d.l += 3;\r\n\tif(ft != 0x02) nrow = d.read_shift(4);\r\n\tif(ft != 0x02) fpos = d.read_shift(2);\r\n\tvar rlen = d.read_shift(2);\r\n\r\n\tvar /*flags = 0,*/ current_cp = 1252;\r\n\tif(ft != 0x02) {\r\n\td.l+=16;\r\n\t/*flags = */d.read_shift(1);\r\n\t//if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\r\n\r\n\t/* codepage present in FoxPro */\r\n\tif(d[d.l] !== 0) current_cp = dbf_codepage_map[d[d.l]];\r\n\td.l+=1;\r\n\r\n\td.l+=2;\r\n\t}\r\n\tif(l7) d.l += 36;\r\nvar fields = [], field = ({});\r\n\tvar hend = fpos - 10 - (vfp ? 264 : 0), ww = l7 ? 32 : 11;\r\n\twhile(ft == 0x02 ? d.l < d.length && d[d.l] != 0x0d: d.l < hend) {\r\n\t\tfield = ({});\r\n\t\tfield.name = cptable.utils.decode(current_cp, d.slice(d.l, d.l+ww)).replace(/[\\u0000\\r\\n].*$/g,\"\");\r\n\t\td.l += ww;\r\n\t\tfield.type = String.fromCharCode(d.read_shift(1));\r\n\t\tif(ft != 0x02 && !l7) field.offset = d.read_shift(4);\r\n\t\tfield.len = d.read_shift(1);\r\n\t\tif(ft == 0x02) field.offset = d.read_shift(2);\r\n\t\tfield.dec = d.read_shift(1);\r\n\t\tif(field.name.length) fields.push(field);\r\n\t\tif(ft != 0x02) d.l += l7 ? 13 : 14;\r\n\t\tswitch(field.type) {\r\n\t\t\tcase 'B': // VFP Double\r\n\t\t\t\tif((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'G': // General\r\n\t\t\tcase 'P': // Picture\r\n\t\t\t\tif(opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'C': // character\r\n\t\t\tcase 'D': // date\r\n\t\t\tcase 'F': // floating point\r\n\t\t\tcase 'I': // long\r\n\t\t\tcase 'L': // boolean\r\n\t\t\tcase 'M': // memo\r\n\t\t\tcase 'N': // number\r\n\t\t\tcase 'O': // double\r\n\t\t\tcase 'T': // datetime\r\n\t\t\tcase 'Y': // currency\r\n\t\t\tcase '0': // VFP _NullFlags\r\n\t\t\tcase '@': // timestamp\r\n\t\t\tcase '+': // autoincrement\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: throw new Error('Unknown Field Type: ' + field.type);\r\n\t\t}\r\n\t}\r\n\tif(d[d.l] !== 0x0D) d.l = fpos-1;\r\n\telse if(ft == 0x02) d.l = 0x209;\r\n\tif(ft != 0x02) {\r\n\t\tif(d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\r\n\t\td.l = fpos;\r\n\t}\r\n\t/* data */\r\n\tvar R = 0, C = 0;\r\n\tout[0] = [];\r\n\tfor(C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\r\n\twhile(nrow-- > 0) {\r\n\t\tif(d[d.l] === 0x2A) { d.l+=rlen; continue; }\r\n\t\t++d.l;\r\n\t\tout[++R] = []; C = 0;\r\n\t\tfor(C = 0; C != fields.length; ++C) {\r\n\t\t\tvar dd = d.slice(d.l, d.l+fields[C].len); d.l+=fields[C].len;\r\n\t\t\tprep_blob(dd, 0);\r\n\t\t\tvar s = cptable.utils.decode(current_cp, dd);\r\n\t\t\tswitch(fields[C].type) {\r\n\t\t\t\tcase 'C':\r\n\t\t\t\t\tout[R][C] = cptable.utils.decode(current_cp, dd);\r\n\t\t\t\t\tout[R][C] = out[R][C].trim();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'D':\r\n\t\t\t\t\tif(s.length === 8) out[R][C] = new Date(+s.slice(0,4), +s.slice(4,6)-1, +s.slice(6,8));\r\n\t\t\t\t\telse out[R][C] = s;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'F': out[R][C] = parseFloat(s.trim()); break;\r\n\t\t\t\tcase '+': case 'I': out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i'); break;\r\n\t\t\t\tcase 'L': switch(s.toUpperCase()) {\r\n\t\t\t\t\tcase 'Y': case 'T': out[R][C] = true; break;\r\n\t\t\t\t\tcase 'N': case 'F': out[R][C] = false; break;\r\n\t\t\t\t\tcase ' ': case '?': out[R][C] = false; break; /* NOTE: technically uninitialized */\r\n\t\t\t\t\tdefault: throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\r\n\t\t\t\t\t} break;\r\n\t\t\t\tcase 'M': /* TODO: handle memo files */\r\n\t\t\t\t\tif(!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\r\n\t\t\t\t\tout[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10): dd.read_shift(4));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'N': out[R][C] = +s.replace(/\\u0000/g,\"\").trim(); break;\r\n\t\t\t\tcase '@': out[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400); break;\r\n\t\t\t\tcase 'T': out[R][C] = new Date((dd.read_shift(4) - 0x253D8C) * 0x5265C00 + dd.read_shift(4)); break;\r\n\t\t\t\tcase 'Y': out[R][C] = dd.read_shift(4,'i')/1e4; break;\r\n\t\t\t\tcase 'O': out[R][C] = -dd.read_shift(-8, 'f'); break;\r\n\t\t\t\tcase 'B': if(vfp && fields[C].len == 8) { out[R][C] = dd.read_shift(8,'f'); break; }\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase 'G': case 'P': dd.l += fields[C].len; break;\r\n\t\t\t\tcase '0':\r\n\t\t\t\t\tif(fields[C].name === '_NullFlags') break;\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tdefault: throw new Error(\"DBF Unsupported data type \" + fields[C].type);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(ft != 0x02) if(d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l-1) + \" of \" + d.length + \" \" + d[d.l-1].toString(16));\r\n\tif(opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\r\n\treturn out;\r\n}\r\n\r\nfunction dbf_to_sheet(buf, opts) {\r\n\tvar o = opts || {};\r\n\tif(!o.dateNF) o.dateNF = \"yyyymmdd\";\r\n\treturn aoa_to_sheet(dbf_to_aoa(buf, o), o);\r\n}\r\n\r\nfunction dbf_to_workbook(buf, opts) {\r\n\ttry { return sheet_to_workbook(dbf_to_sheet(buf, opts), opts); }\r\n\tcatch(e) { if(opts && opts.WTF) throw e; }\r\n\treturn ({SheetNames:[],Sheets:{}});\r\n}\r\n\r\nvar _RLEN = { 'B': 8, 'C': 250, 'L': 1, 'D': 8, '?': 0, '': 0 };\r\nfunction sheet_to_dbf(ws, opts) {\r\n\tvar o = opts || {};\r\n\tif(o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\r\n\tvar ba = buf_array();\r\n\tvar aoa = sheet_to_json(ws, {header:1, raw:true, cellDates:true});\r\n\tvar headers = aoa[0], data = aoa.slice(1);\r\n\tvar i = 0, j = 0, hcnt = 0, rlen = 1;\r\n\tfor(i = 0; i < headers.length; ++i) {\r\n\t\tif(i == null) continue;\r\n\t\t++hcnt;\r\n\t\tif(typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\r\n\t\tif(typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + (typeof headers[i]) + \"|\");\r\n\t\tif(headers.indexOf(headers[i]) !== i) for(j=0; j<1024;++j)\r\n\t\t\tif(headers.indexOf(headers[i] + \"_\" + j) == -1) { headers[i] += \"_\" + j; break; }\r\n\t}\r\n\tvar range = safe_decode_range(ws['!ref']);\r\n\tvar coltypes = [];\r\n\tfor(i = 0; i <= range.e.c - range.s.c; ++i) {\r\n\t\tvar col = [];\r\n\t\tfor(j=0; j < data.length; ++j) {\r\n\t\t\tif(data[j][i] != null) col.push(data[j][i]);\r\n\t\t}\r\n\t\tif(col.length == 0 || headers[i] == null) { coltypes[i] = '?'; continue; }\r\n\t\tvar guess = '', _guess = '';\r\n\t\tfor(j = 0; j < col.length; ++j) {\r\n\t\t\tswitch(typeof col[j]) {\r\n\t\t\t\t/* TODO: check if L2 compat is desired */\r\n\t\t\t\tcase 'number': _guess = 'B'; break;\r\n\t\t\t\tcase 'string': _guess = 'C'; break;\r\n\t\t\t\tcase 'boolean': _guess = 'L'; break;\r\n\t\t\t\tcase 'object': _guess = col[j] instanceof Date ? 'D' : 'C'; break;\r\n\t\t\t\tdefault: _guess = 'C';\r\n\t\t\t}\r\n\t\t\tguess = guess && guess != _guess ? 'C' : _guess;\r\n\t\t\tif(guess == 'C') break;\r\n\t\t}\r\n\t\trlen += _RLEN[guess] || 0;\r\n\t\tcoltypes[i] = guess;\r\n\t}\r\n\r\n\tvar h = ba.next(32);\r\n\th.write_shift(4, 0x13021130);\r\n\th.write_shift(4, data.length);\r\n\th.write_shift(2, 296 + 32 * hcnt);\r\n\th.write_shift(2, rlen);\r\n\tfor(i=0; i < 4; ++i) h.write_shift(4, 0);\r\n\th.write_shift(4, 0x00000300); // TODO: CP\r\n\r\n\tfor(i = 0, j = 0; i < headers.length; ++i) {\r\n\t\tif(headers[i] == null) continue;\r\n\t\tvar hf = ba.next(32);\r\n\t\tvar _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\r\n\t\thf.write_shift(1, _f, \"sbcs\");\r\n\t\thf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\r\n\t\thf.write_shift(4, j);\r\n\t\thf.write_shift(1, _RLEN[coltypes[i]] || 0);\r\n\t\thf.write_shift(1, 0);\r\n\t\thf.write_shift(1, 0x02);\r\n\t\thf.write_shift(4, 0);\r\n\t\thf.write_shift(1, 0);\r\n\t\thf.write_shift(4, 0);\r\n\t\thf.write_shift(4, 0);\r\n\t\tj += _RLEN[coltypes[i]] || 0;\r\n\t}\r\n\r\n\tvar hb = ba.next(264);\r\n\thb.write_shift(4, 0x0000000D);\r\n\tfor(i=0; i < 65;++i) hb.write_shift(4, 0x00000000);\r\n\tfor(i=0; i < data.length; ++i) {\r\n\t\tvar rout = ba.next(rlen);\r\n\t\trout.write_shift(1, 0);\r\n\t\tfor(j=0; j<headers.length; ++j) {\r\n\t\t\tif(headers[j] == null) continue;\r\n\t\t\tswitch(coltypes[j]) {\r\n\t\t\t\tcase 'L': rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46); break;\r\n\t\t\t\tcase 'B': rout.write_shift(8, data[i][j]||0, 'f'); break;\r\n\t\t\t\tcase 'D':\r\n\t\t\t\t\tif(!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trout.write_shift(4, (\"0000\"+data[i][j].getFullYear()).slice(-4), \"sbcs\");\r\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+(data[i][j].getMonth()+1)).slice(-2), \"sbcs\");\r\n\t\t\t\t\t\trout.write_shift(2, (\"00\"+data[i][j].getDate()).slice(-2), \"sbcs\");\r\n\t\t\t\t\t} break;\r\n\t\t\t\tcase 'C':\r\n\t\t\t\t\tvar _s = String(data[i][j]||\"\");\r\n\t\t\t\t\trout.write_shift(1, _s, \"sbcs\");\r\n\t\t\t\t\tfor(hcnt=0; hcnt < 250-_s.length; ++hcnt) rout.write_shift(1, 0x20); break;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// data\r\n\t}\r\n\tba.next(1).write_shift(1, 0x1A);\r\n\treturn ba.end();\r\n}\r\n\treturn {\r\n\t\tto_workbook: dbf_to_workbook,\r\n\t\tto_sheet: dbf_to_sheet,\r\n\t\tfrom_sheet: sheet_to_dbf\r\n\t};\r\n})();\r\n\r\nvar SYLK = (function() {\r\n\t/* TODO: find an actual specification */\r\n\tfunction sylk_to_aoa(d, opts) {\r\n\t\tswitch(opts.type) {\r\n\t\t\tcase 'base64': return sylk_to_aoa_str(Base64.decode(d), opts);\r\n\t\t\tcase 'binary': return sylk_to_aoa_str(d, opts);\r\n\t\t\tcase 'buffer': return sylk_to_aoa_str(d.toString('binary'), opts);\r\n\t\t\tcase 'array': return sylk_to_aoa_str(cc2str(d), opts);\r\n\t\t}\r\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\r\n\t}\r\n\tfunction sylk_to_aoa_str(str, opts) {\r\n\t\tvar records = str.split(/[\\n\\r]+/), R = -1, C = -1, ri = 0, rj = 0, arr = [];\r\n\t\tvar formats = [];\r\n\t\tvar next_cell_format = null;\r\n\t\tvar sht = {}, rowinfo = [], colinfo = [], cw = [];\r\n\t\tvar Mval = 0, j;\r\n\t\tfor (; ri !== records.length; ++ri) {\r\n\t\t\tMval = 0;\r\n\t\t\tvar rstr=records[ri].trim();\r\n\t\t\tvar record=rstr.replace(/;;/g, \"\\u0001\").split(\";\").map(function(x) { return x.replace(/\\u0001/g, \";\"); });\r\n\t\t\tvar RT=record[0], val;\r\n\t\t\tif(rstr.length > 0) switch(RT) {\r\n\t\t\tcase 'ID': break; /* header */\r\n\t\t\tcase 'E': break; /* EOF */\r\n\t\t\tcase 'B': break; /* dimensions */\r\n\t\t\tcase 'O': break; /* options? */\r\n\t\t\tcase 'P':\r\n\t\t\t\tif(record[1].charAt(0) == 'P')\r\n\t\t\t\t\tformats.push(rstr.slice(3).replace(/;;/g, \";\"));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'C':\r\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\r\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; break;\r\n\t\t\t\tcase 'Y':\r\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; C = 0;\r\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'K':\r\n\t\t\t\t\tval = record[rj].slice(1);\r\n\t\t\t\t\tif(val.charAt(0) === '\"') val = val.slice(1,val.length - 1);\r\n\t\t\t\t\telse if(val === 'TRUE') val = true;\r\n\t\t\t\t\telse if(val === 'FALSE') val = false;\r\n\t\t\t\t\telse if(!isNaN(fuzzynum(val))) {\r\n\t\t\t\t\t\tval = fuzzynum(val);\r\n\t\t\t\t\t\tif(next_cell_format !== null && SSF.is_date(next_cell_format)) val = numdate(val);\r\n\t\t\t\t\t} else if(!isNaN(fuzzydate(val).getDate())) {\r\n\t\t\t\t\t\tval = parseDate(val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tarr[R][C] = val;\r\n\t\t\t\t\tnext_cell_format = null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'E':\r\n\t\t\t\t\tvar formula = rc_to_a1(record[rj].slice(1), {r:R,c:C});\r\n\t\t\t\t\tarr[R][C] = [arr[R][C], formula];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\r\n\t\t\t} break;\r\n\t\t\tcase 'F':\r\n\t\t\tvar F_seen = 0;\r\n\t\t\tfor(rj=1; rj<record.length; ++rj) switch(record[rj].charAt(0)) {\r\n\t\t\t\tcase 'X': C = parseInt(record[rj].slice(1))-1; ++F_seen; break;\r\n\t\t\t\tcase 'Y':\r\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1; /*C = 0;*/\r\n\t\t\t\t\tfor(j = arr.length; j <= R; ++j) arr[j] = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'M': Mval = parseInt(record[rj].slice(1)) / 20; break;\r\n\t\t\t\tcase 'F': break; /* ??? */\r\n\t\t\t\tcase 'P':\r\n\t\t\t\t\tnext_cell_format = formats[parseInt(record[rj].slice(1))];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'S': break; /* cell style */\r\n\t\t\t\tcase 'D': break; /* column */\r\n\t\t\t\tcase 'N': break; /* font */\r\n\t\t\t\tcase 'W':\r\n\t\t\t\t\tcw = record[rj].slice(1).split(\" \");\r\n\t\t\t\t\tfor(j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\r\n\t\t\t\t\t\tMval = parseInt(cw[2], 10);\r\n\t\t\t\t\t\tcolinfo[j-1] = Mval === 0 ? {hidden:true}: {wch:Mval}; process_col(colinfo[j-1]);\r\n\t\t\t\t\t} break;\r\n\t\t\t\tcase 'C': /* default column format */\r\n\t\t\t\t\tC = parseInt(record[rj].slice(1))-1;\r\n\t\t\t\t\tif(!colinfo[C]) colinfo[C] = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'R': /* row properties */\r\n\t\t\t\t\tR = parseInt(record[rj].slice(1))-1;\r\n\t\t\t\t\tif(!rowinfo[R]) rowinfo[R] = {};\r\n\t\t\t\t\tif(Mval > 0) { rowinfo[R].hpt = Mval; rowinfo[R].hpx = pt2px(Mval); }\r\n\t\t\t\t\telse if(Mval === 0) rowinfo[R].hidden = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\r\n\t\t\t}\r\n\t\t\tif(F_seen < 1) next_cell_format = null; break;\r\n\t\t\tdefault: if(opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(rowinfo.length > 0) sht['!rows'] = rowinfo;\r\n\t\tif(colinfo.length > 0) sht['!cols'] = colinfo;\r\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\r\n\t\treturn [arr, sht];\r\n\t}\r\n\r\n\tfunction sylk_to_sheet(d, opts) {\r\n\t\tvar aoasht = sylk_to_aoa(d, opts);\r\n\t\tvar aoa = aoasht[0], ws = aoasht[1];\r\n\t\tvar o = aoa_to_sheet(aoa, opts);\r\n\t\tkeys(ws).forEach(function(k) { o[k] = ws[k]; });\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction sylk_to_workbook(d, opts) { return sheet_to_workbook(sylk_to_sheet(d, opts), opts); }\r\n\r\n\tfunction write_ws_cell_sylk(cell, ws, R, C) {\r\n\t\tvar o = \"C;Y\" + (R+1) + \";X\" + (C+1) + \";K\";\r\n\t\tswitch(cell.t) {\r\n\t\t\tcase 'n':\r\n\t\t\t\to += (cell.v||0);\r\n\t\t\t\tif(cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {r:R, c:C}); break;\r\n\t\t\tcase 'b': o += cell.v ? \"TRUE\" : \"FALSE\"; break;\r\n\t\t\tcase 'e': o += cell.w || cell.v; break;\r\n\t\t\tcase 'd': o += '\"' + (cell.w || cell.v) + '\"'; break;\r\n\t\t\tcase 's': o += '\"' + cell.v.replace(/\"/g,\"\") + '\"'; break;\r\n\t\t}\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction write_ws_cols_sylk(out, cols) {\r\n\t\tcols.forEach(function(col, i) {\r\n\t\t\tvar rec = \"F;W\" + (i+1) + \" \" + (i+1) + \" \";\r\n\t\t\tif(col.hidden) rec += \"0\";\r\n\t\t\telse {\r\n\t\t\t\tif(typeof col.width == 'number') col.wpx = width2px(col.width);\r\n\t\t\t\tif(typeof col.wpx == 'number') col.wch = px2char(col.wpx);\r\n\t\t\t\tif(typeof col.wch == 'number') rec += Math.round(col.wch);\r\n\t\t\t}\r\n\t\t\tif(rec.charAt(rec.length - 1) != \" \") out.push(rec);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction write_ws_rows_sylk(out, rows) {\r\n\t\trows.forEach(function(row, i) {\r\n\t\t\tvar rec = \"F;\";\r\n\t\t\tif(row.hidden) rec += \"M0;\";\r\n\t\t\telse if(row.hpt) rec += \"M\" + 20 * row.hpt + \";\";\r\n\t\t\telse if(row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\r\n\t\t\tif(rec.length > 2) out.push(rec + \"R\" + (i+1));\r\n\t\t});\r\n\t}\r\n\r\n\tfunction sheet_to_sylk(ws, opts) {\r\n\t\tvar preamble = [\"ID;PWXL;N;E\"], o = [];\r\n\t\tvar r = safe_decode_range(ws['!ref']), cell;\r\n\t\tvar dense = Array.isArray(ws);\r\n\t\tvar RS = \"\\r\\n\";\r\n\r\n\t\tpreamble.push(\"P;PGeneral\");\r\n\t\tpreamble.push(\"F;P0;DG0G8;M255\");\r\n\t\tif(ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\r\n\t\tif(ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\r\n\r\n\t\tpreamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c,r.s.r,r.e.c,r.e.r].join(\" \"));\r\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\r\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\r\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\r\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\r\n\t\t\t\tif(!cell || (cell.v == null && (!cell.f || cell.F))) continue;\r\n\t\t\t\to.push(write_ws_cell_sylk(cell, ws, R, C, opts));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\r\n\t}\r\n\r\n\treturn {\r\n\t\tto_workbook: sylk_to_workbook,\r\n\t\tto_sheet: sylk_to_sheet,\r\n\t\tfrom_sheet: sheet_to_sylk\r\n\t};\r\n})();\r\n\r\nvar DIF = (function() {\r\n\tfunction dif_to_aoa(d, opts) {\r\n\t\tswitch(opts.type) {\r\n\t\t\tcase 'base64': return dif_to_aoa_str(Base64.decode(d), opts);\r\n\t\t\tcase 'binary': return dif_to_aoa_str(d, opts);\r\n\t\t\tcase 'buffer': return dif_to_aoa_str(d.toString('binary'), opts);\r\n\t\t\tcase 'array': return dif_to_aoa_str(cc2str(d), opts);\r\n\t\t}\r\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\r\n\t}\r\n\tfunction dif_to_aoa_str(str, opts) {\r\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr = [];\r\n\t\tfor (; ri !== records.length; ++ri) {\r\n\t\t\tif (records[ri].trim() === 'BOT') { arr[++R] = []; C = 0; continue; }\r\n\t\t\tif (R < 0) continue;\r\n\t\t\tvar metadata = records[ri].trim().split(\",\");\r\n\t\t\tvar type = metadata[0], value = metadata[1];\r\n\t\t\t++ri;\r\n\t\t\tvar data = records[ri].trim();\r\n\t\t\tswitch (+type) {\r\n\t\t\t\tcase -1:\r\n\t\t\t\t\tif (data === 'BOT') { arr[++R] = []; C = 0; continue; }\r\n\t\t\t\t\telse if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tif(data === 'TRUE') arr[R][C] = true;\r\n\t\t\t\t\telse if(data === 'FALSE') arr[R][C] = false;\r\n\t\t\t\t\telse if(!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);\r\n\t\t\t\t\telse if(!isNaN(fuzzydate(value).getDate())) arr[R][C] = parseDate(value);\r\n\t\t\t\t\telse arr[R][C] = value;\r\n\t\t\t\t\t++C; break;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tdata = data.slice(1,data.length-1);\r\n\t\t\t\t\tarr[R][C++] = data !== '' ? data : null;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (data === 'EOD') break;\r\n\t\t}\r\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tfunction dif_to_sheet(str, opts) { return aoa_to_sheet(dif_to_aoa(str, opts), opts); }\r\n\tfunction dif_to_workbook(str, opts) { return sheet_to_workbook(dif_to_sheet(str, opts), opts); }\r\n\r\n\tvar sheet_to_dif = (function() {\r\n\t\tvar push_field = function pf(o, topic, v, n, s) {\r\n\t\t\to.push(topic);\r\n\t\t\to.push(v + \",\" + n);\r\n\t\t\to.push('\"' + s.replace(/\"/g,'\"\"') + '\"');\r\n\t\t};\r\n\t\tvar push_value = function po(o, type, v, s) {\r\n\t\t\to.push(type + \",\" + v);\r\n\t\t\to.push(type == 1 ? '\"' + s.replace(/\"/g,'\"\"') + '\"' : s);\r\n\t\t};\r\n\t\treturn function sheet_to_dif(ws) {\r\n\t\t\tvar o = [];\r\n\t\t\tvar r = safe_decode_range(ws['!ref']), cell;\r\n\t\t\tvar dense = Array.isArray(ws);\r\n\t\t\tpush_field(o, \"TABLE\", 0, 1, \"sheetjs\");\r\n\t\t\tpush_field(o, \"VECTORS\", 0, r.e.r - r.s.r + 1,\"\");\r\n\t\t\tpush_field(o, \"TUPLES\", 0, r.e.c - r.s.c + 1,\"\");\r\n\t\t\tpush_field(o, \"DATA\", 0, 0,\"\");\r\n\t\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\r\n\t\t\t\tpush_value(o, -1, 0, \"BOT\");\r\n\t\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\r\n\t\t\t\t\tvar coord = encode_cell({r:R,c:C});\r\n\t\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\r\n\t\t\t\t\tif(!cell) { push_value(o, 1, 0, \"\"); continue;}\r\n\t\t\t\t\tswitch(cell.t) {\r\n\t\t\t\t\t\tcase 'n':\r\n\t\t\t\t\t\t\tvar val = DIF_XL ? cell.w : cell.v;\r\n\t\t\t\t\t\t\tif(!val && cell.v != null) val = cell.v;\r\n\t\t\t\t\t\t\tif(val == null) {\r\n\t\t\t\t\t\t\t\tif(DIF_XL && cell.f && !cell.F) push_value(o, 1, 0, \"=\" + cell.f);\r\n\t\t\t\t\t\t\t\telse push_value(o, 1, 0, \"\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse push_value(o, 0, val, \"V\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t\tpush_value(o, 0, cell.v ? 1 : 0, cell.v ? \"TRUE\" : \"FALSE\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 's':\r\n\t\t\t\t\t\t\tpush_value(o, 1, 0, (!DIF_XL || isNaN(cell.v)) ? cell.v : '=\"' + cell.v + '\"');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\t\tif(!cell.w) cell.w = SSF.format(cell.z || SSF._table[14], datenum(parseDate(cell.v)));\r\n\t\t\t\t\t\t\tif(DIF_XL) push_value(o, 0, cell.w, \"V\");\r\n\t\t\t\t\t\t\telse push_value(o, 1, 0, cell.w);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault: push_value(o, 1, 0, \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpush_value(o, -1, 0, \"EOD\");\r\n\t\t\tvar RS = \"\\r\\n\";\r\n\t\t\tvar oo = o.join(RS);\r\n\t\t\t//while((oo.length & 0x7F) != 0) oo += \"\\0\";\r\n\t\t\treturn oo;\r\n\t\t};\r\n\t})();\r\n\treturn {\r\n\t\tto_workbook: dif_to_workbook,\r\n\t\tto_sheet: dif_to_sheet,\r\n\t\tfrom_sheet: sheet_to_dif\r\n\t};\r\n})();\r\n\r\nvar ETH = (function() {\r\n\tfunction decode(s) { return s.replace(/\\\\b/g,\"\\\\\").replace(/\\\\c/g,\":\").replace(/\\\\n/g,\"\\n\"); }\r\n\tfunction encode(s) { return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g,\"\\\\n\"); }\r\n\r\n\tfunction eth_to_aoa(str, opts) {\r\n\t\tvar records = str.split('\\n'), R = -1, C = -1, ri = 0, arr = [];\r\n\t\tfor (; ri !== records.length; ++ri) {\r\n\t\t\tvar record = records[ri].trim().split(\":\");\r\n\t\t\tif(record[0] !== 'cell') continue;\r\n\t\t\tvar addr = decode_cell(record[1]);\r\n\t\t\tif(arr.length <= addr.r) for(R = arr.length; R <= addr.r; ++R) if(!arr[R]) arr[R] = [];\r\n\t\t\tR = addr.r; C = addr.c;\r\n\t\t\tswitch(record[2]) {\r\n\t\t\t\tcase 't': arr[R][C] = decode(record[3]); break;\r\n\t\t\t\tcase 'v': arr[R][C] = +record[3]; break;\r\n\t\t\t\tcase 'vtf': var _f = record[record.length - 1];\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase 'vtc':\r\n\t\t\t\t\tswitch(record[3]) {\r\n\t\t\t\t\t\tcase 'nl': arr[R][C] = +record[4] ? true : false; break;\r\n\t\t\t\t\t\tdefault: arr[R][C] = +record[4]; break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\r\n\t\treturn arr;\r\n\t}\r\n\r\n\tfunction eth_to_sheet(d, opts) { return aoa_to_sheet(eth_to_aoa(d, opts), opts); }\r\n\tfunction eth_to_workbook(d, opts) { return sheet_to_workbook(eth_to_sheet(d, opts), opts); }\r\n\r\n\tvar header = [\r\n\t\t\"socialcalc:version:1.5\",\r\n\t\t\"MIME-Version: 1.0\",\r\n\t\t\"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"\r\n\t].join(\"\\n\");\r\n\r\n\tvar sep = [\r\n\t\t\"--SocialCalcSpreadsheetControlSave\",\r\n\t\t\"Content-type: text/plain; charset=UTF-8\"\r\n\t].join(\"\\n\") + \"\\n\";\r\n\r\n\t/* TODO: the other parts */\r\n\tvar meta = [\r\n\t\t\"# SocialCalc Spreadsheet Control Save\",\r\n\t\t\"part:sheet\"\r\n\t].join(\"\\n\");\r\n\r\n\tvar end = \"--SocialCalcSpreadsheetControlSave--\";\r\n\r\n\tfunction sheet_to_eth_data(ws) {\r\n\t\tif(!ws || !ws['!ref']) return \"\";\r\n\t\tvar o = [], oo = [], cell, coord = \"\";\r\n\t\tvar r = decode_range(ws['!ref']);\r\n\t\tvar dense = Array.isArray(ws);\r\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\r\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\r\n\t\t\t\tcoord = encode_cell({r:R,c:C});\r\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\r\n\t\t\t\tif(!cell || cell.v == null || cell.t === 'z') continue;\r\n\t\t\t\too = [\"cell\", coord, 't'];\r\n\t\t\t\tswitch(cell.t) {\r\n\t\t\t\t\tcase 's': case 'str': oo.push(encode(cell.v)); break;\r\n\t\t\t\t\tcase 'n':\r\n\t\t\t\t\t\tif(!cell.f) { oo[2]='v'; oo[3]=cell.v; }\r\n\t\t\t\t\t\telse { oo[2]='vtf'; oo[3]='n'; oo[4]=cell.v; oo[5]=encode(cell.f); }\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\too[2] = 'vt'+(cell.f?'f':'c'); oo[3]='nl'; oo[4]=cell.v?\"1\":\"0\";\r\n\t\t\t\t\t\too[5] = encode(cell.f||(cell.v?'TRUE':'FALSE'));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\tvar t = datenum(parseDate(cell.v));\r\n\t\t\t\t\t\too[2] = 'vtc'; oo[3] = 'nd'; oo[4] = \"\"+t;\r\n\t\t\t\t\t\too[5] = cell.w || SSF.format(cell.z || SSF._table[14], t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'e': continue;\r\n\t\t\t\t}\r\n\t\t\t\to.push(oo.join(\":\"));\r\n\t\t\t}\r\n\t\t}\r\n\t\to.push(\"sheet:c:\" + (r.e.c-r.s.c+1) + \":r:\" + (r.e.r-r.s.r+1) + \":tvf:1\");\r\n\t\to.push(\"valueformat:1:text-wiki\");\r\n\t\t//o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\r\n\t\treturn o.join(\"\\n\");\r\n\t}\r\n\r\n\tfunction sheet_to_eth(ws) {\r\n\t\treturn [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\r\n\t\t// return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\r\n\t}\r\n\r\n\treturn {\r\n\t\tto_workbook: eth_to_workbook,\r\n\t\tto_sheet: eth_to_sheet,\r\n\t\tfrom_sheet: sheet_to_eth\r\n\t};\r\n})();\r\n\r\nvar PRN = (function() {\r\n\tfunction set_text_arr(data, arr, R, C, o) {\r\n\t\tif(o.raw) arr[R][C] = data;\r\n\t\telse if(data === 'TRUE') arr[R][C] = true;\r\n\t\telse if(data === 'FALSE') arr[R][C] = false;\r\n\t\telse if(data === \"\"){/* empty */}\r\n\t\telse if(!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);\r\n\t\telse if(!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate(data);\r\n\t\telse arr[R][C] = data;\r\n\t}\r\n\r\n\tfunction prn_to_aoa_str(f, opts) {\r\n\t\tvar o = opts || {};\r\n\t\tvar arr = ([]);\r\n\t\tif(!f || f.length === 0) return arr;\r\n\t\tvar lines = f.split(/[\\r\\n]/);\r\n\t\tvar L = lines.length - 1;\r\n\t\twhile(L >= 0 && lines[L].length === 0) --L;\r\n\t\tvar start = 10, idx = 0;\r\n\t\tvar R = 0;\r\n\t\tfor(; R <= L; ++R) {\r\n\t\t\tidx = lines[R].indexOf(\" \");\r\n\t\t\tif(idx == -1) idx = lines[R].length; else idx++;\r\n\t\t\tstart = Math.max(start, idx);\r\n\t\t}\r\n\t\tfor(R = 0; R <= L; ++R) {\r\n\t\t\tarr[R] = [];\r\n\t\t\t/* TODO: confirm that widths are always 10 */\r\n\t\t\tvar C = 0;\r\n\t\t\tset_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\r\n\t\t\tfor(C = 1; C <= (lines[R].length - start)/10 + 1; ++C)\r\n\t\t\t\tset_text_arr(lines[R].slice(start+(C-1)*10,start+C*10).trim(),arr,R,C,o);\r\n\t\t}\r\n\t\tif(o.sheetRows) arr = arr.slice(0, o.sheetRows);\r\n\t\treturn arr;\r\n\t}\r\n\r\n\t// List of accepted CSV separators\r\n\tvar guess_seps = {\r\n0x2C: ',',\r\n0x09: \"\\t\",\r\n0x3B: ';'\r\n\t};\r\n\r\n\t// CSV separator weights to be used in case of equal numbers\r\n\tvar guess_sep_weights = {\r\n0x2C: 3,\r\n0x09: 2,\r\n0x3B: 1\r\n\t};\r\n\r\n\tfunction guess_sep(str) {\r\n\t\tvar cnt = {}, instr = false, end = 0, cc = 0;\r\n\t\tfor(;end < str.length;++end) {\r\n\t\t\tif((cc=str.charCodeAt(end)) == 0x22) instr = !instr;\r\n\t\t\telse if(!instr && cc in guess_seps) cnt[cc] = (cnt[cc]||0)+1;\r\n\t\t}\r\n\r\n\t\tcc = [];\r\n\t\tfor(end in cnt) if ( cnt.hasOwnProperty(end) ) {\r\n\t\t\tcc.push([ cnt[end], end ]);\r\n\t\t}\r\n\r\n\t\tif ( !cc.length ) {\r\n\t\t\tcnt = guess_sep_weights;\r\n\t\t\tfor(end in cnt) if ( cnt.hasOwnProperty(end) ) {\r\n\t\t\t\tcc.push([ cnt[end], end ]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcc.sort(function(a, b) { return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]]; });\r\n\r\n\t\treturn guess_seps[cc.pop()[1]];\r\n\t}\r\n\r\n\tfunction dsv_to_sheet_str(str, opts) {\r\n\t\tvar o = opts || {};\r\n\t\tvar sep = \"\";\r\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\r\n\t\tvar ws = o.dense ? ([]) : ({});\r\n\t\tvar range = ({s: {c:0, r:0}, e: {c:0, r:0}});\r\n\r\n\t\tif(str.slice(0,4) == \"sep=\" && str.charCodeAt(5) == 10) { sep = str.charAt(4); str = str.slice(6); }\r\n\t\telse sep = guess_sep(str.slice(0,1024));\r\n\t\tvar R = 0, C = 0, v = 0;\r\n\t\tvar start = 0, end = 0, sepcc = sep.charCodeAt(0), instr = false, cc=0;\r\n\t\tstr = str.replace(/\\r\\n/mg, \"\\n\");\r\n\t\tvar _re = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\r\n\t\tfunction finish_cell() {\r\n\t\t\tvar s = str.slice(start, end);\r\n\t\t\tvar cell = ({});\r\n\t\t\tif(s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1,-1).replace(/\"\"/g,'\"');\r\n\t\t\tif(s.length === 0) cell.t = 'z';\r\n\t\t\telse if(o.raw) { cell.t = 's'; cell.v = s; }\r\n\t\t\telse if(s.trim().length === 0) { cell.t = 's'; cell.v = s; }\r\n\t\t\telse if(s.charCodeAt(0) == 0x3D) {\r\n\t\t\t\tif(s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) { cell.t = 's'; cell.v = s.slice(2,-1).replace(/\"\"/g,'\"'); }\r\n\t\t\t\telse if(fuzzyfmla(s)) { cell.t = 'n'; cell.f = s.slice(1); }\r\n\t\t\t\telse { cell.t = 's'; cell.v = s; } }\r\n\t\t\telse if(s == \"TRUE\") { cell.t = 'b'; cell.v = true; }\r\n\t\t\telse if(s == \"FALSE\") { cell.t = 'b'; cell.v = false; }\r\n\t\t\telse if(!isNaN(v = fuzzynum(s))) { cell.t = 'n'; if(o.cellText !== false) cell.w = s; cell.v = v; }\r\n\t\t\telse if(!isNaN(fuzzydate(s).getDate()) || _re && s.match(_re)) {\r\n\t\t\t\tcell.z = o.dateNF || SSF._table[14];\r\n\t\t\t\tvar k = 0;\r\n\t\t\t\tif(_re && s.match(_re)){ s=dateNF_fix(s, o.dateNF, (s.match(_re)||[])); k=1; }\r\n\t\t\t\tif(o.cellDates) { cell.t = 'd'; cell.v = parseDate(s, k); }\r\n\t\t\t\telse { cell.t = 'n'; cell.v = datenum(parseDate(s, k)); }\r\n\t\t\t\tif(o.cellText !== false) cell.w = SSF.format(cell.z, cell.v instanceof Date ? datenum(cell.v):cell.v);\r\n\t\t\t\tif(!o.cellNF) delete cell.z;\r\n\t\t\t} else {\r\n\t\t\t\tcell.t = 's';\r\n\t\t\t\tcell.v = s;\r\n\t\t\t}\r\n\t\t\tif(cell.t == 'z'){}\r\n\t\t\telse if(o.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = cell; }\r\n\t\t\telse ws[encode_cell({c:C,r:R})] = cell;\r\n\t\t\tstart = end+1;\r\n\t\t\tif(range.e.c < C) range.e.c = C;\r\n\t\t\tif(range.e.r < R) range.e.r = R;\r\n\t\t\tif(cc == sepcc) ++C; else { C = 0; ++R; if(o.sheetRows && o.sheetRows <= R) return true; }\r\n\t\t}\r\n\t\touter: for(;end < str.length;++end) switch((cc=str.charCodeAt(end))) {\r\n\t\t\tcase 0x22: instr = !instr; break;\r\n\t\t\tcase sepcc: case 0x0a: case 0x0d: if(!instr && finish_cell()) break outer; break;\r\n\t\t\tdefault: break;\r\n\t\t}\r\n\t\tif(end - start > 0) finish_cell();\r\n\r\n\t\tws['!ref'] = encode_range(range);\r\n\t\treturn ws;\r\n\t}\r\n\r\n\tfunction prn_to_sheet_str(str, opts) {\r\n\t\tif(str.slice(0,4) == \"sep=\") return dsv_to_sheet_str(str, opts);\r\n\t\tif(str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\r\n\t\treturn aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\r\n\t}\r\n\r\n\tfunction prn_to_sheet(d, opts) {\r\n\t\tvar str = \"\", bytes = opts.type == 'string' ? [0,0,0,0] : firstbyte(d, opts);\r\n\t\tswitch(opts.type) {\r\n\t\t\tcase 'base64': str = Base64.decode(d); break;\r\n\t\t\tcase 'binary': str = d; break;\r\n\t\t\tcase 'buffer': str = d.toString('binary'); break;\r\n\t\t\tcase 'array': str = cc2str(d); break;\r\n\t\t\tcase 'string': str = d; break;\r\n\t\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\r\n\t\t}\r\n\t\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));\r\n\t\telse if((opts.type == 'binary' || opts.type == 'buffer') && typeof cptable !== 'undefined' && opts.codepage)  str = cptable.utils.decode(opts.codepage, cptable.utils.encode(1252,str));\r\n\t\tif(str.slice(0,19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\r\n\t\treturn prn_to_sheet_str(str, opts);\r\n\t}\r\n\r\n\tfunction prn_to_workbook(d, opts) { return sheet_to_workbook(prn_to_sheet(d, opts), opts); }\r\n\r\n\tfunction sheet_to_prn(ws) {\r\n\t\tvar o = [];\r\n\t\tvar r = safe_decode_range(ws['!ref']), cell;\r\n\t\tvar dense = Array.isArray(ws);\r\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\r\n\t\t\tvar oo = [];\r\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\r\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\r\n\t\t\t\tcell = dense ? (ws[R]||[])[C] : ws[coord];\r\n\t\t\t\tif(!cell || cell.v == null) { oo.push(\"          \"); continue; }\r\n\t\t\t\tvar w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0,10);\r\n\t\t\t\twhile(w.length < 10) w += \" \";\r\n\t\t\t\too.push(w + (C === 0 ? \" \" : \"\"));\r\n\t\t\t}\r\n\t\t\to.push(oo.join(\"\"));\r\n\t\t}\r\n\t\treturn o.join(\"\\n\");\r\n\t}\r\n\r\n\treturn {\r\n\t\tto_workbook: prn_to_workbook,\r\n\t\tto_sheet: prn_to_sheet,\r\n\t\tfrom_sheet: sheet_to_prn\r\n\t};\r\n})();\r\n\r\n/* Excel defaults to SYLK but warns if data is not valid */\r\nfunction read_wb_ID(d, opts) {\r\n\tvar o = opts || {}, OLD_WTF = !!o.WTF; o.WTF = true;\r\n\ttry {\r\n\t\tvar out = SYLK.to_workbook(d, o);\r\n\t\to.WTF = OLD_WTF;\r\n\t\treturn out;\r\n\t} catch(e) {\r\n\t\to.WTF = OLD_WTF;\r\n\t\tif(!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\r\n\t\treturn PRN.to_workbook(d, opts);\r\n\t}\r\n}\r\n\r\nvar WK_ = (function() {\r\n\tfunction lotushopper(data, cb, opts) {\r\n\t\tif(!data) return;\r\n\t\tprep_blob(data, data.l || 0);\r\n\t\tvar Enum = opts.Enum || WK1Enum;\r\n\t\twhile(data.l < data.length) {\r\n\t\t\tvar RT = data.read_shift(2);\r\n\t\t\tvar R = Enum[RT] || Enum[0xFF];\r\n\t\t\tvar length = data.read_shift(2);\r\n\t\t\tvar tgt = data.l + length;\r\n\t\t\tvar d = (R.f||parsenoop)(data, length, opts);\r\n\t\t\tdata.l = tgt;\r\n\t\t\tif(cb(d, R.n, RT)) return;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction lotus_to_workbook(d, opts) {\r\n\t\tswitch(opts.type) {\r\n\t\t\tcase 'base64': return lotus_to_workbook_buf(s2a(Base64.decode(d)), opts);\r\n\t\t\tcase 'binary': return lotus_to_workbook_buf(s2a(d), opts);\r\n\t\t\tcase 'buffer':\r\n\t\t\tcase 'array': return lotus_to_workbook_buf(d, opts);\r\n\t\t}\r\n\t\tthrow \"Unsupported type \" + opts.type;\r\n\t}\r\n\r\n\tfunction lotus_to_workbook_buf(d, opts) {\r\n\t\tif(!d) return d;\r\n\t\tvar o = opts || {};\r\n\t\tif(DENSE != null && o.dense == null) o.dense = DENSE;\r\n\t\tvar s = ((o.dense ? [] : {})), n = \"Sheet1\", sidx = 0;\r\n\t\tvar sheets = {}, snames = [n];\r\n\r\n\t\tvar refguess = {s: {r:0, c:0}, e: {r:0, c:0} };\r\n\t\tvar sheetRows = o.sheetRows || 0;\r\n\r\n\t\tif(d[2] == 0x02) o.Enum = WK1Enum;\r\n\t\telse if(d[2] == 0x1a) o.Enum = WK3Enum;\r\n\t\telse if(d[2] == 0x0e) { o.Enum = WK3Enum; o.qpro = true; d.l = 0; }\r\n\t\telse throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\r\n\t\tlotushopper(d, function(val, Rn, RT) {\r\n\t\t\tif(d[2] == 0x02) switch(RT) {\r\n\t\t\t\tcase 0x00:\r\n\t\t\t\t\to.vers = val;\r\n\t\t\t\t\tif(val >= 0x1000) o.qpro = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 0x06: refguess = val; break; /* RANGE */\r\n\t\t\t\tcase 0x0F: /* LABEL */\r\n\t\t\t\t\tif(!o.qpro) val[1].v = val[1].v.slice(1);\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase 0x0D: /* INTEGER */\r\n\t\t\t\tcase 0x0E: /* NUMBER */\r\n\t\t\t\tcase 0x10: /* FORMULA */\r\n\t\t\t\tcase 0x33: /* STRING */\r\n\t\t\t\t\t/* TODO: actual translation of the format code */\r\n\t\t\t\t\tif(RT == 0x0E && (val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\r\n\t\t\t\t\t\tval[1].z = o.dateNF || SSF._table[14];\r\n\t\t\t\t\t\tif(o.cellDates) { val[1].t = 'd'; val[1].v = numdate(val[1].v); }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(o.dense) {\r\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\r\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\r\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\r\n\t\t\t\t\tbreak;\r\n\t\t\t} else switch(RT) {\r\n\t\t\t\tcase 0x16: /* LABEL16 */\r\n\t\t\t\t\tval[1].v = val[1].v.slice(1);\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase 0x17: /* NUMBER17 */\r\n\t\t\t\tcase 0x18: /* NUMBER18 */\r\n\t\t\t\tcase 0x19: /* FORMULA19 */\r\n\t\t\t\tcase 0x25: /* NUMBER25 */\r\n\t\t\t\tcase 0x27: /* NUMBER27 */\r\n\t\t\t\tcase 0x28: /* FORMULA28 */\r\n\t\t\t\t\tif(val[3] > sidx) {\r\n\t\t\t\t\t\ts[\"!ref\"] = encode_range(refguess);\r\n\t\t\t\t\t\tsheets[n] = s;\r\n\t\t\t\t\t\ts = (o.dense ? [] : {});\r\n\t\t\t\t\t\trefguess = {s: {r:0, c:0}, e: {r:0, c:0} };\r\n\t\t\t\t\t\tsidx = val[3]; n = \"Sheet\" + (sidx + 1);\r\n\t\t\t\t\t\tsnames.push(n);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(sheetRows > 0 && val[0].r >= sheetRows) break;\r\n\t\t\t\t\tif(o.dense) {\r\n\t\t\t\t\t\tif(!s[val[0].r]) s[val[0].r] = [];\r\n\t\t\t\t\t\ts[val[0].r][val[0].c] = val[1];\r\n\t\t\t\t\t} else s[encode_cell(val[0])] = val[1];\r\n\t\t\t\t\tif(refguess.e.c < val[0].c) refguess.e.c = val[0].c;\r\n\t\t\t\t\tif(refguess.e.r < val[0].r) refguess.e.r = val[0].r;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}, o);\r\n\r\n\t\ts[\"!ref\"] = encode_range(refguess);\r\n\t\tsheets[n] = s;\r\n\t\treturn { SheetNames: snames, Sheets:sheets };\r\n\t}\r\n\r\n\tfunction parse_RANGE(blob) {\r\n\t\tvar o = {s:{c:0,r:0},e:{c:0,r:0}};\r\n\t\to.s.c = blob.read_shift(2);\r\n\t\to.s.r = blob.read_shift(2);\r\n\t\to.e.c = blob.read_shift(2);\r\n\t\to.e.r = blob.read_shift(2);\r\n\t\tif(o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_cell(blob, length, opts) {\r\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\r\n\t\tif(opts.qpro && opts.vers != 0x5120) {\r\n\t\t\to[0].c = blob.read_shift(1);\r\n\t\t\tblob.l++;\r\n\t\t\to[0].r = blob.read_shift(2);\r\n\t\t\tblob.l+=2;\r\n\t\t} else {\r\n\t\t\to[2] = blob.read_shift(1);\r\n\t\t\to[0].c = blob.read_shift(2); o[0].r = blob.read_shift(2);\r\n\t\t}\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_LABEL(blob, length, opts) {\r\n\t\tvar tgt = blob.l + length;\r\n\t\tvar o = parse_cell(blob, length, opts);\r\n\t\to[1].t = 's';\r\n\t\tif(opts.vers == 0x5120) {\r\n\t\t\tblob.l++;\r\n\t\t\tvar len = blob.read_shift(1);\r\n\t\t\to[1].v = blob.read_shift(len, 'utf8');\r\n\t\t\treturn o;\r\n\t\t}\r\n\t\tif(opts.qpro) blob.l++;\r\n\t\to[1].v = blob.read_shift(tgt - blob.l, 'cstr');\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_INTEGER(blob, length, opts) {\r\n\t\tvar o = parse_cell(blob, length, opts);\r\n\t\to[1].v = blob.read_shift(2, 'i');\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_NUMBER(blob, length, opts) {\r\n\t\tvar o = parse_cell(blob, length, opts);\r\n\t\to[1].v = blob.read_shift(8, 'f');\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_FORMULA(blob, length, opts) {\r\n\t\tvar tgt = blob.l + length;\r\n\t\tvar o = parse_cell(blob, length, opts);\r\n\t\t/* TODO: formula */\r\n\t\to[1].v = blob.read_shift(8, 'f');\r\n\t\tif(opts.qpro) blob.l = tgt;\r\n\t\telse {\r\n\t\t\tvar flen = blob.read_shift(2);\r\n\t\t\tblob.l += flen;\r\n\t\t}\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_cell_3(blob) {\r\n\t\tvar o = [{c:0,r:0}, {t:'n',v:0}, 0];\r\n\t\to[0].r = blob.read_shift(2); o[3] = blob[blob.l++]; o[0].c = blob[blob.l++];\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_LABEL_16(blob, length) {\r\n\t\tvar o = parse_cell_3(blob, length);\r\n\t\to[1].t = 's';\r\n\t\to[1].v = blob.read_shift(length - 4, 'cstr');\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_NUMBER_18(blob, length) {\r\n\t\tvar o = parse_cell_3(blob, length);\r\n\t\to[1].v = blob.read_shift(2);\r\n\t\tvar v = o[1].v >> 1;\r\n\t\t/* TODO: figure out all of the corner cases */\r\n\t\tif(o[1].v & 0x1) {\r\n\t\t\tswitch(v & 0x07) {\r\n\t\t\t\tcase 1: v = (v >> 3) * 500; break;\r\n\t\t\t\tcase 2: v = (v >> 3) / 20; break;\r\n\t\t\t\tcase 4: v = (v >> 3) / 2000; break;\r\n\t\t\t\tcase 6: v = (v >> 3) / 16; break;\r\n\t\t\t\tcase 7: v = (v >> 3) / 64; break;\r\n\t\t\t\tdefault: throw \"unknown NUMBER_18 encoding \" + (v & 0x07);\r\n\t\t\t}\r\n\t\t}\r\n\t\to[1].v = v;\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_NUMBER_17(blob, length) {\r\n\t\tvar o = parse_cell_3(blob, length);\r\n\t\tvar v1 = blob.read_shift(4);\r\n\t\tvar v2 = blob.read_shift(4);\r\n\t\tvar e = blob.read_shift(2);\r\n\t\tif(e == 0xFFFF) { o[1].v = 0; return o; }\r\n\t\tvar s = e & 0x8000; e = (e&0x7FFF) - 16446;\r\n\t\to[1].v = (s*2 - 1) * ((e > 0 ? (v2 << e) : (v2 >>> -e)) + (e > -32 ? (v1 << (e + 32)) : (v1 >>> -(e + 32))));\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_FORMULA_19(blob, length) {\r\n\t\tvar o = parse_NUMBER_17(blob, 14);\r\n\t\tblob.l += length - 14; /* TODO: formula */\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_NUMBER_25(blob, length) {\r\n\t\tvar o = parse_cell_3(blob, length);\r\n\t\tvar v1 = blob.read_shift(4);\r\n\t\to[1].v = v1 >> 6;\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_NUMBER_27(blob, length) {\r\n\t\tvar o = parse_cell_3(blob, length);\r\n\t\tvar v1 = blob.read_shift(8,'f');\r\n\t\to[1].v = v1;\r\n\t\treturn o;\r\n\t}\r\n\r\n\tfunction parse_FORMULA_28(blob, length) {\r\n\t\tvar o = parse_NUMBER_27(blob, 14);\r\n\t\tblob.l += length - 10; /* TODO: formula */\r\n\t\treturn o;\r\n\t}\r\n\r\n\tvar WK1Enum = {\r\n0x0000: { n:\"BOF\", f:parseuint16 },\r\n0x0001: { n:\"EOF\" },\r\n0x0002: { n:\"CALCMODE\" },\r\n0x0003: { n:\"CALCORDER\" },\r\n0x0004: { n:\"SPLIT\" },\r\n0x0005: { n:\"SYNC\" },\r\n0x0006: { n:\"RANGE\", f:parse_RANGE },\r\n0x0007: { n:\"WINDOW1\" },\r\n0x0008: { n:\"COLW1\" },\r\n0x0009: { n:\"WINTWO\" },\r\n0x000A: { n:\"COLW2\" },\r\n0x000B: { n:\"NAME\" },\r\n0x000C: { n:\"BLANK\" },\r\n0x000D: { n:\"INTEGER\", f:parse_INTEGER },\r\n0x000E: { n:\"NUMBER\", f:parse_NUMBER },\r\n0x000F: { n:\"LABEL\", f:parse_LABEL },\r\n0x0010: { n:\"FORMULA\", f:parse_FORMULA },\r\n0x0018: { n:\"TABLE\" },\r\n0x0019: { n:\"ORANGE\" },\r\n0x001A: { n:\"PRANGE\" },\r\n0x001B: { n:\"SRANGE\" },\r\n0x001C: { n:\"FRANGE\" },\r\n0x001D: { n:\"KRANGE1\" },\r\n0x0020: { n:\"HRANGE\" },\r\n0x0023: { n:\"KRANGE2\" },\r\n0x0024: { n:\"PROTEC\" },\r\n0x0025: { n:\"FOOTER\" },\r\n0x0026: { n:\"HEADER\" },\r\n0x0027: { n:\"SETUP\" },\r\n0x0028: { n:\"MARGINS\" },\r\n0x0029: { n:\"LABELFMT\" },\r\n0x002A: { n:\"TITLES\" },\r\n0x002B: { n:\"SHEETJS\" },\r\n0x002D: { n:\"GRAPH\" },\r\n0x002E: { n:\"NGRAPH\" },\r\n0x002F: { n:\"CALCCOUNT\" },\r\n0x0030: { n:\"UNFORMATTED\" },\r\n0x0031: { n:\"CURSORW12\" },\r\n0x0032: { n:\"WINDOW\" },\r\n0x0033: { n:\"STRING\", f:parse_LABEL },\r\n0x0037: { n:\"PASSWORD\" },\r\n0x0038: { n:\"LOCKED\" },\r\n0x003C: { n:\"QUERY\" },\r\n0x003D: { n:\"QUERYNAME\" },\r\n0x003E: { n:\"PRINT\" },\r\n0x003F: { n:\"PRINTNAME\" },\r\n0x0040: { n:\"GRAPH2\" },\r\n0x0041: { n:\"GRAPHNAME\" },\r\n0x0042: { n:\"ZOOM\" },\r\n0x0043: { n:\"SYMSPLIT\" },\r\n0x0044: { n:\"NSROWS\" },\r\n0x0045: { n:\"NSCOLS\" },\r\n0x0046: { n:\"RULER\" },\r\n0x0047: { n:\"NNAME\" },\r\n0x0048: { n:\"ACOMM\" },\r\n0x0049: { n:\"AMACRO\" },\r\n0x004A: { n:\"PARSE\" },\r\n0x00FF: { n:\"\", f:parsenoop }\r\n\t};\r\n\r\n\tvar WK3Enum = {\r\n0x0000: { n:\"BOF\" },\r\n0x0001: { n:\"EOF\" },\r\n0x0003: { n:\"??\" },\r\n0x0004: { n:\"??\" },\r\n0x0005: { n:\"??\" },\r\n0x0006: { n:\"??\" },\r\n0x0007: { n:\"??\" },\r\n0x0009: { n:\"??\" },\r\n0x000a: { n:\"??\" },\r\n0x000b: { n:\"??\" },\r\n0x000c: { n:\"??\" },\r\n0x000e: { n:\"??\" },\r\n0x000f: { n:\"??\" },\r\n0x0010: { n:\"??\" },\r\n0x0011: { n:\"??\" },\r\n0x0012: { n:\"??\" },\r\n0x0013: { n:\"??\" },\r\n0x0015: { n:\"??\" },\r\n0x0016: { n:\"LABEL16\", f:parse_LABEL_16},\r\n0x0017: { n:\"NUMBER17\", f:parse_NUMBER_17 },\r\n0x0018: { n:\"NUMBER18\", f:parse_NUMBER_18 },\r\n0x0019: { n:\"FORMULA19\", f:parse_FORMULA_19},\r\n0x001a: { n:\"??\" },\r\n0x001b: { n:\"??\" },\r\n0x001c: { n:\"??\" },\r\n0x001d: { n:\"??\" },\r\n0x001e: { n:\"??\" },\r\n0x001f: { n:\"??\" },\r\n0x0021: { n:\"??\" },\r\n0x0025: { n:\"NUMBER25\", f:parse_NUMBER_25 },\r\n0x0027: { n:\"NUMBER27\", f:parse_NUMBER_27 },\r\n0x0028: { n:\"FORMULA28\", f:parse_FORMULA_28 },\r\n0x00FF: { n:\"\", f:parsenoop }\r\n\t};\r\n\treturn {\r\n\t\tto_workbook: lotus_to_workbook\r\n\t};\r\n})();\r\n/* Parse a list of <r> tags */\r\nvar parse_rs = (function parse_rs_factory() {\r\n\tvar tregex = matchtag(\"t\"), rpregex = matchtag(\"rPr\"), rregex = /<(?:\\w+:)?r>/g, rend = /<\\/(?:\\w+:)?r>/, nlregex = /\\r\\n/g;\r\n\t/* 18.4.7 rPr CT_RPrElt */\r\n\tvar parse_rpr = function parse_rpr(rpr, intro, outro) {\r\n\t\tvar font = {}, cp = 65001, align = \"\";\r\n\t\tvar m = rpr.match(tagregex), i = 0;\r\n\t\tif(m) for(;i!=m.length; ++i) {\r\n\t\t\tvar y = parsexmltag(m[i]);\r\n\t\t\tswitch(y[0].replace(/\\w*:/g,\"\")) {\r\n\t\t\t\t/* 18.8.12 condense CT_BooleanProperty */\r\n\t\t\t\t/* ** not required . */\r\n\t\t\t\tcase '<condense': break;\r\n\t\t\t\t/* 18.8.17 extend CT_BooleanProperty */\r\n\t\t\t\t/* ** not required . */\r\n\t\t\t\tcase '<extend': break;\r\n\t\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\r\n\t\t\t\t/* ** not required . */\r\n\t\t\t\tcase '<shadow':\r\n\t\t\t\t\tif(!y.val) break;\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase '<shadow>':\r\n\t\t\t\tcase '<shadow/>': font.shadow = 1; break;\r\n\t\t\t\tcase '</shadow>': break;\r\n\r\n\t\t\t\t/* 18.4.1 charset CT_IntProperty TODO */\r\n\t\t\t\tcase '<charset':\r\n\t\t\t\t\tif(y.val == '1') break;\r\n\t\t\t\t\tcp = CS2CP[parseInt(y.val, 10)];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t/* 18.4.2 outline CT_BooleanProperty TODO */\r\n\t\t\t\tcase '<outline':\r\n\t\t\t\t\tif(!y.val) break;\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase '<outline>':\r\n\t\t\t\tcase '<outline/>': font.outline = 1; break;\r\n\t\t\t\tcase '</outline>': break;\r\n\r\n\t\t\t\t/* 18.4.5 rFont CT_FontName */\r\n\t\t\t\tcase '<rFont': font.name = y.val; break;\r\n\r\n\t\t\t\t/* 18.4.11 sz CT_FontSize */\r\n\t\t\t\tcase '<sz': font.sz = y.val; break;\r\n\r\n\t\t\t\t/* 18.4.10 strike CT_BooleanProperty */\r\n\t\t\t\tcase '<strike':\r\n\t\t\t\t\tif(!y.val) break;\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase '<strike>':\r\n\t\t\t\tcase '<strike/>': font.strike = 1; break;\r\n\t\t\t\tcase '</strike>': break;\r\n\r\n\t\t\t\t/* 18.4.13 u CT_UnderlineProperty */\r\n\t\t\t\tcase '<u':\r\n\t\t\t\t\tif(!y.val) break;\r\n\t\t\t\t\tswitch(y.val) {\r\n\t\t\t\t\t\tcase 'double': font.uval = \"double\"; break;\r\n\t\t\t\t\t\tcase 'singleAccounting': font.uval = \"single-accounting\"; break;\r\n\t\t\t\t\t\tcase 'doubleAccounting': font.uval = \"double-accounting\"; break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase '<u>':\r\n\t\t\t\tcase '<u/>': font.u = 1; break;\r\n\t\t\t\tcase '</u>': break;\r\n\r\n\t\t\t\t/* 18.8.2 b */\r\n\t\t\t\tcase '<b':\r\n\t\t\t\t\tif(y.val == '0') break;\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase '<b>':\r\n\t\t\t\tcase '<b/>': font.b = 1; break;\r\n\t\t\t\tcase '</b>': break;\r\n\r\n\t\t\t\t/* 18.8.26 i */\r\n\t\t\t\tcase '<i':\r\n\t\t\t\t\tif(y.val == '0') break;\r\n\t\t\t\t\t/* falls through */\r\n\t\t\t\tcase '<i>':\r\n\t\t\t\tcase '<i/>': font.i = 1; break;\r\n\t\t\t\tcase '</i>': break;\r\n\r\n\t\t\t\t/* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\r\n\t\t\t\tcase '<color':\r\n\t\t\t\t\tif(y.rgb) font.color = y.rgb.slice(2,8);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t/* 18.8.18 family ST_FontFamily */\r\n\t\t\t\tcase '<family': font.family = y.val; break;\r\n\r\n\t\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\r\n\t\t\t\tcase '<vertAlign': align = y.val; break;\r\n\r\n\t\t\t\t/* 18.8.35 scheme CT_FontScheme TODO */\r\n\t\t\t\tcase '<scheme': break;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(y[0].charCodeAt(1) !== 47) throw 'Unrecognized rich format ' + y[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar style = [];\r\n\r\n\t\tif(font.u) style.push(\"text-decoration: underline;\");\r\n\t\tif(font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\r\n\t\tif(font.sz) style.push(\"font-size:\" + font.sz + \";\");\r\n\t\tif(font.outline) style.push(\"text-effect: outline;\");\r\n\t\tif(font.shadow) style.push(\"text-shadow: auto;\");\r\n\t\tintro.push('<span style=\"' + style.join(\"\") + '\">');\r\n\r\n\t\tif(font.b) { intro.push(\"<b>\"); outro.push(\"</b>\"); }\r\n\t\tif(font.i) { intro.push(\"<i>\"); outro.push(\"</i>\"); }\r\n\t\tif(font.strike) { intro.push(\"<s>\"); outro.push(\"</s>\"); }\r\n\r\n\t\tif(align == \"superscript\") align = \"sup\";\r\n\t\telse if(align == \"subscript\") align = \"sub\";\r\n\t\tif(align != \"\") { intro.push(\"<\" + align + \">\"); outro.push(\"</\" + align + \">\"); }\r\n\r\n\t\toutro.push(\"</span>\");\r\n\t\treturn cp;\r\n\t};\r\n\r\n\t/* 18.4.4 r CT_RElt */\r\n\tfunction parse_r(r) {\r\n\t\tvar terms = [[],\"\",[]];\r\n\t\t/* 18.4.12 t ST_Xstring */\r\n\t\tvar t = r.match(tregex)/*, cp = 65001*/;\r\n\t\tif(!t) return \"\";\r\n\t\tterms[1] = t[1];\r\n\r\n\t\tvar rpr = r.match(rpregex);\r\n\t\tif(rpr) /*cp = */parse_rpr(rpr[1], terms[0], terms[2]);\r\n\r\n\t\treturn terms[0].join(\"\") + terms[1].replace(nlregex,'<br/>') + terms[2].join(\"\");\r\n\t}\r\n\treturn function parse_rs(rs) {\r\n\t\treturn rs.replace(rregex,\"\").split(rend).map(parse_r).join(\"\");\r\n\t};\r\n})();\r\n\r\n/* 18.4.8 si CT_Rst */\r\nvar sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g, sirregex = /<(?:\\w+:)?r>/;\r\nvar sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\r\nfunction parse_si(x, opts) {\r\n\tvar html = opts ? opts.cellHTML : true;\r\n\tvar z = {};\r\n\tif(!x) return null;\r\n\t//var y;\r\n\t/* 18.4.12 t ST_Xstring (Plaintext String) */\r\n\t// TODO: is whitespace actually valid here?\r\n\tif(x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\r\n\t\tz.t = unescapexml(utf8read(x.slice(x.indexOf(\">\")+1).split(/<\\/(?:\\w+:)?t>/)[0]||\"\"));\r\n\t\tz.r = utf8read(x);\r\n\t\tif(html) z.h = escapehtml(z.t);\r\n\t}\r\n\t/* 18.4.4 r CT_RElt (Rich Text Run) */\r\n\telse if((/*y = */x.match(sirregex))) {\r\n\t\tz.r = utf8read(x);\r\n\t\tz.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex)||[]).join(\"\").replace(tagregex,\"\")));\r\n\t\tif(html) z.h = parse_rs(z.r);\r\n\t}\r\n\t/* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\r\n\t/* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\r\n\treturn z;\r\n}\r\n\r\n/* 18.4 Shared String Table */\r\nvar sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\r\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\r\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\r\nfunction parse_sst_xml(data, opts) {\r\n\tvar s = ([]), ss = \"\";\r\n\tif(!data) return s;\r\n\t/* 18.4.9 sst CT_Sst */\r\n\tvar sst = data.match(sstr0);\r\n\tif(sst) {\r\n\t\tss = sst[2].replace(sstr1,\"\").split(sstr2);\r\n\t\tfor(var i = 0; i != ss.length; ++i) {\r\n\t\t\tvar o = parse_si(ss[i].trim(), opts);\r\n\t\t\tif(o != null) s[s.length] = o;\r\n\t\t}\r\n\t\tsst = parsexmltag(sst[1]); s.Count = sst.count; s.Unique = sst.uniqueCount;\r\n\t}\r\n\treturn s;\r\n}\r\n\r\nRELS.SST = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\";\r\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\r\nfunction write_sst_xml(sst, opts) {\r\n\tif(!opts.bookSST) return \"\";\r\n\tvar o = [XML_HEADER];\r\n\to[o.length] = (writextag('sst', null, {\r\n\t\txmlns: XMLNS.main[0],\r\n\t\tcount: sst.Count,\r\n\t\tuniqueCount: sst.Unique\r\n\t}));\r\n\tfor(var i = 0; i != sst.length; ++i) { if(sst[i] == null) continue;\r\n\t\tvar s = sst[i];\r\n\t\tvar sitag = \"<si>\";\r\n\t\tif(s.r) sitag += s.r;\r\n\t\telse {\r\n\t\t\tsitag += \"<t\";\r\n\t\t\tif(!s.t) s.t = \"\";\r\n\t\t\tif(s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\r\n\t\t\tsitag += \">\" + escapexml(s.t) + \"</t>\";\r\n\t\t}\r\n\t\tsitag += \"</si>\";\r\n\t\to[o.length] = (sitag);\r\n\t}\r\n\tif(o.length>2){ o[o.length] = ('</sst>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\r\nfunction parse_BrtBeginSst(data) {\r\n\treturn [data.read_shift(4), data.read_shift(4)];\r\n}\r\n\r\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\r\nfunction parse_sst_bin(data, opts) {\r\n\tvar s = ([]);\r\n\tvar pass = false;\r\n\trecordhopper(data, function hopper_sst(val, R_n, RT) {\r\n\t\tswitch(RT) {\r\n\t\t\tcase 0x009F: /* 'BrtBeginSst' */\r\n\t\t\t\ts.Count = val[0]; s.Unique = val[1]; break;\r\n\t\t\tcase 0x0013: /* 'BrtSSTItem' */\r\n\t\t\t\ts.push(val); break;\r\n\t\t\tcase 0x00A0: /* 'BrtEndSst' */\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\r\n\t\t\t\tpass = true; break;\r\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\r\n\t\t\t\tpass = false; break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif(R_n.indexOf(\"Begin\") > 0){/* empty */}\r\n\t\t\t\telse if(R_n.indexOf(\"End\") > 0){/* empty */}\r\n\t\t\t\tif(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\r\n\t\t}\r\n\t});\r\n\treturn s;\r\n}\r\n\r\nfunction write_BrtBeginSst(sst, o) {\r\n\tif(!o) o = new_buf(8);\r\n\to.write_shift(4, sst.Count);\r\n\to.write_shift(4, sst.Unique);\r\n\treturn o;\r\n}\r\n\r\nvar write_BrtSSTItem = write_RichStr;\r\n\r\nfunction write_sst_bin(sst) {\r\n\tvar ba = buf_array();\r\n\twrite_record(ba, \"BrtBeginSst\", write_BrtBeginSst(sst));\r\n\tfor(var i = 0; i < sst.length; ++i) write_record(ba, \"BrtSSTItem\", write_BrtSSTItem(sst[i]));\r\n\t/* FRTSST */\r\n\twrite_record(ba, \"BrtEndSst\");\r\n\treturn ba.end();\r\n}\r\nfunction _JS2ANSI(str) {\r\n\tif(typeof cptable !== 'undefined') return cptable.utils.encode(current_ansi, str);\r\n\tvar o = [], oo = str.split(\"\");\r\n\tfor(var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.1.4 Version */\r\nfunction parse_CRYPTOVersion(blob, length) {\r\n\tvar o = {};\r\n\to.Major = blob.read_shift(2);\r\n\to.Minor = blob.read_shift(2);\r\nif(length >= 4) blob.l += length - 4;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\r\nfunction parse_DataSpaceVersionInfo(blob) {\r\n\tvar o = {};\r\n\to.id = blob.read_shift(0, 'lpp4');\r\n\to.R = parse_CRYPTOVersion(blob, 4);\r\n\to.U = parse_CRYPTOVersion(blob, 4);\r\n\to.W = parse_CRYPTOVersion(blob, 4);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\r\nfunction parse_DataSpaceMapEntry(blob) {\r\n\tvar len = blob.read_shift(4);\r\n\tvar end = blob.l + len - 4;\r\n\tvar o = {};\r\n\tvar cnt = blob.read_shift(4);\r\n\tvar comps = [];\r\n\t/* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\r\n\twhile(cnt-- > 0) comps.push({ t: blob.read_shift(4), v: blob.read_shift(0, 'lpp4') });\r\n\to.name = blob.read_shift(0, 'lpp4');\r\n\to.comps = comps;\r\n\tif(blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\r\nfunction parse_DataSpaceMap(blob) {\r\n\tvar o = [];\r\n\tblob.l += 4; // must be 0x8\r\n\tvar cnt = blob.read_shift(4);\r\n\twhile(cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\r\nfunction parse_DataSpaceDefinition(blob) {\r\n\tvar o = [];\r\n\tblob.l += 4; // must be 0x8\r\n\tvar cnt = blob.read_shift(4);\r\n\twhile(cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\r\nfunction parse_TransformInfoHeader(blob) {\r\n\tvar o = {};\r\n\t/*var len = */blob.read_shift(4);\r\n\tblob.l += 4; // must be 0x1\r\n\to.id = blob.read_shift(0, 'lpp4');\r\n\to.name = blob.read_shift(0, 'lpp4');\r\n\to.R = parse_CRYPTOVersion(blob, 4);\r\n\to.U = parse_CRYPTOVersion(blob, 4);\r\n\to.W = parse_CRYPTOVersion(blob, 4);\r\n\treturn o;\r\n}\r\n\r\nfunction parse_Primary(blob) {\r\n\t/* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\r\n\tvar hdr = parse_TransformInfoHeader(blob);\r\n\t/* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\r\n\thdr.ename = blob.read_shift(0, '8lpp4');\r\n\thdr.blksz = blob.read_shift(4);\r\n\thdr.cmode = blob.read_shift(4);\r\n\tif(blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\r\n\treturn hdr;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\r\nfunction parse_EncryptionHeader(blob, length) {\r\n\tvar tgt = blob.l + length;\r\n\tvar o = {};\r\n\to.Flags = (blob.read_shift(4) & 0x3F);\r\n\tblob.l += 4;\r\n\to.AlgID = blob.read_shift(4);\r\n\tvar valid = false;\r\n\tswitch(o.AlgID) {\r\n\t\tcase 0x660E: case 0x660F: case 0x6610: valid = (o.Flags == 0x24); break;\r\n\t\tcase 0x6801: valid = (o.Flags == 0x04); break;\r\n\t\tcase 0: valid = (o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24); break;\r\n\t\tdefault: throw 'Unrecognized encryption algorithm: ' + o.AlgID;\r\n\t}\r\n\tif(!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\r\n\to.AlgIDHash = blob.read_shift(4);\r\n\to.KeySize = blob.read_shift(4);\r\n\to.ProviderType = blob.read_shift(4);\r\n\tblob.l += 8;\r\n\to.CSPName = blob.read_shift((tgt-blob.l)>>1, 'utf16le');\r\n\tblob.l = tgt;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\r\nfunction parse_EncryptionVerifier(blob, length) {\r\n\tvar o = {}, tgt = blob.l + length;\r\n\tblob.l += 4; // SaltSize must be 0x10\r\n\to.Salt = blob.slice(blob.l, blob.l+16); blob.l += 16;\r\n\to.Verifier = blob.slice(blob.l, blob.l+16); blob.l += 16;\r\n\t/*var sz = */blob.read_shift(4);\r\n\to.VerifierHash = blob.slice(blob.l, tgt); blob.l = tgt;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\r\nfunction parse_EncryptionInfo(blob) {\r\n\tvar vers = parse_CRYPTOVersion(blob);\r\n\tswitch(vers.Minor) {\r\n\t\tcase 0x02: return [vers.Minor, parse_EncInfoStd(blob, vers)];\r\n\t\tcase 0x03: return [vers.Minor, parse_EncInfoExt(blob, vers)];\r\n\t\tcase 0x04: return [vers.Minor, parse_EncInfoAgl(blob, vers)];\r\n\t}\r\n\tthrow new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\r\nfunction parse_EncInfoStd(blob) {\r\n\tvar flags = blob.read_shift(4);\r\n\tif((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\r\n\tvar sz = blob.read_shift(4);\r\n\t//var tgt = blob.l + sz;\r\n\tvar hdr = parse_EncryptionHeader(blob, sz);\r\n\tvar verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\r\n\treturn { t:\"Std\", h:hdr, v:verifier };\r\n}\r\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\r\nfunction parse_EncInfoExt() { throw new Error(\"File is password-protected: ECMA-376 Extensible\"); }\r\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\r\nfunction parse_EncInfoAgl(blob) {\r\n\tvar KeyData = [\"saltSize\",\"blockSize\",\"keyBits\",\"hashSize\",\"cipherAlgorithm\",\"cipherChaining\",\"hashAlgorithm\",\"saltValue\"];\r\n\tblob.l+=4;\r\n\tvar xml = blob.read_shift(blob.length - blob.l, 'utf8');\r\n\tvar o = {};\r\n\txml.replace(tagregex, function xml_agile(x) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\tswitch(strip_ns(y[0])) {\r\n\t\t\tcase '<?xml': break;\r\n\t\t\tcase '<encryption': case '</encryption>': break;\r\n\t\t\tcase '<keyData': KeyData.forEach(function(k) { o[k] = y[k]; }); break;\r\n\t\t\tcase '<dataIntegrity': o.encryptedHmacKey = y.encryptedHmacKey; o.encryptedHmacValue = y.encryptedHmacValue; break;\r\n\t\t\tcase '<keyEncryptors>': case '<keyEncryptors': o.encs = []; break;\r\n\t\t\tcase '</keyEncryptors>': break;\r\n\r\n\t\t\tcase '<keyEncryptor': o.uri = y.uri; break;\r\n\t\t\tcase '</keyEncryptor>': break;\r\n\t\t\tcase '<encryptedKey': o.encs.push(y); break;\r\n\t\t\tdefault: throw y[0];\r\n\t\t}\r\n\t});\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\r\nfunction parse_RC4CryptoHeader(blob, length) {\r\n\tvar o = {};\r\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4); length -= 4;\r\n\tif(vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\r\n\tif(vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\r\n\to.Flags = blob.read_shift(4); length -= 4;\r\n\tvar sz = blob.read_shift(4); length -= 4;\r\n\to.EncryptionHeader = parse_EncryptionHeader(blob, sz); length -= sz;\r\n\to.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\r\n\treturn o;\r\n}\r\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\r\nfunction parse_RC4Header(blob) {\r\n\tvar o = {};\r\n\tvar vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\r\n\tif(vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\r\n\to.Salt = blob.read_shift(16);\r\n\to.EncryptedVerifier = blob.read_shift(16);\r\n\to.EncryptedVerifierHash = blob.read_shift(16);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\r\nfunction crypto_CreatePasswordVerifier_Method1(Password) {\r\n\tvar Verifier = 0x0000, PasswordArray;\r\n\tvar PasswordDecoded = _JS2ANSI(Password);\r\n\tvar len = PasswordDecoded.length + 1, i, PasswordByte;\r\n\tvar Intermediate1, Intermediate2, Intermediate3;\r\n\tPasswordArray = new_raw_buf(len);\r\n\tPasswordArray[0] = PasswordDecoded.length;\r\n\tfor(i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i-1];\r\n\tfor(i = len-1; i >= 0; --i) {\r\n\t\tPasswordByte = PasswordArray[i];\r\n\t\tIntermediate1 = ((Verifier & 0x4000) === 0x0000) ? 0 : 1;\r\n\t\tIntermediate2 = (Verifier << 1) & 0x7FFF;\r\n\t\tIntermediate3 = Intermediate1 | Intermediate2;\r\n\t\tVerifier = Intermediate3 ^ PasswordByte;\r\n\t}\r\n\treturn Verifier ^ 0xCE4B;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\r\nvar crypto_CreateXorArray_Method1 = (function() {\r\n\tvar PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\r\n\tvar InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\r\n\tvar XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\r\n\tvar Ror = function(Byte) { return ((Byte/2) | (Byte*128)) & 0xFF; };\r\n\tvar XorRor = function(byte1, byte2) { return Ror(byte1 ^ byte2); };\r\n\tvar CreateXorKey_Method1 = function(Password) {\r\n\t\tvar XorKey = InitialCode[Password.length - 1];\r\n\t\tvar CurrentElement = 0x68;\r\n\t\tfor(var i = Password.length-1; i >= 0; --i) {\r\n\t\t\tvar Char = Password[i];\r\n\t\t\tfor(var j = 0; j != 7; ++j) {\r\n\t\t\t\tif(Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\r\n\t\t\t\tChar *= 2; --CurrentElement;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn XorKey;\r\n\t};\r\n\treturn function(password) {\r\n\t\tvar Password = _JS2ANSI(password);\r\n\t\tvar XorKey = CreateXorKey_Method1(Password);\r\n\t\tvar Index = Password.length;\r\n\t\tvar ObfuscationArray = new_raw_buf(16);\r\n\t\tfor(var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\r\n\t\tvar Temp, PasswordLastChar, PadIndex;\r\n\t\tif((Index & 1) === 1) {\r\n\t\t\tTemp = XorKey >> 8;\r\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[0], Temp);\r\n\t\t\t--Index;\r\n\t\t\tTemp = XorKey & 0xFF;\r\n\t\t\tPasswordLastChar = Password[Password.length - 1];\r\n\t\t\tObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\r\n\t\t}\r\n\t\twhile(Index > 0) {\r\n\t\t\t--Index;\r\n\t\t\tTemp = XorKey >> 8;\r\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\r\n\t\t\t--Index;\r\n\t\t\tTemp = XorKey & 0xFF;\r\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\r\n\t\t}\r\n\t\tIndex = 15;\r\n\t\tPadIndex = 15 - Password.length;\r\n\t\twhile(PadIndex > 0) {\r\n\t\t\tTemp = XorKey >> 8;\r\n\t\t\tObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\r\n\t\t\t--Index;\r\n\t\t\t--PadIndex;\r\n\t\t\tTemp = XorKey & 0xFF;\r\n\t\t\tObfuscationArray[Index] = XorRor(Password[Index], Temp);\r\n\t\t\t--Index;\r\n\t\t\t--PadIndex;\r\n\t\t}\r\n\t\treturn ObfuscationArray;\r\n\t};\r\n})();\r\n\r\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\r\nvar crypto_DecryptData_Method1 = function(password, Data, XorArrayIndex, XorArray, O) {\r\n\t/* If XorArray is set, use it; if O is not set, make changes in-place */\r\n\tif(!O) O = Data;\r\n\tif(!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\r\n\tvar Index, Value;\r\n\tfor(Index = 0; Index != Data.length; ++Index) {\r\n\t\tValue = Data[Index];\r\n\t\tValue ^= XorArray[XorArrayIndex];\r\n\t\tValue = ((Value>>5) | (Value<<3)) & 0xFF;\r\n\t\tO[Index] = Value;\r\n\t\t++XorArrayIndex;\r\n\t}\r\n\treturn [O, XorArrayIndex, XorArray];\r\n};\r\n\r\nvar crypto_MakeXorDecryptor = function(password) {\r\n\tvar XorArrayIndex = 0, XorArray = crypto_CreateXorArray_Method1(password);\r\n\treturn function(Data) {\r\n\t\tvar O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\r\n\t\tXorArrayIndex = O[1];\r\n\t\treturn O[0];\r\n\t};\r\n};\r\n\r\n/* 2.5.343 */\r\nfunction parse_XORObfuscation(blob, length, opts, out) {\r\n\tvar o = ({ key: parseuint16(blob), verificationBytes: parseuint16(blob) });\r\n\tif(opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\r\n\tout.valid = o.verificationBytes === o.verifier;\r\n\tif(out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\r\n\treturn o;\r\n}\r\n\r\n/* 2.4.117 */\r\nfunction parse_FilePassHeader(blob, length, oo) {\r\n\tvar o = oo || {}; o.Info = blob.read_shift(2); blob.l -= 2;\r\n\tif(o.Info === 1) o.Data = parse_RC4Header(blob, length);\r\n\telse o.Data = parse_RC4CryptoHeader(blob, length);\r\n\treturn o;\r\n}\r\nfunction parse_FilePass(blob, length, opts) {\r\n\tvar o = ({ Type: opts.biff >= 8 ? blob.read_shift(2) : 0 }); /* wEncryptionType */\r\n\tif(o.Type) parse_FilePassHeader(blob, length-2, o);\r\n\telse parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\r\n\treturn o;\r\n}\r\n\r\n\r\nvar RTF = (function() {\r\n\tfunction rtf_to_sheet(d, opts) {\r\n\t\tswitch(opts.type) {\r\n\t\t\tcase 'base64': return rtf_to_sheet_str(Base64.decode(d), opts);\r\n\t\t\tcase 'binary': return rtf_to_sheet_str(d, opts);\r\n\t\t\tcase 'buffer': return rtf_to_sheet_str(d.toString('binary'), opts);\r\n\t\t\tcase 'array':  return rtf_to_sheet_str(cc2str(d), opts);\r\n\t\t}\r\n\t\tthrow new Error(\"Unrecognized type \" + opts.type);\r\n\t}\r\n\r\n\tfunction rtf_to_sheet_str(str, opts) {\r\n\t\tvar o = opts || {};\r\n\t\tvar ws = o.dense ? ([]) : ({});\r\n\t\tvar range = ({s: {c:0, r:0}, e: {c:0, r:0}});\r\n\r\n\t\t// TODO: parse\r\n\t\tif(!str.match(/\\\\trowd/)) throw new Error(\"RTF missing table\");\r\n\r\n\t\tws['!ref'] = encode_range(range);\r\n\t\treturn ws;\r\n\t}\r\n\r\n\tfunction rtf_to_workbook(d, opts) { return sheet_to_workbook(rtf_to_sheet(d, opts), opts); }\r\n\r\n\t/* TODO: this is a stub */\r\n\tfunction sheet_to_rtf(ws) {\r\n\t\tvar o = [\"{\\\\rtf1\\\\ansi\"];\r\n\t\tvar r = safe_decode_range(ws['!ref']), cell;\r\n\t\tvar dense = Array.isArray(ws);\r\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) {\r\n\t\t\to.push(\"\\\\trowd\\\\trautofit1\");\r\n\t\t\tfor(var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C+1));\r\n\t\t\to.push(\"\\\\pard\\\\intbl\");\r\n\t\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\r\n\t\t\t\tvar coord = encode_cell({r:R,c:C});\r\n\t\t\t\tcell = dense ? (ws[R]||[])[C]: ws[coord];\r\n\t\t\t\tif(!cell || cell.v == null && (!cell.f || cell.F)) continue;\r\n\t\t\t\to.push(\" \" + (cell.w || (format_cell(cell), cell.w)));\r\n\t\t\t\to.push(\"\\\\cell\");\r\n\t\t\t}\r\n\t\t\to.push(\"\\\\pard\\\\intbl\\\\row\");\r\n\t\t}\r\n\t\treturn o.join(\"\") + \"}\";\r\n\t}\r\n\r\n\treturn {\r\n\t\tto_workbook: rtf_to_workbook,\r\n\t\tto_sheet: rtf_to_sheet,\r\n\t\tfrom_sheet: sheet_to_rtf\r\n\t};\r\n})();\r\nfunction hex2RGB(h) {\r\n\tvar o = h.slice(h[0]===\"#\"?1:0).slice(0,6);\r\n\treturn [parseInt(o.slice(0,2),16),parseInt(o.slice(2,4),16),parseInt(o.slice(4,6),16)];\r\n}\r\nfunction rgb2Hex(rgb) {\r\n\tfor(var i=0,o=1; i!=3; ++i) o = o*256 + (rgb[i]>255?255:rgb[i]<0?0:rgb[i]);\r\n\treturn o.toString(16).toUpperCase().slice(1);\r\n}\r\n\r\nfunction rgb2HSL(rgb) {\r\n\tvar R = rgb[0]/255, G = rgb[1]/255, B=rgb[2]/255;\r\n\tvar M = Math.max(R, G, B), m = Math.min(R, G, B), C = M - m;\r\n\tif(C === 0) return [0, 0, R];\r\n\r\n\tvar H6 = 0, S = 0, L2 = (M + m);\r\n\tS = C / (L2 > 1 ? 2 - L2 : L2);\r\n\tswitch(M){\r\n\t\tcase R: H6 = ((G - B) / C + 6)%6; break;\r\n\t\tcase G: H6 = ((B - R) / C + 2); break;\r\n\t\tcase B: H6 = ((R - G) / C + 4); break;\r\n\t}\r\n\treturn [H6 / 6, S, L2 / 2];\r\n}\r\n\r\nfunction hsl2RGB(hsl){\r\n\tvar H = hsl[0], S = hsl[1], L = hsl[2];\r\n\tvar C = S * 2 * (L < 0.5 ? L : 1 - L), m = L - C/2;\r\n\tvar rgb = [m,m,m], h6 = 6*H;\r\n\r\n\tvar X;\r\n\tif(S !== 0) switch(h6|0) {\r\n\t\tcase 0: case 6: X = C * h6; rgb[0] += C; rgb[1] += X; break;\r\n\t\tcase 1: X = C * (2 - h6);   rgb[0] += X; rgb[1] += C; break;\r\n\t\tcase 2: X = C * (h6 - 2);   rgb[1] += C; rgb[2] += X; break;\r\n\t\tcase 3: X = C * (4 - h6);   rgb[1] += X; rgb[2] += C; break;\r\n\t\tcase 4: X = C * (h6 - 4);   rgb[2] += C; rgb[0] += X; break;\r\n\t\tcase 5: X = C * (6 - h6);   rgb[2] += X; rgb[0] += C; break;\r\n\t}\r\n\tfor(var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i]*255);\r\n\treturn rgb;\r\n}\r\n\r\n/* 18.8.3 bgColor tint algorithm */\r\nfunction rgb_tint(hex, tint) {\r\n\tif(tint === 0) return hex;\r\n\tvar hsl = rgb2HSL(hex2RGB(hex));\r\n\tif (tint < 0) hsl[2] = hsl[2] * (1 + tint);\r\n\telse hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\r\n\treturn rgb2Hex(hsl2RGB(hsl));\r\n}\r\n\r\n/* 18.3.1.13 width calculations */\r\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\r\nvar DEF_MDW = 6, MAX_MDW = 15, MIN_MDW = 1, MDW = DEF_MDW;\r\nfunction width2px(width) { return Math.floor(( width + (Math.round(128/MDW))/256 )* MDW ); }\r\nfunction px2char(px) { return (Math.floor((px - 5)/MDW * 100 + 0.5))/100; }\r\nfunction char2width(chr) { return (Math.round((chr * MDW + 5)/MDW*256))/256; }\r\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\r\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\r\nfunction cycle_width(collw) { return char2width(px2char(width2px(collw))); }\r\n/* XLSX/XLSB/XLS specify width in units of MDW */\r\nfunction find_mdw_colw(collw) {\r\n\tvar delta = Math.abs(collw - cycle_width(collw)), _MDW = MDW;\r\n\tif(delta > 0.005) for(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) if(Math.abs(collw - cycle_width(collw)) <= delta) { delta = Math.abs(collw - cycle_width(collw)); _MDW = MDW; }\r\n\tMDW = _MDW;\r\n}\r\n/* XLML specifies width in terms of pixels */\r\n/*function find_mdw_wpx(wpx) {\r\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\r\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\r\n\t\tguess = char2width_(px2char_(wpx))*256;\r\n\t\tguess = (guess) % 1;\r\n\t\tif(guess > 0.5) guess--;\r\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\r\n\t}\r\n\tMDW = _MDW;\r\n}*/\r\n\r\nfunction process_col(coll) {\r\n\tif(coll.width) {\r\n\t\tcoll.wpx = width2px(coll.width);\r\n\t\tcoll.wch = px2char(coll.wpx);\r\n\t\tcoll.MDW = MDW;\r\n\t} else if(coll.wpx) {\r\n\t\tcoll.wch = px2char(coll.wpx);\r\n\t\tcoll.width = char2width(coll.wch);\r\n\t\tcoll.MDW = MDW;\r\n\t} else if(typeof coll.wch == 'number') {\r\n\t\tcoll.width = char2width(coll.wch);\r\n\t\tcoll.wpx = width2px(coll.width);\r\n\t\tcoll.MDW = MDW;\r\n\t}\r\n\tif(coll.customWidth) delete coll.customWidth;\r\n}\r\n\r\nvar DEF_PPI = 96, PPI = DEF_PPI;\r\nfunction px2pt(px) { return px * 96 / PPI; }\r\nfunction pt2px(pt) { return pt * PPI / 96; }\r\n\r\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\r\nvar XLMLPatternTypeMap = {\r\n\t\"None\": \"none\",\r\n\t\"Solid\": \"solid\",\r\n\t\"Gray50\": \"mediumGray\",\r\n\t\"Gray75\": \"darkGray\",\r\n\t\"Gray25\": \"lightGray\",\r\n\t\"HorzStripe\": \"darkHorizontal\",\r\n\t\"VertStripe\": \"darkVertical\",\r\n\t\"ReverseDiagStripe\": \"darkDown\",\r\n\t\"DiagStripe\": \"darkUp\",\r\n\t\"DiagCross\": \"darkGrid\",\r\n\t\"ThickDiagCross\": \"darkTrellis\",\r\n\t\"ThinHorzStripe\": \"lightHorizontal\",\r\n\t\"ThinVertStripe\": \"lightVertical\",\r\n\t\"ThinReverseDiagStripe\": \"lightDown\",\r\n\t\"ThinHorzCross\": \"lightGrid\"\r\n};\r\n\r\n/* 18.8.5 borders CT_Borders */\r\nfunction parse_borders(t, styles, themes, opts) {\r\n\tstyles.Borders = [];\r\n\tvar border = {}/*, sub_border = {}*/;\r\n\tt[0].match(tagregex).forEach(function(x) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\tswitch (y[0]) {\r\n\t\t\tcase '<borders': case '<borders>': case '</borders>': break;\r\n\r\n\t\t\t/* 18.8.4 border CT_Border */\r\n\t\t\tcase '<border': case '<border>': case '<border/>':\r\n\t\t\t\tborder = {};\r\n\t\t\t\tif (y.diagonalUp) { border.diagonalUp = y.diagonalUp; }\r\n\t\t\t\tif (y.diagonalDown) { border.diagonalDown = y.diagonalDown; }\r\n\t\t\t\tstyles.Borders.push(border);\r\n\t\t\t\tbreak;\r\n\t\t\tcase '</border>': break;\r\n\r\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\r\n\t\t\tcase '<left/>': break;\r\n\t\t\tcase '<left': case '<left>': break;\r\n\t\t\tcase '</left>': break;\r\n\r\n\t\t\t/* note: not in spec, appears to be CT_BorderPr */\r\n\t\t\tcase '<right/>': break;\r\n\t\t\tcase '<right': case '<right>': break;\r\n\t\t\tcase '</right>': break;\r\n\r\n\t\t\t/* 18.8.43 top CT_BorderPr */\r\n\t\t\tcase '<top/>': break;\r\n\t\t\tcase '<top': case '<top>': break;\r\n\t\t\tcase '</top>': break;\r\n\r\n\t\t\t/* 18.8.6 bottom CT_BorderPr */\r\n\t\t\tcase '<bottom/>': break;\r\n\t\t\tcase '<bottom': case '<bottom>': break;\r\n\t\t\tcase '</bottom>': break;\r\n\r\n\t\t\t/* 18.8.13 diagonal CT_BorderPr */\r\n\t\t\tcase '<diagonal': case '<diagonal>': case '<diagonal/>': break;\r\n\t\t\tcase '</diagonal>': break;\r\n\r\n\t\t\t/* 18.8.25 horizontal CT_BorderPr */\r\n\t\t\tcase '<horizontal': case '<horizontal>': case '<horizontal/>': break;\r\n\t\t\tcase '</horizontal>': break;\r\n\r\n\t\t\t/* 18.8.44 vertical CT_BorderPr */\r\n\t\t\tcase '<vertical': case '<vertical>': case '<vertical/>': break;\r\n\t\t\tcase '</vertical>': break;\r\n\r\n\t\t\t/* 18.8.37 start CT_BorderPr */\r\n\t\t\tcase '<start': case '<start>': case '<start/>': break;\r\n\t\t\tcase '</start>': break;\r\n\r\n\t\t\t/* 18.8.16 end CT_BorderPr */\r\n\t\t\tcase '<end': case '<end>': case '<end/>': break;\r\n\t\t\tcase '</end>': break;\r\n\r\n\t\t\t/* 18.8.? color CT_Color */\r\n\t\t\tcase '<color': case '<color>': break;\r\n\t\t\tcase '<color/>': case '</color>': break;\r\n\r\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in borders');\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/* 18.8.21 fills CT_Fills */\r\nfunction parse_fills(t, styles, themes, opts) {\r\n\tstyles.Fills = [];\r\n\tvar fill = {};\r\n\tt[0].match(tagregex).forEach(function(x) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\tswitch(y[0]) {\r\n\t\t\tcase '<fills': case '<fills>': case '</fills>': break;\r\n\r\n\t\t\t/* 18.8.20 fill CT_Fill */\r\n\t\t\tcase '<fill>': case '<fill': case '<fill/>':\r\n\t\t\t\tfill = {}; styles.Fills.push(fill); break;\r\n\t\t\tcase '</fill>': break;\r\n\r\n\t\t\t/* 18.8.24 gradientFill CT_GradientFill */\r\n\t\t\tcase '<gradientFill>': break;\r\n\t\t\tcase '<gradientFill':\r\n\t\t\tcase '</gradientFill>': styles.Fills.push(fill); fill = {}; break;\r\n\r\n\t\t\t/* 18.8.32 patternFill CT_PatternFill */\r\n\t\t\tcase '<patternFill': case '<patternFill>':\r\n\t\t\t\tif(y.patternType) fill.patternType = y.patternType;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '<patternFill/>': case '</patternFill>': break;\r\n\r\n\t\t\t/* 18.8.3 bgColor CT_Color */\r\n\t\t\tcase '<bgColor':\r\n\t\t\t\tif(!fill.bgColor) fill.bgColor = {};\r\n\t\t\t\tif(y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\r\n\t\t\t\tif(y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\r\n\t\t\t\tif(y.tint) fill.bgColor.tint = parseFloat(y.tint);\r\n\t\t\t\t/* Excel uses ARGB strings */\r\n\t\t\t\tif(y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\r\n\t\t\t\tbreak;\r\n\t\t\tcase '<bgColor/>': case '</bgColor>': break;\r\n\r\n\t\t\t/* 18.8.19 fgColor CT_Color */\r\n\t\t\tcase '<fgColor':\r\n\t\t\t\tif(!fill.fgColor) fill.fgColor = {};\r\n\t\t\t\tif(y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\r\n\t\t\t\tif(y.tint) fill.fgColor.tint = parseFloat(y.tint);\r\n\t\t\t\t/* Excel uses ARGB strings */\r\n\t\t\t\tif(y.rgb) fill.fgColor.rgb = y.rgb.slice(-6);\r\n\t\t\t\tbreak;\r\n\t\t\tcase '<fgColor/>': case '</fgColor>': break;\r\n\r\n\t\t\t/* 18.8.38 stop CT_GradientStop */\r\n\t\t\tcase '<stop': case '<stop/>': break;\r\n\t\t\tcase '</stop>': break;\r\n\r\n\t\t\t/* 18.8.? color CT_Color */\r\n\t\t\tcase '<color': case '<color/>': break;\r\n\t\t\tcase '</color>': break;\r\n\r\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in fills');\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/* 18.8.23 fonts CT_Fonts */\r\nfunction parse_fonts(t, styles, themes, opts) {\r\n\tstyles.Fonts = [];\r\n\tvar font = {};\r\n\tt[0].match(tagregex).forEach(function(x) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\tswitch (y[0]) {\r\n\t\t\tcase '<fonts': case '<fonts>': case '</fonts>': break;\r\n\r\n\t\t\t/* 18.8.22 font CT_Font */\r\n\t\t\tcase '<font': case '<font>': break;\r\n\t\t\tcase '</font>': case '<font/>':\r\n\t\t\t\tstyles.Fonts.push(font);\r\n\t\t\t\tfont = {};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* 18.8.29 name CT_FontName */\r\n\t\t\tcase '<name': if(y.val) font.name = y.val; break;\r\n\t\t\tcase '<name/>': case '</name>': break;\r\n\r\n\t\t\t/* 18.8.2  b CT_BooleanProperty */\r\n\t\t\tcase '<b': font.bold = y.val ? parsexmlbool(y.val) : 1; break;\r\n\t\t\tcase '<b/>': font.bold = 1; break;\r\n\r\n\t\t\t/* 18.8.26 i CT_BooleanProperty */\r\n\t\t\tcase '<i': font.italic = y.val ? parsexmlbool(y.val) : 1; break;\r\n\t\t\tcase '<i/>': font.italic = 1; break;\r\n\r\n\t\t\t/* 18.4.13 u CT_UnderlineProperty */\r\n\t\t\tcase '<u':\r\n\t\t\t\tswitch(y.val) {\r\n\t\t\t\t\tcase \"none\": font.underline = 0x00; break;\r\n\t\t\t\t\tcase \"single\": font.underline = 0x01; break;\r\n\t\t\t\t\tcase \"double\": font.underline = 0x02; break;\r\n\t\t\t\t\tcase \"singleAccounting\": font.underline = 0x21; break;\r\n\t\t\t\t\tcase \"doubleAccounting\": font.underline = 0x22; break;\r\n\t\t\t\t} break;\r\n\t\t\tcase '<u/>': font.underline = 1; break;\r\n\r\n\t\t\t/* 18.4.10 strike CT_BooleanProperty */\r\n\t\t\tcase '<strike': font.strike = y.val ? parsexmlbool(y.val) : 1; break;\r\n\t\t\tcase '<strike/>': font.strike = 1; break;\r\n\r\n\t\t\t/* 18.4.2  outline CT_BooleanProperty */\r\n\t\t\tcase '<outline': font.outline = y.val ? parsexmlbool(y.val) : 1; break;\r\n\t\t\tcase '<outline/>': font.outline = 1; break;\r\n\r\n\t\t\t/* 18.8.36 shadow CT_BooleanProperty */\r\n\t\t\tcase '<shadow': font.shadow = y.val ? parsexmlbool(y.val) : 1; break;\r\n\t\t\tcase '<shadow/>': font.shadow = 1; break;\r\n\r\n\t\t\t/* 18.8.12 condense CT_BooleanProperty */\r\n\t\t\tcase '<condense': font.condense = y.val ? parsexmlbool(y.val) : 1; break;\r\n\t\t\tcase '<condense/>': font.condense = 1; break;\r\n\r\n\t\t\t/* 18.8.17 extend CT_BooleanProperty */\r\n\t\t\tcase '<extend': font.extend = y.val ? parsexmlbool(y.val) : 1; break;\r\n\t\t\tcase '<extend/>': font.extend = 1; break;\r\n\r\n\t\t\t/* 18.4.11 sz CT_FontSize */\r\n\t\t\tcase '<sz': if(y.val) font.sz = +y.val; break;\r\n\t\t\tcase '<sz/>': case '</sz>': break;\r\n\r\n\t\t\t/* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\r\n\t\t\tcase '<vertAlign': if(y.val) font.vertAlign = y.val; break;\r\n\t\t\tcase '<vertAlign/>': case '</vertAlign>': break;\r\n\r\n\t\t\t/* 18.8.18 family CT_FontFamily */\r\n\t\t\tcase '<family': if(y.val) font.family = parseInt(y.val,10); break;\r\n\t\t\tcase '<family/>': case '</family>': break;\r\n\r\n\t\t\t/* 18.8.35 scheme CT_FontScheme */\r\n\t\t\tcase '<scheme': if(y.val) font.scheme = y.val; break;\r\n\t\t\tcase '<scheme/>': case '</scheme>': break;\r\n\r\n\t\t\t/* 18.4.1 charset CT_IntProperty */\r\n\t\t\tcase '<charset':\r\n\t\t\t\tif(y.val == '1') break;\r\n\t\t\t\ty.codepage = CS2CP[parseInt(y.val, 10)];\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* 18.?.? color CT_Color */\r\n\t\t\tcase '<color':\r\n\t\t\t\tif(!font.color) font.color = {};\r\n\t\t\t\tif(y.auto) font.color.auto = parsexmlbool(y.auto);\r\n\r\n\t\t\t\tif(y.rgb) font.color.rgb = y.rgb.slice(-6);\r\n\t\t\t\telse if(y.indexed) {\r\n\t\t\t\t\tfont.color.index = parseInt(y.indexed, 10);\r\n\t\t\t\t\tvar icv = XLSIcv[font.color.index];\r\n\t\t\t\t\tif(font.color.index == 81) icv = XLSIcv[1];\r\n\t\t\t\t\tif(!icv) throw new Error(x);\r\n\t\t\t\t\tfont.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\r\n\t\t\t\t} else if(y.theme) {\r\n\t\t\t\t\tfont.color.theme = parseInt(y.theme, 10);\r\n\t\t\t\t\tif(y.tint) font.color.tint = parseFloat(y.tint);\r\n\t\t\t\t\tif(y.theme && themes.themeElements && themes.themeElements.clrScheme) {\r\n\t\t\t\t\t\tfont.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase '<color/>': case '</color>': break;\r\n\r\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in fonts');\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/* 18.8.31 numFmts CT_NumFmts */\r\nfunction parse_numFmts(t, styles, opts) {\r\n\tstyles.NumberFmt = [];\r\n\tvar k/*Array<number>*/ = (keys(SSF._table));\r\n\tfor(var i=0; i < k.length; ++i) styles.NumberFmt[k[i]] = SSF._table[k[i]];\r\n\tvar m = t[0].match(tagregex);\r\n\tif(!m) return;\r\n\tfor(i=0; i < m.length; ++i) {\r\n\t\tvar y = parsexmltag(m[i]);\r\n\t\tswitch(y[0]) {\r\n\t\t\tcase '<numFmts': case '</numFmts>': case '<numFmts/>': case '<numFmts>': break;\r\n\t\t\tcase '<numFmt': {\r\n\t\t\t\tvar f=unescapexml(utf8read(y.formatCode)), j=parseInt(y.numFmtId,10);\r\n\t\t\t\tstyles.NumberFmt[j] = f;\r\n\t\t\t\tif(j>0) {\r\n\t\t\t\t\tif(j > 0x188) {\r\n\t\t\t\t\t\tfor(j = 0x188; j > 0x3c; --j) if(styles.NumberFmt[j] == null) break;\r\n\t\t\t\t\t\tstyles.NumberFmt[j] = f;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tSSF.load(f,j);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase '</numFmt>': break;\r\n\t\t\tdefault: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction write_numFmts(NF) {\r\n\tvar o = [\"<numFmts>\"];\r\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\r\n\t\tfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) o[o.length] = (writextag('numFmt',null,{numFmtId:i,formatCode:escapexml(NF[i])}));\r\n\t});\r\n\tif(o.length === 1) return \"\";\r\n\to[o.length] = (\"</numFmts>\");\r\n\to[0] = writextag('numFmts', null, { count:o.length-2 }).replace(\"/>\", \">\");\r\n\treturn o.join(\"\");\r\n}\r\n\r\n/* 18.8.10 cellXfs CT_CellXfs */\r\nvar cellXF_uint = [ \"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\" ];\r\nvar cellXF_bool = [ \"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\" ];\r\nfunction parse_cellXfs(t, styles, opts) {\r\n\tstyles.CellXf = [];\r\n\tvar xf;\r\n\tt[0].match(tagregex).forEach(function(x) {\r\n\t\tvar y = parsexmltag(x), i = 0;\r\n\t\tswitch(y[0]) {\r\n\t\t\tcase '<cellXfs': case '<cellXfs>': case '<cellXfs/>': case '</cellXfs>': break;\r\n\r\n\t\t\t/* 18.8.45 xf CT_Xf */\r\n\t\t\tcase '<xf': case '<xf/>':\r\n\t\t\t\txf = y;\r\n\t\t\t\tdelete xf[0];\r\n\t\t\t\tfor(i = 0; i < cellXF_uint.length; ++i) if(xf[cellXF_uint[i]])\r\n\t\t\t\t\txf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\r\n\t\t\t\tfor(i = 0; i < cellXF_bool.length; ++i) if(xf[cellXF_bool[i]])\r\n\t\t\t\t\txf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\r\n\t\t\t\tif(xf.numFmtId > 0x188) {\r\n\t\t\t\t\tfor(i = 0x188; i > 0x3c; --i) if(styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) { xf.numFmtId = i; break; }\r\n\t\t\t\t}\r\n\t\t\t\tstyles.CellXf.push(xf); break;\r\n\t\t\tcase '</xf>': break;\r\n\r\n\t\t\t/* 18.8.1 alignment CT_CellAlignment */\r\n\t\t\tcase '<alignment': case '<alignment/>':\r\n\t\t\t\tvar alignment = {};\r\n\t\t\t\tif(y.vertical) alignment.vertical = y.vertical;\r\n\t\t\t\tif(y.horizontal) alignment.horizontal = y.horizontal;\r\n\t\t\t\tif(y.textRotation != null) alignment.textRotation = y.textRotation;\r\n\t\t\t\tif(y.indent) alignment.indent = y.indent;\r\n\t\t\t\tif(y.wrapText) alignment.wrapText = y.wrapText;\r\n\t\t\t\txf.alignment = alignment;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '</alignment>': break;\r\n\r\n\t\t\t/* 18.8.33 protection CT_CellProtection */\r\n\t\t\tcase '<protection': case '</protection>': case '<protection/>': break;\r\n\r\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\r\n\t\t\tcase '<extLst': case '</extLst>': break;\r\n\t\t\tcase '<ext': break;\r\n\t\t\tdefault: if(opts.WTF) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction write_cellXfs(cellXfs) {\r\n\tvar o = [];\r\n\to[o.length] = (writextag('cellXfs',null));\r\n\tcellXfs.forEach(function(c) { o[o.length] = (writextag('xf', null, c)); });\r\n\to[o.length] = (\"</cellXfs>\");\r\n\tif(o.length === 2) return \"\";\r\n\to[0] = writextag('cellXfs',null, {count:o.length-2}).replace(\"/>\",\">\");\r\n\treturn o.join(\"\");\r\n}\r\n\r\n/* 18.8 Styles CT_Stylesheet*/\r\nvar parse_sty_xml= (function make_pstyx() {\r\nvar numFmtRegex = /<numFmts([^>]*)>[\\S\\s]*?<\\/numFmts>/;\r\nvar cellXfRegex = /<cellXfs([^>]*)>[\\S\\s]*?<\\/cellXfs>/;\r\nvar fillsRegex = /<fills([^>]*)>[\\S\\s]*?<\\/fills>/;\r\nvar fontsRegex = /<fonts([^>]*)>[\\S\\s]*?<\\/fonts>/;\r\nvar bordersRegex = /<borders([^>]*)>[\\S\\s]*?<\\/borders>/;\r\n\r\nreturn function parse_sty_xml(data, themes, opts) {\r\n\tvar styles = {};\r\n\tif(!data) return styles;\r\n\tdata = data.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\r\n\t/* 18.8.39 styleSheet CT_Stylesheet */\r\n\tvar t;\r\n\r\n\t/* 18.8.31 numFmts CT_NumFmts ? */\r\n\tif((t=data.match(numFmtRegex))) parse_numFmts(t, styles, opts);\r\n\r\n\t/* 18.8.23 fonts CT_Fonts ? */\r\n\tif((t=data.match(fontsRegex))) parse_fonts(t, styles, themes, opts);\r\n\r\n\t/* 18.8.21 fills CT_Fills ? */\r\n\tif((t=data.match(fillsRegex))) parse_fills(t, styles, themes, opts);\r\n\r\n\t/* 18.8.5  borders CT_Borders ? */\r\n\tif((t=data.match(bordersRegex))) parse_borders(t, styles, themes, opts);\r\n\r\n\t/* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\r\n\r\n\t/* 18.8.10 cellXfs CT_CellXfs ? */\r\n\tif((t=data.match(cellXfRegex))) parse_cellXfs(t, styles, opts);\r\n\r\n\t/* 18.8.8  cellStyles CT_CellStyles ? */\r\n\t/* 18.8.15 dxfs CT_Dxfs ? */\r\n\t/* 18.8.42 tableStyles CT_TableStyles ? */\r\n\t/* 18.8.11 colors CT_Colors ? */\r\n\t/* 18.2.10 extLst CT_ExtensionList ? */\r\n\r\n\treturn styles;\r\n};\r\n})();\r\n\r\nvar STYLES_XML_ROOT = writextag('styleSheet', null, {\r\n\t'xmlns': XMLNS.main[0],\r\n\t'xmlns:vt': XMLNS.vt\r\n});\r\n\r\nRELS.STY = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\";\r\n\r\nfunction write_sty_xml(wb, opts) {\r\n\tvar o = [XML_HEADER, STYLES_XML_ROOT], w;\r\n\tif(wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\r\n\to[o.length] = ('<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>');\r\n\to[o.length] = ('<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>');\r\n\to[o.length] = ('<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>');\r\n\to[o.length] = ('<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>');\r\n\tif((w = write_cellXfs(opts.cellXfs))) o[o.length] = (w);\r\n\to[o.length] = ('<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>');\r\n\to[o.length] = ('<dxfs count=\"0\"/>');\r\n\to[o.length] = ('<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>');\r\n\r\n\tif(o.length>2){ o[o.length] = ('</styleSheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n/* [MS-XLSB] 2.4.657 BrtFmt */\r\nfunction parse_BrtFmt(data, length) {\r\n\tvar numFmtId = data.read_shift(2);\r\n\tvar stFmtCode = parse_XLWideString(data,length-2);\r\n\treturn [numFmtId, stFmtCode];\r\n}\r\nfunction write_BrtFmt(i, f, o) {\r\n\tif(!o) o = new_buf(6 + 4 * f.length);\r\n\to.write_shift(2, i);\r\n\twrite_XLWideString(f, o);\r\n\tvar out = (o.length > o.l) ? o.slice(0, o.l) : o;\r\n\tif(o.l == null) o.l = o.length;\r\n\treturn out;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\r\nfunction parse_BrtFont(data, length, opts) {\r\n\tvar out = ({});\r\n\r\n\tout.sz = data.read_shift(2) / 20;\r\n\r\n\tvar grbit = parse_FontFlags(data, 2, opts);\r\n\tif(grbit.fCondense) out.condense = 1;\r\n\tif(grbit.fExtend) out.extend = 1;\r\n\tif(grbit.fShadow) out.shadow = 1;\r\n\tif(grbit.fOutline) out.outline = 1;\r\n\tif(grbit.fStrikeout) out.strike = 1;\r\n\tif(grbit.fItalic) out.italic = 1;\r\n\r\n\tvar bls = data.read_shift(2);\r\n\tif(bls === 0x02BC) out.bold = 1;\r\n\r\n\tswitch(data.read_shift(2)) {\r\n\t\t/* case 0: out.vertAlign = \"baseline\"; break; */\r\n\t\tcase 1: out.vertAlign = \"superscript\"; break;\r\n\t\tcase 2: out.vertAlign = \"subscript\"; break;\r\n\t}\r\n\r\n\tvar underline = data.read_shift(1);\r\n\tif(underline != 0) out.underline = underline;\r\n\r\n\tvar family = data.read_shift(1);\r\n\tif(family > 0) out.family = family;\r\n\r\n\tvar bCharSet = data.read_shift(1);\r\n\tif(bCharSet > 0) out.charset = bCharSet;\r\n\r\n\tdata.l++;\r\n\tout.color = parse_BrtColor(data, 8);\r\n\r\n\tswitch(data.read_shift(1)) {\r\n\t\t/* case 0: out.scheme = \"none\": break; */\r\n\t\tcase 1: out.scheme = \"major\"; break;\r\n\t\tcase 2: out.scheme = \"minor\"; break;\r\n\t}\r\n\r\n\tout.name = parse_XLWideString(data, length - 21);\r\n\r\n\treturn out;\r\n}\r\nfunction write_BrtFont(font, o) {\r\n\tif(!o) o = new_buf(25+4*32);\r\n\to.write_shift(2, font.sz * 20);\r\n\twrite_FontFlags(font, o);\r\n\to.write_shift(2, font.bold ? 0x02BC : 0x0190);\r\n\tvar sss = 0;\r\n\tif(font.vertAlign == \"superscript\") sss = 1;\r\n\telse if(font.vertAlign == \"subscript\") sss = 2;\r\n\to.write_shift(2, sss);\r\n\to.write_shift(1, font.underline || 0);\r\n\to.write_shift(1, font.family || 0);\r\n\to.write_shift(1, font.charset || 0);\r\n\to.write_shift(1, 0);\r\n\twrite_BrtColor(font.color, o);\r\n\tvar scheme = 0;\r\n\tif(font.scheme == \"major\") scheme = 1;\r\n\tif(font.scheme == \"minor\") scheme = 2;\r\n\to.write_shift(1, scheme);\r\n\twrite_XLWideString(font.name, o);\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.650 BrtFill */\r\nvar XLSBFillPTNames = [\r\n\t\"none\",\r\n\t\"solid\",\r\n\t\"mediumGray\",\r\n\t\"darkGray\",\r\n\t\"lightGray\",\r\n\t\"darkHorizontal\",\r\n\t\"darkVertical\",\r\n\t\"darkDown\",\r\n\t\"darkUp\",\r\n\t\"darkGrid\",\r\n\t\"darkTrellis\",\r\n\t\"lightHorizontal\",\r\n\t\"lightVertical\",\r\n\t\"lightDown\",\r\n\t\"lightUp\",\r\n\t\"lightGrid\",\r\n\t\"lightTrellis\",\r\n\t\"gray125\",\r\n\t\"gray0625\"\r\n];\r\nvar rev_XLSBFillPTNames = (evert(XLSBFillPTNames));\r\n/* TODO: gradient fill representation */\r\nvar parse_BrtFill = parsenoop;\r\nfunction write_BrtFill(fill, o) {\r\n\tif(!o) o = new_buf(4*3 + 8*7 + 16*1);\r\n\tvar fls = rev_XLSBFillPTNames[fill.patternType];\r\n\tif(fls == null) fls = 0x28;\r\n\to.write_shift(4, fls);\r\n\tvar j = 0;\r\n\tif(fls != 0x28) {\r\n\t\t/* TODO: custom FG Color */\r\n\t\twrite_BrtColor({auto:1}, o);\r\n\t\t/* TODO: custom BG Color */\r\n\t\twrite_BrtColor({auto:1}, o);\r\n\r\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0);\r\n\t} else {\r\n\t\tfor(; j < 4; ++j) o.write_shift(4, 0);\r\n\r\n\t\tfor(; j < 12; ++j) o.write_shift(4, 0); /* TODO */\r\n\t\t/* iGradientType */\r\n\t\t/* xnumDegree */\r\n\t\t/* xnumFillToLeft */\r\n\t\t/* xnumFillToRight */\r\n\t\t/* xnumFillToTop */\r\n\t\t/* xnumFillToBottom */\r\n\t\t/* cNumStop */\r\n\t\t/* xfillGradientStop */\r\n\t}\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.824 BrtXF */\r\nfunction parse_BrtXF(data, length) {\r\n\tvar tgt = data.l + length;\r\n\tvar ixfeParent = data.read_shift(2);\r\n\tvar ifmt = data.read_shift(2);\r\n\tdata.l = tgt;\r\n\treturn {ixfe:ixfeParent, numFmtId:ifmt };\r\n}\r\nfunction write_BrtXF(data, ixfeP, o) {\r\n\tif(!o) o = new_buf(16);\r\n\to.write_shift(2, ixfeP||0);\r\n\to.write_shift(2, data.numFmtId||0);\r\n\to.write_shift(2, 0); /* iFont */\r\n\to.write_shift(2, 0); /* iFill */\r\n\to.write_shift(2, 0); /* ixBorder */\r\n\to.write_shift(1, 0); /* trot */\r\n\to.write_shift(1, 0); /* indent */\r\n\to.write_shift(1, 0); /* flags */\r\n\to.write_shift(1, 0); /* flags */\r\n\to.write_shift(1, 0); /* xfGrbitAtr */\r\n\to.write_shift(1, 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.5.4 Blxf TODO */\r\nfunction write_Blxf(data, o) {\r\n\tif(!o) o = new_buf(10);\r\n\to.write_shift(1, 0); /* dg */\r\n\to.write_shift(1, 0);\r\n\to.write_shift(4, 0); /* color */\r\n\to.write_shift(4, 0); /* color */\r\n\treturn o;\r\n}\r\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\r\nvar parse_BrtBorder = parsenoop;\r\nfunction write_BrtBorder(border, o) {\r\n\tif(!o) o = new_buf(51);\r\n\to.write_shift(1, 0); /* diagonal */\r\n\twrite_Blxf(null, o); /* top */\r\n\twrite_Blxf(null, o); /* bottom */\r\n\twrite_Blxf(null, o); /* left */\r\n\twrite_Blxf(null, o); /* right */\r\n\twrite_Blxf(null, o); /* diag */\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\r\nfunction write_BrtStyle(style, o) {\r\n\tif(!o) o = new_buf(12+4*10);\r\n\to.write_shift(4, style.xfId);\r\n\to.write_shift(2, 1);\r\n\to.write_shift(1, +style.builtinId);\r\n\to.write_shift(1, 0); /* iLevel */\r\n\twrite_XLNullableWideString(style.name || \"\", o);\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\r\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\r\n\tvar o = new_buf(4+256*2*4);\r\n\to.write_shift(4, cnt);\r\n\twrite_XLNullableWideString(defTableStyle, o);\r\n\twrite_XLNullableWideString(defPivotStyle, o);\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.1.7.50 Styles */\r\nfunction parse_sty_bin(data, themes, opts) {\r\n\tvar styles = {};\r\n\tstyles.NumberFmt = ([]);\r\n\tfor(var y in SSF._table) styles.NumberFmt[y] = SSF._table[y];\r\n\r\n\tstyles.CellXf = [];\r\n\tstyles.Fonts = [];\r\n\tvar state = [];\r\n\tvar pass = false;\r\n\trecordhopper(data, function hopper_sty(val, R_n, RT) {\r\n\t\tswitch(RT) {\r\n\t\t\tcase 0x002C: /* 'BrtFmt' */\r\n\t\t\t\tstyles.NumberFmt[val[0]] = val[1]; SSF.load(val[1], val[0]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x002B: /* 'BrtFont' */\r\n\t\t\t\tstyles.Fonts.push(val);\r\n\t\t\t\tif(val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\r\n\t\t\t\t\tval.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0401: /* 'BrtKnownFonts' */ break;\r\n\t\t\tcase 0x002D: /* 'BrtFill' */ break;\r\n\t\t\tcase 0x002E: /* 'BrtBorder' */ break;\r\n\t\t\tcase 0x002F: /* 'BrtXF' */\r\n\t\t\t\tif(state[state.length - 1] == \"BrtBeginCellXFs\") {\r\n\t\t\t\t\tstyles.CellXf.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0030: /* 'BrtStyle' */\r\n\t\t\tcase 0x01FB: /* 'BrtDXF' */\r\n\t\t\tcase 0x023C: /* 'BrtMRUColor' */\r\n\t\t\tcase 0x01DB: /* 'BrtIndexedColor': */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0493: /* 'BrtDXF14' */\r\n\t\t\tcase 0x0836: /* 'BrtDXF15' */\r\n\t\t\tcase 0x046A: /* 'BrtSlicerStyleElement' */\r\n\t\t\tcase 0x0200: /* 'BrtTableStyleElement' */\r\n\t\t\tcase 0x082F: /* 'BrtTimelineStyleElement' */\r\n\t\t\tcase 0x0C00: /* 'BrtUid' */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\r\n\t\t\t\tpass = true; break;\r\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\r\n\t\t\t\tpass = false; break;\r\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\r\n\t\t\t\tstate.push(R_n); break;\r\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\r\n\t\t\t\tstate.pop(); break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0) state.push(R_n);\r\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0) state.pop();\r\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\r\n\t\t}\r\n\t});\r\n\treturn styles;\r\n}\r\n\r\nfunction write_FMTS_bin(ba, NF) {\r\n\tif(!NF) return;\r\n\tvar cnt = 0;\r\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\r\nfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) ++cnt;\r\n\t});\r\n\r\n\tif(cnt == 0) return;\r\n\twrite_record(ba, \"BrtBeginFmts\", write_UInt32LE(cnt));\r\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\r\nfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_record(ba, \"BrtFmt\", write_BrtFmt(i, NF[i]));\r\n\t});\r\n\twrite_record(ba, \"BrtEndFmts\");\r\n}\r\n\r\nfunction write_FONTS_bin(ba) {\r\n\tvar cnt = 1;\r\n\r\n\tif(cnt == 0) return;\r\n\twrite_record(ba, \"BrtBeginFonts\", write_UInt32LE(cnt));\r\n\twrite_record(ba, \"BrtFont\", write_BrtFont({\r\n\t\tsz:12,\r\n\t\tcolor: {theme:1},\r\n\t\tname: \"Calibri\",\r\n\t\tfamily: 2,\r\n\t\tscheme: \"minor\"\r\n\t}));\r\n\t/* 1*65491BrtFont [ACFONTS] */\r\n\twrite_record(ba, \"BrtEndFonts\");\r\n}\r\n\r\nfunction write_FILLS_bin(ba) {\r\n\tvar cnt = 2;\r\n\r\n\tif(cnt == 0) return;\r\n\twrite_record(ba, \"BrtBeginFills\", write_UInt32LE(cnt));\r\n\twrite_record(ba, \"BrtFill\", write_BrtFill({patternType:\"none\"}));\r\n\twrite_record(ba, \"BrtFill\", write_BrtFill({patternType:\"gray125\"}));\r\n\t/* 1*65431BrtFill */\r\n\twrite_record(ba, \"BrtEndFills\");\r\n}\r\n\r\nfunction write_BORDERS_bin(ba) {\r\n\tvar cnt = 1;\r\n\r\n\tif(cnt == 0) return;\r\n\twrite_record(ba, \"BrtBeginBorders\", write_UInt32LE(cnt));\r\n\twrite_record(ba, \"BrtBorder\", write_BrtBorder({}));\r\n\t/* 1*65430BrtBorder */\r\n\twrite_record(ba, \"BrtEndBorders\");\r\n}\r\n\r\nfunction write_CELLSTYLEXFS_bin(ba) {\r\n\tvar cnt = 1;\r\n\twrite_record(ba, \"BrtBeginCellStyleXFs\", write_UInt32LE(cnt));\r\n\twrite_record(ba, \"BrtXF\", write_BrtXF({\r\n\t\tnumFmtId:0,\r\n\t\tfontId:0,\r\n\t\tfillId:0,\r\n\t\tborderId:0\r\n\t}, 0xFFFF));\r\n\t/* 1*65430(BrtXF *FRT) */\r\n\twrite_record(ba, \"BrtEndCellStyleXFs\");\r\n}\r\n\r\nfunction write_CELLXFS_bin(ba, data) {\r\n\twrite_record(ba, \"BrtBeginCellXFs\", write_UInt32LE(data.length));\r\n\tdata.forEach(function(c) { write_record(ba, \"BrtXF\", write_BrtXF(c,0)); });\r\n\t/* 1*65430(BrtXF *FRT) */\r\n\twrite_record(ba, \"BrtEndCellXFs\");\r\n}\r\n\r\nfunction write_STYLES_bin(ba) {\r\n\tvar cnt = 1;\r\n\r\n\twrite_record(ba, \"BrtBeginStyles\", write_UInt32LE(cnt));\r\n\twrite_record(ba, \"BrtStyle\", write_BrtStyle({\r\n\t\txfId:0,\r\n\t\tbuiltinId:0,\r\n\t\tname:\"Normal\"\r\n\t}));\r\n\t/* 1*65430(BrtStyle *FRT) */\r\n\twrite_record(ba, \"BrtEndStyles\");\r\n}\r\n\r\nfunction write_DXFS_bin(ba) {\r\n\tvar cnt = 0;\r\n\r\n\twrite_record(ba, \"BrtBeginDXFs\", write_UInt32LE(cnt));\r\n\t/* *2147483647(BrtDXF *FRT) */\r\n\twrite_record(ba, \"BrtEndDXFs\");\r\n}\r\n\r\nfunction write_TABLESTYLES_bin(ba) {\r\n\tvar cnt = 0;\r\n\r\n\twrite_record(ba, \"BrtBeginTableStyles\", write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\r\n\t/* *TABLESTYLE */\r\n\twrite_record(ba, \"BrtEndTableStyles\");\r\n}\r\n\r\nfunction write_COLORPALETTE_bin() {\r\n\treturn;\r\n\t/* BrtBeginColorPalette [INDEXEDCOLORS] [MRUCOLORS] BrtEndColorPalette */\r\n}\r\n\r\n/* [MS-XLSB] 2.1.7.50 Styles */\r\nfunction write_sty_bin(wb, opts) {\r\n\tvar ba = buf_array();\r\n\twrite_record(ba, \"BrtBeginStyleSheet\");\r\n\twrite_FMTS_bin(ba, wb.SSF);\r\n\twrite_FONTS_bin(ba, wb);\r\n\twrite_FILLS_bin(ba, wb);\r\n\twrite_BORDERS_bin(ba, wb);\r\n\twrite_CELLSTYLEXFS_bin(ba, wb);\r\n\twrite_CELLXFS_bin(ba, opts.cellXfs);\r\n\twrite_STYLES_bin(ba, wb);\r\n\twrite_DXFS_bin(ba, wb);\r\n\twrite_TABLESTYLES_bin(ba, wb);\r\n\twrite_COLORPALETTE_bin(ba, wb);\r\n\t/* FRTSTYLESHEET*/\r\n\twrite_record(ba, \"BrtEndStyleSheet\");\r\n\treturn ba.end();\r\n}\r\nRELS.THEME = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\";\r\n\r\n/* 20.1.6.2 clrScheme CT_ColorScheme */\r\nfunction parse_clrScheme(t, themes, opts) {\r\n\tthemes.themeElements.clrScheme = [];\r\n\tvar color = {};\r\n\t(t[0].match(tagregex)||[]).forEach(function(x) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\tswitch(y[0]) {\r\n\t\t\t/* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\r\n\t\t\tcase '<a:clrScheme': case '</a:clrScheme>': break;\r\n\r\n\t\t\t/* 20.1.2.3.32 srgbClr CT_SRgbColor */\r\n\t\t\tcase '<a:srgbClr':\r\n\t\t\t\tcolor.rgb = y.val; break;\r\n\r\n\t\t\t/* 20.1.2.3.33 sysClr CT_SystemColor */\r\n\t\t\tcase '<a:sysClr':\r\n\t\t\t\tcolor.rgb = y.lastClr; break;\r\n\r\n\t\t\t/* 20.1.4.1.1 accent1 (Accent 1) */\r\n\t\t\t/* 20.1.4.1.2 accent2 (Accent 2) */\r\n\t\t\t/* 20.1.4.1.3 accent3 (Accent 3) */\r\n\t\t\t/* 20.1.4.1.4 accent4 (Accent 4) */\r\n\t\t\t/* 20.1.4.1.5 accent5 (Accent 5) */\r\n\t\t\t/* 20.1.4.1.6 accent6 (Accent 6) */\r\n\t\t\t/* 20.1.4.1.9 dk1 (Dark 1) */\r\n\t\t\t/* 20.1.4.1.10 dk2 (Dark 2) */\r\n\t\t\t/* 20.1.4.1.15 folHlink (Followed Hyperlink) */\r\n\t\t\t/* 20.1.4.1.19 hlink (Hyperlink) */\r\n\t\t\t/* 20.1.4.1.22 lt1 (Light 1) */\r\n\t\t\t/* 20.1.4.1.23 lt2 (Light 2) */\r\n\t\t\tcase '<a:dk1>': case '</a:dk1>':\r\n\t\t\tcase '<a:lt1>': case '</a:lt1>':\r\n\t\t\tcase '<a:dk2>': case '</a:dk2>':\r\n\t\t\tcase '<a:lt2>': case '</a:lt2>':\r\n\t\t\tcase '<a:accent1>': case '</a:accent1>':\r\n\t\t\tcase '<a:accent2>': case '</a:accent2>':\r\n\t\t\tcase '<a:accent3>': case '</a:accent3>':\r\n\t\t\tcase '<a:accent4>': case '</a:accent4>':\r\n\t\t\tcase '<a:accent5>': case '</a:accent5>':\r\n\t\t\tcase '<a:accent6>': case '</a:accent6>':\r\n\t\t\tcase '<a:hlink>': case '</a:hlink>':\r\n\t\t\tcase '<a:folHlink>': case '</a:folHlink>':\r\n\t\t\t\tif (y[0].charAt(1) === '/') {\r\n\t\t\t\t\tthemes.themeElements.clrScheme.push(color);\r\n\t\t\t\t\tcolor = {};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcolor.name = y[0].slice(3, y[0].length - 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault: if(opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\r\nfunction parse_fontScheme() { }\r\n\r\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\r\nfunction parse_fmtScheme() { }\r\n\r\nvar clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\r\nvar fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\r\nvar fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\r\n\r\n/* 20.1.6.10 themeElements CT_BaseStyles */\r\nfunction parse_themeElements(data, themes, opts) {\r\n\tthemes.themeElements = {};\r\n\r\n\tvar t;\r\n\r\n\t[\r\n\t\t/* clrScheme CT_ColorScheme */\r\n\t\t['clrScheme', clrsregex, parse_clrScheme],\r\n\t\t/* fontScheme CT_FontScheme */\r\n\t\t['fontScheme', fntsregex, parse_fontScheme],\r\n\t\t/* fmtScheme CT_StyleMatrix */\r\n\t\t['fmtScheme', fmtsregex, parse_fmtScheme]\r\n\t].forEach(function(m) {\r\n\t\tif(!(t=data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\r\n\t\tm[2](t, themes, opts);\r\n\t});\r\n}\r\n\r\nvar themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\r\n\r\n/* 14.2.7 Theme Part */\r\nfunction parse_theme_xml(data, opts) {\r\n\t/* 20.1.6.9 theme CT_OfficeStyleSheet */\r\n\tif(!data || data.length === 0) return parse_theme_xml(write_theme());\r\n\r\n\tvar t;\r\n\tvar themes = {};\r\n\r\n\t/* themeElements CT_BaseStyles */\r\n\tif(!(t=data.match(themeltregex))) throw new Error('themeElements not found in theme');\r\n\tparse_themeElements(t[0], themes, opts);\r\n\r\n\treturn themes;\r\n}\r\n\r\nfunction write_theme(Themes, opts) {\r\n\tif(opts && opts.themeXLSX) return opts.themeXLSX;\r\n\tvar o = [XML_HEADER];\r\n\to[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\r\n\to[o.length] =  '<a:themeElements>';\r\n\r\n\to[o.length] =   '<a:clrScheme name=\"Office\">';\r\n\to[o.length] =    '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\r\n\to[o.length] =    '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\r\n\to[o.length] =    '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\r\n\to[o.length] =    '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\r\n\to[o.length] =    '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\r\n\to[o.length] =    '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\r\n\to[o.length] =    '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\r\n\to[o.length] =    '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\r\n\to[o.length] =    '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\r\n\to[o.length] =    '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\r\n\to[o.length] =    '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\r\n\to[o.length] =    '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\r\n\to[o.length] =   '</a:clrScheme>';\r\n\r\n\to[o.length] =   '<a:fontScheme name=\"Office\">';\r\n\to[o.length] =    '<a:majorFont>';\r\n\to[o.length] =     '<a:latin typeface=\"Cambria\"/>';\r\n\to[o.length] =     '<a:ea typeface=\"\"/>';\r\n\to[o.length] =     '<a:cs typeface=\"\"/>';\r\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\r\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\r\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\r\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\r\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\r\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\r\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\r\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\r\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\r\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\r\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\r\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\r\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\r\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\r\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\r\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\r\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\r\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\r\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\r\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\r\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\r\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\r\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\r\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\r\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\r\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\r\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\r\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\r\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\r\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\r\n\to[o.length] =    '</a:majorFont>';\r\n\to[o.length] =    '<a:minorFont>';\r\n\to[o.length] =     '<a:latin typeface=\"Calibri\"/>';\r\n\to[o.length] =     '<a:ea typeface=\"\"/>';\r\n\to[o.length] =     '<a:cs typeface=\"\"/>';\r\n\to[o.length] =     '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\r\n\to[o.length] =     '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\r\n\to[o.length] =     '<a:font script=\"Hans\" typeface=\"宋体\"/>';\r\n\to[o.length] =     '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\r\n\to[o.length] =     '<a:font script=\"Arab\" typeface=\"Arial\"/>';\r\n\to[o.length] =     '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\r\n\to[o.length] =     '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\r\n\to[o.length] =     '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\r\n\to[o.length] =     '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\r\n\to[o.length] =     '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\r\n\to[o.length] =     '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\r\n\to[o.length] =     '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\r\n\to[o.length] =     '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\r\n\to[o.length] =     '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\r\n\to[o.length] =     '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\r\n\to[o.length] =     '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\r\n\to[o.length] =     '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\r\n\to[o.length] =     '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\r\n\to[o.length] =     '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\r\n\to[o.length] =     '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\r\n\to[o.length] =     '<a:font script=\"Taml\" typeface=\"Latha\"/>';\r\n\to[o.length] =     '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\r\n\to[o.length] =     '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\r\n\to[o.length] =     '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\r\n\to[o.length] =     '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\r\n\to[o.length] =     '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\r\n\to[o.length] =     '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\r\n\to[o.length] =     '<a:font script=\"Viet\" typeface=\"Arial\"/>';\r\n\to[o.length] =     '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\r\n\to[o.length] =     '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\r\n\to[o.length] =    '</a:minorFont>';\r\n\to[o.length] =   '</a:fontScheme>';\r\n\r\n\to[o.length] =   '<a:fmtScheme name=\"Office\">';\r\n\to[o.length] =    '<a:fillStyleLst>';\r\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\r\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\r\n\to[o.length] =      '<a:gsLst>';\r\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =       '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =      '</a:gsLst>';\r\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"1\"/>';\r\n\to[o.length] =     '</a:gradFill>';\r\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\r\n\to[o.length] =      '<a:gsLst>';\r\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =      '</a:gsLst>';\r\n\to[o.length] =      '<a:lin ang=\"16200000\" scaled=\"0\"/>';\r\n\to[o.length] =     '</a:gradFill>';\r\n\to[o.length] =    '</a:fillStyleLst>';\r\n\to[o.length] =    '<a:lnStyleLst>';\r\n\to[o.length] =     '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\r\n\to[o.length] =     '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\r\n\to[o.length] =     '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\r\n\to[o.length] =    '</a:lnStyleLst>';\r\n\to[o.length] =    '<a:effectStyleLst>';\r\n\to[o.length] =     '<a:effectStyle>';\r\n\to[o.length] =      '<a:effectLst>';\r\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\r\n\to[o.length] =      '</a:effectLst>';\r\n\to[o.length] =     '</a:effectStyle>';\r\n\to[o.length] =     '<a:effectStyle>';\r\n\to[o.length] =      '<a:effectLst>';\r\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\r\n\to[o.length] =      '</a:effectLst>';\r\n\to[o.length] =     '</a:effectStyle>';\r\n\to[o.length] =     '<a:effectStyle>';\r\n\to[o.length] =      '<a:effectLst>';\r\n\to[o.length] =       '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\r\n\to[o.length] =      '</a:effectLst>';\r\n\to[o.length] =      '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\r\n\to[o.length] =      '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\r\n\to[o.length] =     '</a:effectStyle>';\r\n\to[o.length] =    '</a:effectStyleLst>';\r\n\to[o.length] =    '<a:bgFillStyleLst>';\r\n\to[o.length] =     '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\r\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\r\n\to[o.length] =      '<a:gsLst>';\r\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =       '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =      '</a:gsLst>';\r\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\r\n\to[o.length] =     '</a:gradFill>';\r\n\to[o.length] =     '<a:gradFill rotWithShape=\"1\">';\r\n\to[o.length] =      '<a:gsLst>';\r\n\to[o.length] =       '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =       '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\r\n\to[o.length] =      '</a:gsLst>';\r\n\to[o.length] =      '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\r\n\to[o.length] =     '</a:gradFill>';\r\n\to[o.length] =    '</a:bgFillStyleLst>';\r\n\to[o.length] =   '</a:fmtScheme>';\r\n\to[o.length] =  '</a:themeElements>';\r\n\r\n\to[o.length] =  '<a:objectDefaults>';\r\n\to[o.length] =   '<a:spDef>';\r\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\r\n\to[o.length] =   '</a:spDef>';\r\n\to[o.length] =   '<a:lnDef>';\r\n\to[o.length] =    '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\r\n\to[o.length] =   '</a:lnDef>';\r\n\to[o.length] =  '</a:objectDefaults>';\r\n\to[o.length] =  '<a:extraClrSchemeLst/>';\r\n\to[o.length] = '</a:theme>';\r\n\treturn o.join(\"\");\r\n}\r\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\r\nfunction parse_Theme(blob, length, opts) {\r\n\tvar end = blob.l + length;\r\n\tvar dwThemeVersion = blob.read_shift(4);\r\n\tif(dwThemeVersion === 124226) return;\r\n\tif(!opts.cellStyles || !jszip) { blob.l = end; return; }\r\n\tvar data = blob.slice(blob.l);\r\n\tblob.l = end;\r\n\tvar zip; try { zip = new jszip(data); } catch(e) { return; }\r\n\tvar themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\r\n\tif(!themeXML) return;\r\n\treturn parse_theme_xml(themeXML, opts);\r\n}\r\n\r\n/* 2.5.49 */\r\nfunction parse_ColorTheme(blob) { return blob.read_shift(4); }\r\n\r\n/* 2.5.155 */\r\nfunction parse_FullColorExt(blob) {\r\n\tvar o = {};\r\n\to.xclrType = blob.read_shift(2);\r\n\to.nTintShade = blob.read_shift(2);\r\n\tswitch(o.xclrType) {\r\n\t\tcase 0: blob.l += 4; break;\r\n\t\tcase 1: o.xclrValue = parse_IcvXF(blob, 4); break;\r\n\t\tcase 2: o.xclrValue = parse_LongRGBA(blob, 4); break;\r\n\t\tcase 3: o.xclrValue = parse_ColorTheme(blob, 4); break;\r\n\t\tcase 4: blob.l += 4; break;\r\n\t}\r\n\tblob.l += 8;\r\n\treturn o;\r\n}\r\n\r\n/* 2.5.164 TODO: read 7 bits*/\r\nfunction parse_IcvXF(blob, length) {\r\n\treturn parsenoop(blob, length);\r\n}\r\n\r\n/* 2.5.280 */\r\nfunction parse_XFExtGradient(blob, length) {\r\n\treturn parsenoop(blob, length);\r\n}\r\n\r\n/* [MS-XLS] 2.5.108 */\r\nfunction parse_ExtProp(blob) {\r\n\tvar extType = blob.read_shift(2);\r\n\tvar cb = blob.read_shift(2) - 4;\r\n\tvar o = [extType];\r\n\tswitch(extType) {\r\n\t\tcase 0x04: case 0x05: case 0x07: case 0x08:\r\n\t\tcase 0x09: case 0x0A: case 0x0B: case 0x0D:\r\n\t\t\to[1] = parse_FullColorExt(blob, cb); break;\r\n\t\tcase 0x06: o[1] = parse_XFExtGradient(blob, cb); break;\r\n\t\tcase 0x0E: case 0x0F: o[1] = blob.read_shift(cb === 1 ? 1 : 2); break;\r\n\t\tdefault: throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\r\n\t}\r\n\treturn o;\r\n}\r\n\r\n/* 2.4.355 */\r\nfunction parse_XFExt(blob, length) {\r\n\tvar end = blob.l + length;\r\n\tblob.l += 2;\r\n\tvar ixfe = blob.read_shift(2);\r\n\tblob.l += 2;\r\n\tvar cexts = blob.read_shift(2);\r\n\tvar ext = [];\r\n\twhile(cexts-- > 0) ext.push(parse_ExtProp(blob, end-blob.l));\r\n\treturn {ixfe:ixfe, ext:ext};\r\n}\r\n\r\n/* xf is an XF, see parse_XFExt for xfext */\r\nfunction update_xfext(xf, xfext) {\r\n\txfext.forEach(function(xfe) {\r\n\t\tswitch(xfe[0]) { /* 2.5.108 extPropData */\r\n\t\t\tcase 0x04: break; /* foreground color */\r\n\t\t\tcase 0x05: break; /* background color */\r\n\t\t\tcase 0x06: break; /* gradient fill */\r\n\t\t\tcase 0x07: break; /* top cell border color */\r\n\t\t\tcase 0x08: break; /* bottom cell border color */\r\n\t\t\tcase 0x09: break; /* left cell border color */\r\n\t\t\tcase 0x0a: break; /* right cell border color */\r\n\t\t\tcase 0x0b: break; /* diagonal cell border color */\r\n\t\t\tcase 0x0d: break; /* text color */\r\n\t\t\tcase 0x0e: break; /* font scheme */\r\n\t\t\tcase 0x0f: break; /* indentation level */\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/* 18.6 Calculation Chain */\r\nfunction parse_cc_xml(data) {\r\n\tvar d = [];\r\n\tif(!data) return d;\r\n\tvar i = 1;\r\n\t(data.match(tagregex)||[]).forEach(function(x) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\tswitch(y[0]) {\r\n\t\t\tcase '<?xml': break;\r\n\t\t\t/* 18.6.2  calcChain CT_CalcChain 1 */\r\n\t\t\tcase '<calcChain': case '<calcChain>': case '</calcChain>': break;\r\n\t\t\t/* 18.6.1  c CT_CalcCell 1 */\r\n\t\t\tcase '<c': delete y[0]; if(y.i) i = y.i; else y.i = i; d.push(y); break;\r\n\t\t}\r\n\t});\r\n\treturn d;\r\n}\r\n\r\n//function write_cc_xml(data, opts) { }\r\n\r\n/* [MS-XLSB] 2.6.4.1 */\r\nfunction parse_BrtCalcChainItem$(data) {\r\n\tvar out = {};\r\n\tout.i = data.read_shift(4);\r\n\tvar cell = {};\r\n\tcell.r = data.read_shift(4);\r\n\tcell.c = data.read_shift(4);\r\n\tout.r = encode_cell(cell);\r\n\tvar flags = data.read_shift(1);\r\n\tif(flags & 0x2) out.l = '1';\r\n\tif(flags & 0x8) out.a = '1';\r\n\treturn out;\r\n}\r\n\r\n/* 18.6 Calculation Chain */\r\nfunction parse_cc_bin(data, name, opts) {\r\n\tvar out = [];\r\n\tvar pass = false;\r\n\trecordhopper(data, function hopper_cc(val, R_n, RT) {\r\n\t\tswitch(RT) {\r\n\t\t\tcase 0x003F: /* 'BrtCalcChainItem$' */\r\n\t\t\t\tout.push(val); break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\r\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\r\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\r\n\t\t}\r\n\t});\r\n\treturn out;\r\n}\r\n\r\n//function write_cc_bin(data, opts) { }\r\n/* 18.14 Supplementary Workbook Data */\r\nfunction parse_xlink_xml() {\r\n\t//var opts = _opts || {};\r\n\t//if(opts.WTF) throw \"XLSX External Link\";\r\n}\r\n\r\n/* [MS-XLSB] 2.1.7.25 External Link */\r\nfunction parse_xlink_bin(data, name, _opts) {\r\n\tif(!data) return data;\r\n\tvar opts = _opts || {};\r\n\r\n\tvar pass = false, end = false;\r\n\r\n\trecordhopper(data, function xlink_parse(val, R_n, RT) {\r\n\t\tif(end) return;\r\n\t\tswitch(RT) {\r\n\t\t\tcase 0x0167: /* 'BrtSupTabs' */\r\n\t\t\tcase 0x016B: /* 'BrtExternTableStart' */\r\n\t\t\tcase 0x016C: /* 'BrtExternTableEnd' */\r\n\t\t\tcase 0x016E: /* 'BrtExternRowHdr' */\r\n\t\t\tcase 0x016F: /* 'BrtExternCellBlank' */\r\n\t\t\tcase 0x0170: /* 'BrtExternCellReal' */\r\n\t\t\tcase 0x0171: /* 'BrtExternCellBool' */\r\n\t\t\tcase 0x0172: /* 'BrtExternCellError' */\r\n\t\t\tcase 0x0173: /* 'BrtExternCellString' */\r\n\t\t\tcase 0x01D8: /* 'BrtExternValueMeta' */\r\n\t\t\tcase 0x0241: /* 'BrtSupNameStart' */\r\n\t\t\tcase 0x0242: /* 'BrtSupNameValueStart' */\r\n\t\t\tcase 0x0243: /* 'BrtSupNameValueEnd' */\r\n\t\t\tcase 0x0244: /* 'BrtSupNameNum' */\r\n\t\t\tcase 0x0245: /* 'BrtSupNameErr' */\r\n\t\t\tcase 0x0246: /* 'BrtSupNameSt' */\r\n\t\t\tcase 0x0247: /* 'BrtSupNameNil' */\r\n\t\t\tcase 0x0248: /* 'BrtSupNameBool' */\r\n\t\t\tcase 0x0249: /* 'BrtSupNameFmla' */\r\n\t\t\tcase 0x024A: /* 'BrtSupNameBits' */\r\n\t\t\tcase 0x024B: /* 'BrtSupNameEnd' */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\r\n\t\t\t\tpass = true; break;\r\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\r\n\t\t\t\tpass = false; break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\r\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\r\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT.toString(16) + \" \" + R_n);\r\n\t\t}\r\n\t}, opts);\r\n}\r\nRELS.IMG = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\";\r\nRELS.DRAW = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\";\r\n/* 20.5 DrawingML - SpreadsheetML Drawing */\r\nfunction parse_drawing(data, rels) {\r\n\tif(!data) return \"??\";\r\n\t/*\r\n\t  Chartsheet Drawing:\r\n\t   - 20.5.2.35 wsDr CT_Drawing\r\n\t    - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\r\n\t     - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\r\n\t      - 20.1.2.2.16 graphic CT_GraphicalObject\r\n\t       - 20.1.2.2.17 graphicData CT_GraphicalObjectData\r\n          - chart reference\r\n\t   the actual type is based on the URI of the graphicData\r\n\t\tTODO: handle embedded charts and other types of graphics\r\n\t*/\r\n\tvar id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/)||[\"\",\"\"])[1];\r\n\r\n\treturn rels['!id'][id].Target;\r\n}\r\n\r\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\r\nvar _shapeid = 1024;\r\nfunction write_comments_vml(rId, comments) {\r\n\tvar csize = [21600, 21600];\r\n\t/* L.5.2.1.2 Path Attribute */\r\n\tvar bbox = [\"m0,0l0\",csize[1],csize[0],csize[1],csize[0],\"0xe\"].join(\",\");\r\n\tvar o = [\r\n\t\twritextag(\"xml\", null, { 'xmlns:v': XLMLNS.v, 'xmlns:o': XLMLNS.o, 'xmlns:x': XLMLNS.x, 'xmlns:mv': XLMLNS.mv }).replace(/\\/>/,\">\"),\r\n\t\twritextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {'v:ext':\"edit\", 'data':rId}), {'v:ext':\"edit\"}),\r\n\t\twritextag(\"v:shapetype\", [\r\n\t\t\twritextag(\"v:stroke\", null, {joinstyle:\"miter\"}),\r\n\t\t\twritextag(\"v:path\", null, {gradientshapeok:\"t\", 'o:connecttype':\"rect\"})\r\n\t\t].join(\"\"), {id:\"_x0000_t202\", 'o:spt':202, coordsize:csize.join(\",\"),path:bbox})\r\n\t];\r\n\twhile(_shapeid < rId * 1000) _shapeid += 1000;\r\n\r\n\tcomments.forEach(function(x) { var c = decode_cell(x[0]);\r\n\to = o.concat([\r\n\t'<v:shape' + wxt_helper({\r\n\t\tid:'_x0000_s' + (++_shapeid),\r\n\t\ttype:\"#_x0000_t202\",\r\n\t\tstyle:\"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10;visibility:hidden\",\r\n\t\tfillcolor:\"#ECFAD4\",\r\n\t\tstrokecolor:\"#edeaa1\"\r\n\t}) + '>',\r\n\t\twritextag('v:fill', writextag(\"o:fill\", null, {type:\"gradientUnscaled\", 'v:ext':\"view\"}), {'color2':\"#BEFF82\", 'angle':\"-180\", 'type':\"gradient\"}),\r\n\t\twritextag(\"v:shadow\", null, {on:\"t\", 'obscured':\"t\"}),\r\n\t\twritextag(\"v:path\", null, {'o:connecttype':\"none\"}),\r\n\t\t'<v:textbox><div style=\"text-align:left\"></div></v:textbox>',\r\n\t\t'<x:ClientData ObjectType=\"Note\">',\r\n\t\t\t'<x:MoveWithCells/>',\r\n\t\t\t'<x:SizeWithCells/>',\r\n\t\t\t/* Part 4 19.4.2.3 Anchor (Anchor) */\r\n\t\t\twritetag('x:Anchor', [c.c, 0, c.r, 0, c.c+3, 100, c.r+5, 100].join(\",\")),\r\n\t\t\twritetag('x:AutoFill', \"False\"),\r\n\t\t\twritetag('x:Row', String(c.r)),\r\n\t\t\twritetag('x:Column', String(c.c)),\r\n\t\t\t'<x:Visible/>',\r\n\t\t'</x:ClientData>',\r\n\t'</v:shape>'\r\n\t]); });\r\n\to.push('</xml>');\r\n\treturn o.join(\"\");\r\n}\r\n\r\nRELS.CMNT = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\";\r\n\r\nfunction parse_comments(zip, dirComments, sheets, sheetRels, opts) {\r\n\tfor(var i = 0; i != dirComments.length; ++i) {\r\n\t\tvar canonicalpath=dirComments[i];\r\n\t\tvar comments=parse_cmnt(getzipdata(zip, canonicalpath.replace(/^\\//,''), true), canonicalpath, opts);\r\n\t\tif(!comments || !comments.length) continue;\r\n\t\t// find the sheets targeted by these comments\r\n\t\tvar sheetNames = keys(sheets);\r\n\t\tfor(var j = 0; j != sheetNames.length; ++j) {\r\n\t\t\tvar sheetName = sheetNames[j];\r\n\t\t\tvar rels = sheetRels[sheetName];\r\n\t\t\tif(rels) {\r\n\t\t\t\tvar rel = rels[canonicalpath];\r\n\t\t\t\tif(rel) insertCommentsIntoSheet(sheetName, sheets[sheetName], comments);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction insertCommentsIntoSheet(sheetName, sheet, comments) {\r\n\tvar dense = Array.isArray(sheet);\r\n\tvar cell, r;\r\n\tcomments.forEach(function(comment) {\r\n\t\tif(dense) {\r\n\t\t\tr = decode_cell(comment.ref);\r\n\t\t\tif(!sheet[r.r]) sheet[r.r] = [];\r\n\t\t\tcell = sheet[r.r][r.c];\r\n\t\t} else cell = sheet[comment.ref];\r\n\t\tif (!cell) {\r\n\t\t\tcell = {};\r\n\t\t\tif(dense) sheet[r.r][r.c] = cell;\r\n\t\t\telse sheet[comment.ref] = cell;\r\n\t\t\tvar range = safe_decode_range(sheet[\"!ref\"]||\"BDWGO1000001:A1\");\r\n\t\t\tvar thisCell = decode_cell(comment.ref);\r\n\t\t\tif(range.s.r > thisCell.r) range.s.r = thisCell.r;\r\n\t\t\tif(range.e.r < thisCell.r) range.e.r = thisCell.r;\r\n\t\t\tif(range.s.c > thisCell.c) range.s.c = thisCell.c;\r\n\t\t\tif(range.e.c < thisCell.c) range.e.c = thisCell.c;\r\n\t\t\tvar encoded = encode_range(range);\r\n\t\t\tif (encoded !== sheet[\"!ref\"]) sheet[\"!ref\"] = encoded;\r\n\t\t}\r\n\r\n\t\tif (!cell.c) cell.c = [];\r\n\t\tvar o = ({a: comment.author, t: comment.t, r: comment.r});\r\n\t\tif(comment.h) o.h = comment.h;\r\n\t\tcell.c.push(o);\r\n\t});\r\n}\r\n\r\n/* 18.7 Comments */\r\nfunction parse_comments_xml(data, opts) {\r\n\t/* 18.7.6 CT_Comments */\r\n\tif(data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\r\n\tvar authors = [];\r\n\tvar commentList = [];\r\n\tvar authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\r\n\tif(authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function(x) {\r\n\t\tif(x === \"\" || x.trim() === \"\") return;\r\n\t\tvar a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\r\n\t\tif(a) authors.push(a[1]);\r\n\t});\r\n\tvar cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\r\n\tif(cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function(x) {\r\n\t\tif(x === \"\" || x.trim() === \"\") return;\r\n\t\tvar cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\r\n\t\tif(!cm) return;\r\n\t\tvar y = parsexmltag(cm[0]);\r\n\t\tvar comment = ({ author: y.authorId && authors[y.authorId] || \"sheetjsghost\", ref: y.ref, guid: y.guid });\r\n\t\tvar cell = decode_cell(y.ref);\r\n\t\tif(opts.sheetRows && opts.sheetRows <= cell.r) return;\r\n\t\tvar textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\r\n\t\tvar rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {r:\"\",t:\"\",h:\"\"};\r\n\t\tcomment.r = rt.r;\r\n\t\tif(rt.r == \"<t></t>\") rt.t = rt.h = \"\";\r\n\t\tcomment.t = rt.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\r\n\t\tif(opts.cellHTML) comment.h = rt.h;\r\n\t\tcommentList.push(comment);\r\n\t});\r\n\treturn commentList;\r\n}\r\n\r\nvar CMNT_XML_ROOT = writextag('comments', null, { 'xmlns': XMLNS.main[0] });\r\nfunction write_comments_xml(data) {\r\n\tvar o = [XML_HEADER, CMNT_XML_ROOT];\r\n\r\n\tvar iauthor = [];\r\n\to.push(\"<authors>\");\r\n\tdata.forEach(function(x) { x[1].forEach(function(w) { var a = escapexml(w.a);\r\n\t\tif(iauthor.indexOf(a) > -1) return;\r\n\t\tiauthor.push(a);\r\n\t\to.push(\"<author>\" + a + \"</author>\");\r\n\t}); });\r\n\to.push(\"</authors>\");\r\n\to.push(\"<commentList>\");\r\n\tdata.forEach(function(d) {\r\n\t\td[1].forEach(function(c) {\r\n\t\t\t/* 18.7.3 CT_Comment */\r\n\t\t\to.push('<comment ref=\"' + d[0] + '\" authorId=\"' + iauthor.indexOf(escapexml(c.a)) + '\"><text>');\r\n\t\t\to.push(writetag(\"t\", c.t == null ? \"\" : c.t));\r\n\t\t\to.push('</text></comment>');\r\n\t\t});\r\n\t});\r\n\to.push(\"</commentList>\");\r\n\tif(o.length>2) { o[o.length] = ('</comments>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\r\nfunction parse_BrtBeginComment(data) {\r\n\tvar out = {};\r\n\tout.iauthor = data.read_shift(4);\r\n\tvar rfx = parse_UncheckedRfX(data, 16);\r\n\tout.rfx = rfx.s;\r\n\tout.ref = encode_cell(rfx.s);\r\n\tdata.l += 16; /*var guid = parse_GUID(data); */\r\n\treturn out;\r\n}\r\nfunction write_BrtBeginComment(data, o) {\r\n\tif(o == null) o = new_buf(36);\r\n\to.write_shift(4, data[1].iauthor);\r\n\twrite_UncheckedRfX((data[0]), o);\r\n\to.write_shift(4, 0);\r\n\to.write_shift(4, 0);\r\n\to.write_shift(4, 0);\r\n\to.write_shift(4, 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\r\nvar parse_BrtCommentAuthor = parse_XLWideString;\r\nfunction write_BrtCommentAuthor(data) { return write_XLWideString(data.slice(0, 54)); }\r\n\r\n/* [MS-XLSB] 2.1.7.8 Comments */\r\nfunction parse_comments_bin(data, opts) {\r\n\tvar out = [];\r\n\tvar authors = [];\r\n\tvar c = {};\r\n\tvar pass = false;\r\n\trecordhopper(data, function hopper_cmnt(val, R_n, RT) {\r\n\t\tswitch(RT) {\r\n\t\t\tcase 0x0278: /* 'BrtCommentAuthor' */\r\n\t\t\t\tauthors.push(val); break;\r\n\t\t\tcase 0x027B: /* 'BrtBeginComment' */\r\n\t\t\t\tc = val; break;\r\n\t\t\tcase 0x027D: /* 'BrtCommentText' */\r\n\t\t\t\tc.t = val.t; c.h = val.h; c.r = val.r; break;\r\n\t\t\tcase 0x027C: /* 'BrtEndComment' */\r\n\t\t\t\tc.author = authors[c.iauthor];\r\n\t\t\t\tdelete c.iauthor;\r\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= c.rfx.r) break;\r\n\t\t\t\tif(!c.t) c.t = \"\";\r\n\t\t\t\tdelete c.rfx; out.push(c); break;\r\n\r\n\t\t\tcase 0x0C00: /* 'BrtUid' */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\r\n\t\t\t\tpass = true; break;\r\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\r\n\t\t\t\tpass = false; break;\r\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\r\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\r\n\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\r\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\r\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\r\n\t\t}\r\n\t});\r\n\treturn out;\r\n}\r\n\r\nfunction write_comments_bin(data) {\r\n\tvar ba = buf_array();\r\n\tvar iauthor = [];\r\n\twrite_record(ba, \"BrtBeginComments\");\r\n\r\n\twrite_record(ba, \"BrtBeginCommentAuthors\");\r\n\tdata.forEach(function(comment) {\r\n\t\tcomment[1].forEach(function(c) {\r\n\t\t\tif(iauthor.indexOf(c.a) > -1) return;\r\n\t\t\tiauthor.push(c.a.slice(0,54));\r\n\t\t\twrite_record(ba, \"BrtCommentAuthor\", write_BrtCommentAuthor(c.a));\r\n\t\t});\r\n\t});\r\n\twrite_record(ba, \"BrtEndCommentAuthors\");\r\n\r\n\twrite_record(ba, \"BrtBeginCommentList\");\r\n\tdata.forEach(function(comment) {\r\n\t\tcomment[1].forEach(function(c) {\r\n\t\t\tc.iauthor = iauthor.indexOf(c.a);\r\n\t\t\tvar range = {s:decode_cell(comment[0]),e:decode_cell(comment[0])};\r\n\t\t\twrite_record(ba, \"BrtBeginComment\", write_BrtBeginComment([range, c]));\r\n\t\t\tif(c.t && c.t.length > 0) write_record(ba, \"BrtCommentText\", write_BrtCommentText(c));\r\n\t\t\twrite_record(ba, \"BrtEndComment\");\r\n\t\t\tdelete c.iauthor;\r\n\t\t});\r\n\t});\r\n\twrite_record(ba, \"BrtEndCommentList\");\r\n\r\n\twrite_record(ba, \"BrtEndComments\");\r\n\treturn ba.end();\r\n}\r\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\r\nfunction make_vba_xls(cfb) {\r\n\tvar newcfb = CFB.utils.cfb_new({root:\"R\"});\r\n\tcfb.FullPaths.forEach(function(p, i) {\r\n\t\tif(p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/)) return;\r\n\t\tvar newpath = p.replace(/^[^\\/]*/,\"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\r\n\t\tCFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\r\n\t});\r\n\treturn CFB.write(newcfb);\r\n}\r\n\r\nfunction fill_vba_xls(cfb, vba) {\r\n\tvba.FullPaths.forEach(function(p, i) {\r\n\t\tif(i == 0) return;\r\n\t\tvar newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\r\n\t\tif(newpath.slice(-1) !== \"/\") CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\r\n\t});\r\n}\r\n\r\nvar VBAFMTS = [ \"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\" ];\r\n\r\nRELS.DS = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\";\r\nRELS.MS = \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\";\r\n\r\n/* macro and dialog sheet stubs */\r\nfunction parse_ds_bin() { return {'!type':'dialog'}; }\r\nfunction parse_ds_xml() { return {'!type':'dialog'}; }\r\nfunction parse_ms_bin() { return {'!type':'macro'}; }\r\nfunction parse_ms_xml() { return {'!type':'macro'}; }\r\n/* TODO: it will be useful to parse the function str */\r\nvar rc_to_a1 = (function(){\r\n\tvar rcregex = /(^|[^A-Za-z])R(\\[?)(-?\\d+|)\\]?C(\\[?)(-?\\d+|)\\]?/g;\r\n\tvar rcbase = ({r:0,c:0});\r\n\tfunction rcfunc($$,$1,$2,$3,$4,$5) {\r\n\t\tvar R = $3.length>0?parseInt($3,10)|0:0, C = $5.length>0?parseInt($5,10)|0:0;\r\n\t\tif(C<0 && $4.length === 0) C=0;\r\n\t\tvar cRel = false, rRel = false;\r\n\t\tif($4.length > 0 || $5.length == 0) cRel = true; if(cRel) C += rcbase.c; else --C;\r\n\t\tif($2.length > 0 || $3.length == 0) rRel = true; if(rRel) R += rcbase.r; else --R;\r\n\t\treturn $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\r\n\t}\r\n\treturn function rc_to_a1(fstr, base) {\r\n\t\trcbase = base;\r\n\t\treturn fstr.replace(rcregex, rcfunc);\r\n\t};\r\n})();\r\n\r\nvar crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)([1-9]\\d{0,5}|10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6])(?![_.\\(A-Za-z0-9])/g;\r\nvar a1_to_rc =(function(){\r\n\treturn function a1_to_rc(fstr, base) {\r\n\t\treturn fstr.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\r\n\t\t\tvar c = decode_col($3) - ($2 ? 0 : base.c);\r\n\t\t\tvar r = decode_row($5) - ($4 ? 0 : base.r);\r\n\t\t\tvar R = (r == 0 ? \"\" : !$4 ? \"[\" + r + \"]\" : (r+1));\r\n\t\t\tvar C = (c == 0 ? \"\" : !$2 ? \"[\" + c + \"]\" : (c+1));\r\n\t\t\treturn $1 + \"R\" + R + \"C\" + C;\r\n\t\t});\r\n\t};\r\n})();\r\n\r\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\r\nfunction shift_formula_str(f, delta) {\r\n\treturn f.replace(crefregex, function($0, $1, $2, $3, $4, $5) {\r\n\t\treturn $1+($2==\"$\" ? $2+$3 : encode_col(decode_col($3)+delta.c))+($4==\"$\" ? $4+$5 : encode_row(decode_row($5) + delta.r));\r\n\t});\r\n}\r\n\r\nfunction shift_formula_xlsx(f, range, cell) {\r\n\tvar r = decode_range(range), s = r.s, c = decode_cell(cell);\r\n\tvar delta = {r:c.r - s.r, c:c.c - s.c};\r\n\treturn shift_formula_str(f, delta);\r\n}\r\n\r\n/* TODO: parse formula */\r\nfunction fuzzyfmla(f) {\r\n\tif(f.length == 1) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction _xlfn(f) {\r\n\treturn f.replace(/_xlfn\\./g,\"\");\r\n}\r\nfunction parseread1(blob) { blob.l+=1; return; }\r\n\r\n/* [MS-XLS] 2.5.51 */\r\nfunction parse_ColRelU(blob, length) {\r\n\tvar c = blob.read_shift(length == 1 ? 1 : 2);\r\n\treturn [c & 0x3FFF, (c >> 14) & 1, (c >> 15) & 1];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\r\nfunction parse_RgceArea(blob, length, opts) {\r\n\tvar w = 2;\r\n\tif(opts) {\r\n\t\tif(opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob, length, opts);\r\n\t\telse if(opts.biff == 12) w = 4;\r\n\t}\r\n\tvar r=blob.read_shift(w), R=blob.read_shift(w);\r\n\tvar c=parse_ColRelU(blob, 2);\r\n\tvar C=parse_ColRelU(blob, 2);\r\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\r\n}\r\n/* BIFF 2-5 encodes flags in the row field */\r\nfunction parse_RgceArea_BIFF2(blob) {\r\n\tvar r=parse_ColRelU(blob, 2), R=parse_ColRelU(blob, 2);\r\n\tvar c=blob.read_shift(1);\r\n\tvar C=blob.read_shift(1);\r\n\treturn { s:{r:r[0], c:c, cRel:r[1], rRel:r[2]}, e:{r:R[0], c:C, cRel:R[1], rRel:R[2]} };\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\r\nfunction parse_RgceAreaRel(blob, length, opts) {\r\n\tif(opts.biff < 8) return parse_RgceArea_BIFF2(blob, length, opts);\r\n\tvar r=blob.read_shift(opts.biff == 12 ? 4 : 2), R=blob.read_shift(opts.biff == 12 ? 4 : 2);\r\n\tvar c=parse_ColRelU(blob, 2);\r\n\tvar C=parse_ColRelU(blob, 2);\r\n\treturn { s:{r:r, c:c[0], cRel:c[1], rRel:c[2]}, e:{r:R, c:C[0], cRel:C[1], rRel:C[2]} };\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\r\nfunction parse_RgceLoc(blob, length, opts) {\r\n\tif(opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob, length, opts);\r\n\tvar r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\r\n\tvar c = parse_ColRelU(blob, 2);\r\n\treturn {r:r, c:c[0], cRel:c[1], rRel:c[2]};\r\n}\r\nfunction parse_RgceLoc_BIFF2(blob) {\r\n\tvar r = parse_ColRelU(blob, 2);\r\n\tvar c = blob.read_shift(1);\r\n\treturn {r:r[0], c:c, cRel:r[1], rRel:r[2]};\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\r\nfunction parse_RgceElfLoc(blob) {\r\n\tvar r = blob.read_shift(2);\r\n\tvar c = blob.read_shift(2);\r\n\treturn {r:r, c:c & 0xFF, fQuoted:!!(c & 0x4000), cRel:c>>15, rRel:c>>15 };\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\r\nfunction parse_RgceLocRel(blob, length, opts) {\r\n\tvar biff = opts && opts.biff ? opts.biff : 8;\r\n\tif(biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob, length, opts);\r\n\tvar r = blob.read_shift(biff >= 12 ? 4 : 2);\r\n\tvar cl = blob.read_shift(2);\r\n\tvar cRel = (cl & 0x4000) >> 14, rRel = (cl & 0x8000) >> 15;\r\n\tcl &= 0x3FFF;\r\n\tif(rRel == 1) while(r > 0x7FFFF) r -= 0x100000;\r\n\tif(cRel == 1) while(cl > 0x1FFF) cl = cl - 0x4000;\r\n\treturn {r:r,c:cl,cRel:cRel,rRel:rRel};\r\n}\r\nfunction parse_RgceLocRel_BIFF2(blob) {\r\n\tvar rl = blob.read_shift(2);\r\n\tvar c = blob.read_shift(1);\r\n\tvar rRel = (rl & 0x8000) >> 15, cRel = (rl & 0x4000) >> 14;\r\n\trl &= 0x3FFF;\r\n\tif(rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\r\n\tif(cRel == 1 && c >= 0x80) c = c - 0x100;\r\n\treturn {r:rl,c:c,cRel:cRel,rRel:rRel};\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\r\nfunction parse_PtgArea(blob, length, opts) {\r\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\r\n\tvar area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\r\n\treturn [type, area];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\r\nfunction parse_PtgArea3d(blob, length, opts) {\r\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\r\n\tvar ixti = blob.read_shift(2, 'i');\r\n\tvar w = 8;\r\n\tif(opts) switch(opts.biff) {\r\n\t\tcase 5: blob.l += 12; w = 6; break;\r\n\t\tcase 12: w = 12; break;\r\n\t}\r\n\tvar area = parse_RgceArea(blob, w, opts);\r\n\treturn [type, ixti, area];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\r\nfunction parse_PtgAreaErr(blob, length, opts) {\r\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\r\n\tblob.l += opts && (opts.biff > 8) ? 12 : (opts.biff < 8 ? 6 : 8);\r\n\treturn [type];\r\n}\r\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\r\nfunction parse_PtgAreaErr3d(blob, length, opts) {\r\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\r\n\tvar ixti = blob.read_shift(2);\r\n\tvar w = 8;\r\n\tif(opts) switch(opts.biff) {\r\n\t\tcase 5: blob.l += 12; w = 6; break;\r\n\t\tcase 12: w = 12; break;\r\n\t}\r\n\tblob.l += w;\r\n\treturn [type, ixti];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\r\nfunction parse_PtgAreaN(blob, length, opts) {\r\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\r\n\tvar area = parse_RgceAreaRel(blob, length - 1, opts);\r\n\treturn [type, area];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\r\nfunction parse_PtgArray(blob, length, opts) {\r\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\r\n\tblob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\r\n\treturn [type];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\r\nfunction parse_PtgAttrBaxcel(blob) {\r\n\tvar bitSemi = blob[blob.l+1] & 0x01; /* 1 = volatile */\r\n\tvar bitBaxcel = 1;\r\n\tblob.l += 4;\r\n\treturn [bitSemi, bitBaxcel];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\r\nfunction parse_PtgAttrChoose(blob, length, opts) {\r\n\tblob.l +=2;\r\n\tvar offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\r\n\tvar o = [];\r\n\t/* offset is 1 less than the number of elements */\r\n\tfor(var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\r\nfunction parse_PtgAttrGoto(blob, length, opts) {\r\n\tvar bitGoto = (blob[blob.l+1] & 0xFF) ? 1 : 0;\r\n\tblob.l += 2;\r\n\treturn [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\r\nfunction parse_PtgAttrIf(blob, length, opts) {\r\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\r\n\tblob.l += 2;\r\n\treturn [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\r\n}\r\n\r\n/* [MS-XLSB] 2.5.97.28 */\r\nfunction parse_PtgAttrIfError(blob) {\r\n\tvar bitIf = (blob[blob.l+1] & 0xFF) ? 1 : 0;\r\n\tblob.l += 2;\r\n\treturn [bitIf, blob.read_shift(2)];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\r\nfunction parse_PtgAttrSemi(blob, length, opts) {\r\n\tvar bitSemi = (blob[blob.l+1] & 0xFF) ? 1 : 0;\r\n\tblob.l += opts && opts.biff == 2 ? 3 : 4;\r\n\treturn [bitSemi];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\r\nfunction parse_PtgAttrSpaceType(blob) {\r\n\tvar type = blob.read_shift(1), cch = blob.read_shift(1);\r\n\treturn [type, cch];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\r\nfunction parse_PtgAttrSpace(blob) {\r\n\tblob.read_shift(2);\r\n\treturn parse_PtgAttrSpaceType(blob, 2);\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\r\nfunction parse_PtgAttrSpaceSemi(blob) {\r\n\tblob.read_shift(2);\r\n\treturn parse_PtgAttrSpaceType(blob, 2);\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\r\nfunction parse_PtgRef(blob, length, opts) {\r\n\t//var ptg = blob[blob.l] & 0x1F;\r\n\tvar type = (blob[blob.l] & 0x60)>>5;\r\n\tblob.l += 1;\r\n\tvar loc = parse_RgceLoc(blob, 0, opts);\r\n\treturn [type, loc];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\r\nfunction parse_PtgRefN(blob, length, opts) {\r\n\tvar type = (blob[blob.l] & 0x60)>>5;\r\n\tblob.l += 1;\r\n\tvar loc = parse_RgceLocRel(blob, 0, opts);\r\n\treturn [type, loc];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\r\nfunction parse_PtgRef3d(blob, length, opts) {\r\n\tvar type = (blob[blob.l] & 0x60)>>5;\r\n\tblob.l += 1;\r\n\tvar ixti = blob.read_shift(2); // XtiIndex\r\n\tif(opts && opts.biff == 5) blob.l += 12;\r\n\tvar loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\r\n\treturn [type, ixti, loc];\r\n}\r\n\r\n\r\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\r\nfunction parse_PtgFunc(blob, length, opts) {\r\n\t//var ptg = blob[blob.l] & 0x1F;\r\n\tvar type = (blob[blob.l] & 0x60)>>5;\r\n\tblob.l += 1;\r\n\tvar iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\r\n\treturn [FtabArgc[iftab], Ftab[iftab], type];\r\n}\r\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\r\nfunction parse_PtgFuncVar(blob, length, opts) {\r\n\tvar type = blob[blob.l++];\r\n\tvar cparams = blob.read_shift(1), tab = opts && opts.biff <= 3 ? [(type == 0x58 ? -1 : 0), blob.read_shift(1)]: parsetab(blob);\r\n\treturn [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\r\n}\r\n\r\nfunction parsetab(blob) {\r\n\treturn [blob[blob.l+1]>>7, blob.read_shift(2) & 0x7FFF];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\r\nfunction parse_PtgAttrSum(blob, length, opts) {\r\n\tblob.l += opts && opts.biff == 2 ? 3 : 4; return;\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\r\nfunction parse_PtgExp(blob, length, opts) {\r\n\tblob.l++;\r\n\tif(opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\r\n\tvar row = blob.read_shift(2);\r\n\tvar col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\r\n\treturn [row, col];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\r\nfunction parse_PtgErr(blob) { blob.l++; return BErr[blob.read_shift(1)]; }\r\n\r\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\r\nfunction parse_PtgInt(blob) { blob.l++; return blob.read_shift(2); }\r\n\r\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\r\nfunction parse_PtgBool(blob) { blob.l++; return blob.read_shift(1)!==0;}\r\n\r\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\r\nfunction parse_PtgNum(blob) { blob.l++; return parse_Xnum(blob, 8); }\r\n\r\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\r\nfunction parse_PtgStr(blob, length, opts) { blob.l++; return parse_ShortXLUnicodeString(blob, length-1, opts); }\r\n\r\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\r\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\r\nfunction parse_SerAr(blob, biff) {\r\n\tvar val = [blob.read_shift(1)];\r\n\tif(biff == 12) switch(val[0]) {\r\n\t\tcase 0x02: val[0] = 0x04; break; /* SerBool */\r\n\t\tcase 0x04: val[0] = 0x10; break; /* SerErr */\r\n\t\tcase 0x00: val[0] = 0x01; break; /* SerNum */\r\n\t\tcase 0x01: val[0] = 0x02; break; /* SerStr */\r\n\t}\r\n\tswitch(val[0]) {\r\n\t\tcase 0x04: /* SerBool -- boolean */\r\n\t\t\tval[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\r\n\t\t\tif(biff != 12) blob.l += 7; break;\r\n\t\tcase 0x10: /* SerErr -- error */\r\n\t\t\tval[1] = BErr[blob[blob.l]];\r\n\t\t\tblob.l += ((biff == 12) ? 4 : 8); break;\r\n\t\tcase 0x00: /* SerNil -- honestly, I'm not sure how to reproduce this */\r\n\t\t\tblob.l += 8; break;\r\n\t\tcase 0x01: /* SerNum -- Xnum */\r\n\t\t\tval[1] = parse_Xnum(blob, 8); break;\r\n\t\tcase 0x02: /* SerStr -- XLUnicodeString (<256 chars) */\r\n\t\t\tval[1] = parse_XLUnicodeString2(blob, 0, {biff:biff > 0 && biff < 8 ? 2 : biff}); break;\r\n\t\tdefault: throw \"Bad SerAr: \" + val[0]; /* Unreachable */\r\n\t}\r\n\treturn val;\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\r\nfunction parse_PtgExtraMem(blob, cce, opts) {\r\n\tvar count = blob.read_shift((opts.biff == 12) ? 4 : 2);\r\n\tvar out = [];\r\n\tfor(var i = 0; i != count; ++i) out.push(((opts.biff == 12) ? parse_UncheckedRfX : parse_Ref8U)(blob, 8));\r\n\treturn out;\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\r\nfunction parse_PtgExtraArray(blob, length, opts) {\r\n\tvar rows = 0, cols = 0;\r\n\tif(opts.biff == 12) {\r\n\t\trows = blob.read_shift(4); // DRw\r\n\t\tcols = blob.read_shift(4); // DCol\r\n\t} else {\r\n\t\tcols = 1 + blob.read_shift(1); //DColByteU\r\n\t\trows = 1 + blob.read_shift(2); //DRw\r\n\t}\r\n\tif(opts.biff >= 2 && opts.biff < 8) { --rows; if(--cols == 0) cols = 0x100; }\r\n\t// $FlowIgnore\r\n\tfor(var i = 0, o = []; i != rows && (o[i] = []); ++i)\r\n\t\tfor(var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\r\nfunction parse_PtgName(blob, length, opts) {\r\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\r\n\tvar w = (!opts || (opts.biff >= 8)) ? 4 : 2;\r\n\tvar nameindex = blob.read_shift(w);\r\n\tswitch(opts.biff) {\r\n\t\tcase 2: blob.l += 5; break;\r\n\t\tcase 3: case 4: blob.l += 8; break;\r\n\t\tcase 5: blob.l += 12; break;\r\n\t}\r\n\treturn [type, 0, nameindex];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\r\nfunction parse_PtgNameX(blob, length, opts) {\r\n\tif(opts.biff == 5) return parse_PtgNameX_BIFF5(blob, length, opts);\r\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\r\n\tvar ixti = blob.read_shift(2); // XtiIndex\r\n\tvar nameindex = blob.read_shift(4);\r\n\treturn [type, ixti, nameindex];\r\n}\r\nfunction parse_PtgNameX_BIFF5(blob) {\r\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\r\n\tvar ixti = blob.read_shift(2, 'i'); // XtiIndex\r\n\tblob.l += 8;\r\n\tvar nameindex = blob.read_shift(2);\r\n\tblob.l += 12;\r\n\treturn [type, ixti, nameindex];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\r\nfunction parse_PtgMemArea(blob, length, opts) {\r\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\r\n\tblob.l += (opts && opts.biff == 2 ? 3 : 4);\r\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\r\n\treturn [type, cce];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\r\nfunction parse_PtgMemFunc(blob, length, opts) {\r\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\r\n\tvar cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\r\n\treturn [type, cce];\r\n}\r\n\r\n\r\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\r\nfunction parse_PtgRefErr(blob, length, opts) {\r\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\r\n\tblob.l += 4;\r\n\tif(opts.biff < 8) blob.l--;\r\n\tif(opts.biff == 12) blob.l += 2;\r\n\treturn [type];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\r\nfunction parse_PtgRefErr3d(blob, length, opts) {\r\n\tvar type = (blob[blob.l++] & 0x60) >> 5;\r\n\tvar ixti = blob.read_shift(2);\r\n\tvar w = 4;\r\n\tif(opts) switch(opts.biff) {\r\n\t\tcase 5: w = 15; break;\r\n\t\tcase 12: w = 6; break;\r\n\t}\r\n\tblob.l += w;\r\n\treturn [type, ixti];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\r\nvar parse_PtgMemErr = parsenoop;\r\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\r\nvar parse_PtgMemNoMem = parsenoop;\r\n/* [MS-XLS] 2.5.198.92 */\r\nvar parse_PtgTbl = parsenoop;\r\n\r\nfunction parse_PtgElfLoc(blob, length, opts) {\r\n\tblob.l += 2;\r\n\treturn [parse_RgceElfLoc(blob, 4, opts)];\r\n}\r\nfunction parse_PtgElfNoop(blob) {\r\n\tblob.l += 6;\r\n\treturn [];\r\n}\r\n/* [MS-XLS] 2.5.198.46 */\r\nvar parse_PtgElfCol = parse_PtgElfLoc;\r\n/* [MS-XLS] 2.5.198.47 */\r\nvar parse_PtgElfColS = parse_PtgElfNoop;\r\n/* [MS-XLS] 2.5.198.48 */\r\nvar parse_PtgElfColSV = parse_PtgElfNoop;\r\n/* [MS-XLS] 2.5.198.49 */\r\nvar parse_PtgElfColV = parse_PtgElfLoc;\r\n/* [MS-XLS] 2.5.198.50 */\r\nfunction parse_PtgElfLel(blob) {\r\n\tblob.l += 2;\r\n\treturn [parseuint16(blob), blob.read_shift(2) & 0x01];\r\n}\r\n/* [MS-XLS] 2.5.198.51 */\r\nvar parse_PtgElfRadical = parse_PtgElfLoc;\r\n/* [MS-XLS] 2.5.198.52 */\r\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\r\n/* [MS-XLS] 2.5.198.53 */\r\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\r\n/* [MS-XLS] 2.5.198.54 */\r\nvar parse_PtgElfRw = parse_PtgElfLoc;\r\n/* [MS-XLS] 2.5.198.55 */\r\nvar parse_PtgElfRwV = parse_PtgElfLoc;\r\n\r\n/* [MS-XLSB] 2.5.97.52 TODO */\r\nvar PtgListRT = [\r\n\t\"Data\",\r\n\t\"All\",\r\n\t\"Headers\",\r\n\t\"??\",\r\n\t\"?Data2\",\r\n\t\"??\",\r\n\t\"?DataHeaders\",\r\n\t\"??\",\r\n\t\"Totals\",\r\n\t\"??\",\r\n\t\"??\",\r\n\t\"??\",\r\n\t\"?DataTotals\",\r\n\t\"??\",\r\n\t\"??\",\r\n\t\"??\",\r\n\t\"?Current\"\r\n];\r\nfunction parse_PtgList(blob) {\r\n\tblob.l += 2;\r\n\tvar ixti = blob.read_shift(2);\r\n\tvar flags = blob.read_shift(2);\r\n\tvar idx = blob.read_shift(4);\r\n\tvar c = blob.read_shift(2);\r\n\tvar C = blob.read_shift(2);\r\n\tvar rt = PtgListRT[(flags >> 2) & 0x1F];\r\n\treturn {ixti: ixti, coltype:(flags&0x3), rt:rt, idx:idx, c:c, C:C};\r\n}\r\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\r\nfunction parse_PtgSxName(blob) {\r\n\tblob.l += 2;\r\n\treturn [blob.read_shift(4)];\r\n}\r\n\r\n/* [XLS] old spec */\r\nfunction parse_PtgSheet(blob, length, opts) {\r\n\tblob.l += 5;\r\n\tblob.l += 2;\r\n\tblob.l += (opts.biff == 2 ? 1 : 4);\r\n\treturn [\"PTGSHEET\"];\r\n}\r\nfunction parse_PtgEndSheet(blob, length, opts) {\r\n\tblob.l += (opts.biff == 2 ? 4 : 5);\r\n\treturn [\"PTGENDSHEET\"];\r\n}\r\nfunction parse_PtgMemAreaN(blob) {\r\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\r\n\tvar cce = blob.read_shift(2);\r\n\treturn [type, cce];\r\n}\r\nfunction parse_PtgMemNoMemN(blob) {\r\n\tvar type = (blob.read_shift(1) >>> 5) & 0x03;\r\n\tvar cce = blob.read_shift(2);\r\n\treturn [type, cce];\r\n}\r\nfunction parse_PtgAttrNoop(blob) {\r\n\tblob.l += 4;\r\n\treturn [0, 0];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\r\nvar PtgTypes = {\r\n0x01: { n:'PtgExp', f:parse_PtgExp },\r\n0x02: { n:'PtgTbl', f:parse_PtgTbl },\r\n0x03: { n:'PtgAdd', f:parseread1 },\r\n0x04: { n:'PtgSub', f:parseread1 },\r\n0x05: { n:'PtgMul', f:parseread1 },\r\n0x06: { n:'PtgDiv', f:parseread1 },\r\n0x07: { n:'PtgPower', f:parseread1 },\r\n0x08: { n:'PtgConcat', f:parseread1 },\r\n0x09: { n:'PtgLt', f:parseread1 },\r\n0x0A: { n:'PtgLe', f:parseread1 },\r\n0x0B: { n:'PtgEq', f:parseread1 },\r\n0x0C: { n:'PtgGe', f:parseread1 },\r\n0x0D: { n:'PtgGt', f:parseread1 },\r\n0x0E: { n:'PtgNe', f:parseread1 },\r\n0x0F: { n:'PtgIsect', f:parseread1 },\r\n0x10: { n:'PtgUnion', f:parseread1 },\r\n0x11: { n:'PtgRange', f:parseread1 },\r\n0x12: { n:'PtgUplus', f:parseread1 },\r\n0x13: { n:'PtgUminus', f:parseread1 },\r\n0x14: { n:'PtgPercent', f:parseread1 },\r\n0x15: { n:'PtgParen', f:parseread1 },\r\n0x16: { n:'PtgMissArg', f:parseread1 },\r\n0x17: { n:'PtgStr', f:parse_PtgStr },\r\n0x1A: { n:'PtgSheet', f:parse_PtgSheet },\r\n0x1B: { n:'PtgEndSheet', f:parse_PtgEndSheet },\r\n0x1C: { n:'PtgErr', f:parse_PtgErr },\r\n0x1D: { n:'PtgBool', f:parse_PtgBool },\r\n0x1E: { n:'PtgInt', f:parse_PtgInt },\r\n0x1F: { n:'PtgNum', f:parse_PtgNum },\r\n0x20: { n:'PtgArray', f:parse_PtgArray },\r\n0x21: { n:'PtgFunc', f:parse_PtgFunc },\r\n0x22: { n:'PtgFuncVar', f:parse_PtgFuncVar },\r\n0x23: { n:'PtgName', f:parse_PtgName },\r\n0x24: { n:'PtgRef', f:parse_PtgRef },\r\n0x25: { n:'PtgArea', f:parse_PtgArea },\r\n0x26: { n:'PtgMemArea', f:parse_PtgMemArea },\r\n0x27: { n:'PtgMemErr', f:parse_PtgMemErr },\r\n0x28: { n:'PtgMemNoMem', f:parse_PtgMemNoMem },\r\n0x29: { n:'PtgMemFunc', f:parse_PtgMemFunc },\r\n0x2A: { n:'PtgRefErr', f:parse_PtgRefErr },\r\n0x2B: { n:'PtgAreaErr', f:parse_PtgAreaErr },\r\n0x2C: { n:'PtgRefN', f:parse_PtgRefN },\r\n0x2D: { n:'PtgAreaN', f:parse_PtgAreaN },\r\n0x2E: { n:'PtgMemAreaN', f:parse_PtgMemAreaN },\r\n0x2F: { n:'PtgMemNoMemN', f:parse_PtgMemNoMemN },\r\n0x39: { n:'PtgNameX', f:parse_PtgNameX },\r\n0x3A: { n:'PtgRef3d', f:parse_PtgRef3d },\r\n0x3B: { n:'PtgArea3d', f:parse_PtgArea3d },\r\n0x3C: { n:'PtgRefErr3d', f:parse_PtgRefErr3d },\r\n0x3D: { n:'PtgAreaErr3d', f:parse_PtgAreaErr3d },\r\n0xFF: {}\r\n};\r\n/* These are duplicated in the PtgTypes table */\r\nvar PtgDupes = {\r\n0x40: 0x20, 0x60: 0x20,\r\n0x41: 0x21, 0x61: 0x21,\r\n0x42: 0x22, 0x62: 0x22,\r\n0x43: 0x23, 0x63: 0x23,\r\n0x44: 0x24, 0x64: 0x24,\r\n0x45: 0x25, 0x65: 0x25,\r\n0x46: 0x26, 0x66: 0x26,\r\n0x47: 0x27, 0x67: 0x27,\r\n0x48: 0x28, 0x68: 0x28,\r\n0x49: 0x29, 0x69: 0x29,\r\n0x4A: 0x2A, 0x6A: 0x2A,\r\n0x4B: 0x2B, 0x6B: 0x2B,\r\n0x4C: 0x2C, 0x6C: 0x2C,\r\n0x4D: 0x2D, 0x6D: 0x2D,\r\n0x4E: 0x2E, 0x6E: 0x2E,\r\n0x4F: 0x2F, 0x6F: 0x2F,\r\n0x58: 0x22, 0x78: 0x22,\r\n0x59: 0x39, 0x79: 0x39,\r\n0x5A: 0x3A, 0x7A: 0x3A,\r\n0x5B: 0x3B, 0x7B: 0x3B,\r\n0x5C: 0x3C, 0x7C: 0x3C,\r\n0x5D: 0x3D, 0x7D: 0x3D\r\n};\r\n(function(){for(var y in PtgDupes) PtgTypes[y] = PtgTypes[PtgDupes[y]];})();\r\n\r\nvar Ptg18 = {\r\n0x01: { n:'PtgElfLel', f:parse_PtgElfLel },\r\n0x02: { n:'PtgElfRw', f:parse_PtgElfRw },\r\n0x03: { n:'PtgElfCol', f:parse_PtgElfCol },\r\n0x06: { n:'PtgElfRwV', f:parse_PtgElfRwV },\r\n0x07: { n:'PtgElfColV', f:parse_PtgElfColV },\r\n0x0A: { n:'PtgElfRadical', f:parse_PtgElfRadical },\r\n0x0B: { n:'PtgElfRadicalS', f:parse_PtgElfRadicalS },\r\n0x0D: { n:'PtgElfColS', f:parse_PtgElfColS },\r\n0x0F: { n:'PtgElfColSV', f:parse_PtgElfColSV },\r\n0x10: { n:'PtgElfRadicalLel', f:parse_PtgElfRadicalLel },\r\n0x19: { n:'PtgList', f:parse_PtgList },\r\n0x1D: { n:'PtgSxName', f:parse_PtgSxName },\r\n0xFF: {}\r\n};\r\nvar Ptg19 = {\r\n0x00: { n:'PtgAttrNoop', f:parse_PtgAttrNoop },\r\n0x01: { n:'PtgAttrSemi', f:parse_PtgAttrSemi },\r\n0x02: { n:'PtgAttrIf', f:parse_PtgAttrIf },\r\n0x04: { n:'PtgAttrChoose', f:parse_PtgAttrChoose },\r\n0x08: { n:'PtgAttrGoto', f:parse_PtgAttrGoto },\r\n0x10: { n:'PtgAttrSum', f:parse_PtgAttrSum },\r\n0x20: { n:'PtgAttrBaxcel', f:parse_PtgAttrBaxcel },\r\n0x40: { n:'PtgAttrSpace', f:parse_PtgAttrSpace },\r\n0x41: { n:'PtgAttrSpaceSemi', f:parse_PtgAttrSpaceSemi },\r\n0x80: { n:'PtgAttrIfError', f:parse_PtgAttrIfError },\r\n0xFF: {}\r\n};\r\nPtg19[0x21] = Ptg19[0x20];\r\n\r\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\r\nfunction parse_RgbExtra(blob, length, rgce, opts) {\r\n\tif(opts.biff < 8) return parsenoop(blob, length);\r\n\tvar target = blob.l + length;\r\n\tvar o = [];\r\n\tfor(var i = 0; i !== rgce.length; ++i) {\r\n\t\tswitch(rgce[i][0]) {\r\n\t\t\tcase 'PtgArray': /* PtgArray -> PtgExtraArray */\r\n\t\t\t\trgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\r\n\t\t\t\to.push(rgce[i][1]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgMemArea': /* PtgMemArea -> PtgExtraMem */\r\n\t\t\t\trgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\r\n\t\t\t\to.push(rgce[i][2]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgExp': /* PtgExp -> PtgExtraCol */\r\n\t\t\t\tif(opts && opts.biff == 12) {\r\n\t\t\t\t\trgce[i][1][1] = blob.read_shift(4);\r\n\t\t\t\t\to.push(rgce[i][1]);\r\n\t\t\t\t} break;\r\n\t\t\tcase 'PtgList': /* TODO: PtgList -> PtgExtraList */\r\n\t\t\tcase 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\r\n\t\t\tcase 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\r\n\t\t\tcase 'PtgElfColSV': /* TODO: PtgElfColSV -> PtgExtraElf */\r\n\t\t\t\tthrow \"Unsupported \" + rgce[i][0];\r\n\t\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\tlength = target - blob.l;\r\n\t/* note: this is technically an error but Excel disregards */\r\n\t//if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\r\n\tif(length !== 0) o.push(parsenoop(blob, length));\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\r\nfunction parse_Rgce(blob, length, opts) {\r\n\tvar target = blob.l + length;\r\n\tvar R, id, ptgs = [];\r\n\twhile(target != blob.l) {\r\n\t\tlength = target - blob.l;\r\n\t\tid = blob[blob.l];\r\n\t\tR = PtgTypes[id];\r\n\t\tif(id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\r\n\t\tif(!R || !R.f) { /*ptgs.push*/(parsenoop(blob, length)); }\r\n\t\telse { ptgs.push([R.n, R.f(blob, length, opts)]); }\r\n\t}\r\n\treturn ptgs;\r\n}\r\n\r\nfunction stringify_array(f) {\r\n\tvar o = [];\r\n\tfor(var i = 0; i < f.length; ++i) {\r\n\t\tvar x = f[i], r = [];\r\n\t\tfor(var j = 0; j < x.length; ++j) {\r\n\t\t\tvar y = x[j];\r\n\t\t\tif(y) switch(y[0]) {\r\n\t\t\t\t// TODO: handle embedded quotes\r\n\t\t\t\tcase 0x02:\r\nr.push('\"' + y[1].replace(/\"/g,'\"\"') + '\"'); break;\r\n\t\t\t\tdefault: r.push(y[1]);\r\n\t\t\t} else r.push(\"\");\r\n\t\t}\r\n\t\to.push(r.join(\",\"));\r\n\t}\r\n\treturn o.join(\";\");\r\n}\r\n\r\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\r\nvar PtgBinOp = {\r\n\tPtgAdd: \"+\",\r\n\tPtgConcat: \"&\",\r\n\tPtgDiv: \"/\",\r\n\tPtgEq: \"=\",\r\n\tPtgGe: \">=\",\r\n\tPtgGt: \">\",\r\n\tPtgLe: \"<=\",\r\n\tPtgLt: \"<\",\r\n\tPtgMul: \"*\",\r\n\tPtgNe: \"<>\",\r\n\tPtgPower: \"^\",\r\n\tPtgSub: \"-\"\r\n};\r\nfunction formula_quote_sheet_name(sname, opts) {\r\n\tif(!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\r\n\tif(sname.indexOf(\" \") > -1) return \"'\" + sname + \"'\";\r\n\treturn sname;\r\n}\r\nfunction get_ixti_raw(supbooks, ixti, opts) {\r\n\tif(!supbooks) return \"SH33TJSERR0\";\r\n\tif(!supbooks.XTI) return \"SH33TJSERR6\";\r\n\tvar XTI = supbooks.XTI[ixti];\r\n\tif(opts.biff > 8 && !supbooks.XTI[ixti]) return supbooks.SheetNames[ixti];\r\n\tif(opts.biff < 8) {\r\n\t\tif(ixti > 10000) ixti-= 65536;\r\n\t\tif(ixti < 0) ixti = -ixti;\r\n\t\treturn ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\r\n\t}\r\n\tif(!XTI) return \"SH33TJSERR1\";\r\n\tvar o = \"\";\r\n\tif(opts.biff > 8) switch(supbooks[XTI[0]][0]) {\r\n\t\tcase 0x0165: /* 'BrtSupSelf' */\r\n\t\t\to = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\r\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\r\n\t\tcase 0x0166: /* 'BrtSupSame' */\r\n\t\t\tif(opts.SID != null) return supbooks.SheetNames[opts.SID];\r\n\t\t\treturn \"SH33TJSSAME\" + supbooks[XTI[0]][0];\r\n\t\tcase 0x0163: /* 'BrtSupBookSrc' */\r\n\t\t\t/* falls through */\r\n\t\tdefault: return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\r\n\t}\r\n\tswitch(supbooks[XTI[0]][0][0]) {\r\n\t\tcase 0x0401:\r\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\");\r\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\r\n\t\tcase 0x3A01: return \"SH33TJSERR8\";\r\n\t\tdefault:\r\n\t\t\tif(!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\r\n\t\t\to = XTI[1] == -1 ? \"#REF\" : (supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\");\r\n\t\t\treturn XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\r\n\t}\r\n}\r\nfunction get_ixti(supbooks, ixti, opts) {\r\n\treturn formula_quote_sheet_name(get_ixti_raw(supbooks, ixti, opts), opts);\r\n}\r\nfunction stringify_formula(formula/*Array<any>*/, range, cell, supbooks, opts) {\r\n\tvar biff = (opts && opts.biff) || 8;\r\n\tvar _range = /*range != null ? range :*/ {s:{c:0, r:0},e:{c:0, r:0}};\r\n\tvar stack = [], e1, e2,  c, ixti=0, nameidx=0, r, sname=\"\";\r\n\tif(!formula[0] || !formula[0][0]) return \"\";\r\n\tvar last_sp = -1, sp = \"\";\r\n\tfor(var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\r\n\t\tvar f = formula[0][ff];\r\n\t\tswitch(f[0]) {\r\n\t\t\tcase 'PtgUminus': /* [MS-XLS] 2.5.198.93 */\r\n\t\t\t\tstack.push(\"-\" + stack.pop()); break;\r\n\t\t\tcase 'PtgUplus': /* [MS-XLS] 2.5.198.95 */\r\n\t\t\t\tstack.push(\"+\" + stack.pop()); break;\r\n\t\t\tcase 'PtgPercent': /* [MS-XLS] 2.5.198.81 */\r\n\t\t\t\tstack.push(stack.pop() + \"%\"); break;\r\n\r\n\t\t\tcase 'PtgAdd':    /* [MS-XLS] 2.5.198.26 */\r\n\t\t\tcase 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\r\n\t\t\tcase 'PtgDiv':    /* [MS-XLS] 2.5.198.45 */\r\n\t\t\tcase 'PtgEq':     /* [MS-XLS] 2.5.198.56 */\r\n\t\t\tcase 'PtgGe':     /* [MS-XLS] 2.5.198.64 */\r\n\t\t\tcase 'PtgGt':     /* [MS-XLS] 2.5.198.65 */\r\n\t\t\tcase 'PtgLe':     /* [MS-XLS] 2.5.198.68 */\r\n\t\t\tcase 'PtgLt':     /* [MS-XLS] 2.5.198.69 */\r\n\t\t\tcase 'PtgMul':    /* [MS-XLS] 2.5.198.75 */\r\n\t\t\tcase 'PtgNe':     /* [MS-XLS] 2.5.198.78 */\r\n\t\t\tcase 'PtgPower':  /* [MS-XLS] 2.5.198.82 */\r\n\t\t\tcase 'PtgSub':    /* [MS-XLS] 2.5.198.90 */\r\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\r\n\t\t\t\tif(last_sp >= 0) {\r\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\t\t\tsp = fill(\" \", formula[0][last_sp][1][1]); break;\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\t\t\tsp = fill(\"\\r\", formula[0][last_sp][1][1]); break;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tsp = \"\";\r\n\t\t\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\te2 = e2 + sp;\r\n\t\t\t\t\tlast_sp = -1;\r\n\t\t\t\t}\r\n\t\t\t\tstack.push(e2+PtgBinOp[f[0]]+e1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgIsect': /* [MS-XLS] 2.5.198.67 */\r\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\r\n\t\t\t\tstack.push(e2+\" \"+e1);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgUnion': /* [MS-XLS] 2.5.198.94 */\r\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\r\n\t\t\t\tstack.push(e2+\",\"+e1);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgRange': /* [MS-XLS] 2.5.198.83 */\r\n\t\t\t\te1 = stack.pop(); e2 = stack.pop();\r\n\t\t\t\tstack.push(e2+\":\"+e1);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgAttrChoose': /* [MS-XLS] 2.5.198.34 */\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgAttrGoto': /* [MS-XLS] 2.5.198.35 */\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgAttrIf': /* [MS-XLS] 2.5.198.36 */\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgAttrIfError': /* [MS-XLSB] 2.5.97.28 */\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tcase 'PtgRef': /* [MS-XLS] 2.5.198.84 */\r\nc = shift_cell_xls((f[1][1]), _range, opts);\r\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgRefN': /* [MS-XLS] 2.5.198.88 */\r\nc = cell ? shift_cell_xls((f[1][1]), cell, opts) : (f[1][1]);\r\n\t\t\t\tstack.push(encode_cell_xls(c, biff));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgRef3d': /* [MS-XLS] 2.5.198.85 */\r\nixti = f[1][1]; c = shift_cell_xls((f[1][2]), _range, opts);\r\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\r\n\t\t\t\tvar w = sname; /* IE9 fails on defined names */ // eslint-disable-line no-unused-vars\r\n\t\t\t\tstack.push(sname + \"!\" + encode_cell_xls(c, biff));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\r\n\t\t\tcase 'PtgFuncVar': /* [MS-XLS] 2.5.198.63 */\r\n\t\t\t\t/* f[1] = [argc, func, type] */\r\n\t\t\t\tvar argc = (f[1][0]), func = (f[1][1]);\r\n\t\t\t\tif(!argc) argc = 0;\r\n\t\t\t\targc &= 0x7F;\r\n\t\t\t\tvar args = argc == 0 ? [] : stack.slice(-argc);\r\n\t\t\t\tstack.length -= argc;\r\n\t\t\t\tif(func === 'User') func = args.shift();\r\n\t\t\t\tstack.push(func + \"(\" + args.join(\",\") + \")\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgBool': /* [MS-XLS] 2.5.198.42 */\r\n\t\t\t\tstack.push(f[1] ? \"TRUE\" : \"FALSE\"); break;\r\n\t\t\tcase 'PtgInt': /* [MS-XLS] 2.5.198.66 */\r\n\t\t\t\tstack.push(f[1]); break;\r\n\t\t\tcase 'PtgNum': /* [MS-XLS] 2.5.198.79 TODO: precision? */\r\n\t\t\t\tstack.push(String(f[1])); break;\r\n\t\t\tcase 'PtgStr': /* [MS-XLS] 2.5.198.89 */\r\n\t\t\t\t// $FlowIgnore\r\n\t\t\t\tstack.push('\"' + f[1] + '\"'); break;\r\n\t\t\tcase 'PtgErr': /* [MS-XLS] 2.5.198.57 */\r\n\t\t\t\tstack.push(f[1]); break;\r\n\t\t\tcase 'PtgAreaN': /* [MS-XLS] 2.5.198.31 TODO */\r\nr = shift_range_xls(f[1][1], cell ? {s:cell} : _range, opts);\r\n\t\t\t\tstack.push(encode_range_xls((r), opts));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgArea': /* [MS-XLS] 2.5.198.27 TODO: fixed points */\r\nr = shift_range_xls(f[1][1], _range, opts);\r\n\t\t\t\tstack.push(encode_range_xls((r), opts));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgArea3d': /* [MS-XLS] 2.5.198.28 TODO */\r\nixti = f[1][1]; r = f[1][2];\r\n\t\t\t\tsname = get_ixti(supbooks, ixti, opts);\r\n\t\t\t\tstack.push(sname + \"!\" + encode_range_xls((r), opts));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgAttrSum': /* [MS-XLS] 2.5.198.41 */\r\n\t\t\t\tstack.push(\"SUM(\" + stack.pop() + \")\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\r\n\t\t\tcase 'PtgAttrSemi': /* [MS-XLS] 2.5.198.37 */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgName': /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\r\n\t\t\t\t/* f[1] = type, 0, nameindex */\r\n\t\t\t\tnameidx = (f[1][2]);\r\n\t\t\t\tvar lbl = (supbooks.names||[])[nameidx-1] || (supbooks[0]||[])[nameidx];\r\n\t\t\t\tvar name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\r\n\t\t\t\tif(name in XLSXFutureFunctions) name = XLSXFutureFunctions[name];\r\n\t\t\t\tstack.push(name);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgNameX': /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\r\n\t\t\t\t/* f[1] = type, ixti, nameindex */\r\n\t\t\t\tvar bookidx = (f[1][1]); nameidx = (f[1][2]); var externbook;\r\n\t\t\t\t/* TODO: Properly handle missing values */\r\n\t\t\t\tif(opts.biff <= 5) {\r\n\t\t\t\t\tif(bookidx < 0) bookidx = -bookidx;\r\n\t\t\t\t\tif(supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar o = \"\";\r\n\t\t\t\t\tif(((supbooks[bookidx]||[])[0]||[])[0] == 0x3A01){/* empty */}\r\n\t\t\t\t\telse if(((supbooks[bookidx]||[])[0]||[])[0] == 0x0401){\r\n\t\t\t\t\t\tif(supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\r\n\t\t\t\t\t\t\to = supbooks.SheetNames[supbooks[bookidx][nameidx].itab-1] + \"!\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse o = supbooks.SheetNames[nameidx-1]+ \"!\";\r\n\t\t\t\t\tif(supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;\r\n\t\t\t\t\telse if(supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;\r\n\t\t\t\t\telse o += \"SH33TJSERRX\";\r\n\t\t\t\t\tstack.push(o);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif(!externbook) externbook = {Name: \"SH33TJSERRY\"};\r\n\t\t\t\tstack.push(externbook.Name);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgParen': /* [MS-XLS] 2.5.198.80 */\r\n\t\t\t\tvar lp = '(', rp = ')';\r\n\t\t\t\tif(last_sp >= 0) {\r\n\t\t\t\t\tsp = \"\";\r\n\t\t\t\t\tswitch(formula[0][last_sp][1][0]) {\r\n\t\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\t\tcase 2: lp = fill(\" \", formula[0][last_sp][1][1]) + lp; break;\r\n\t\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\t\tcase 3: lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp; break;\r\n\t\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\t\tcase 4: rp = fill(\" \", formula[0][last_sp][1][1]) + rp; break;\r\n\t\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\t\tcase 5: rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp; break;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlast_sp = -1;\r\n\t\t\t\t}\r\n\t\t\t\tstack.push(lp + stack.pop() + rp); break;\r\n\r\n\t\t\tcase 'PtgRefErr': /* [MS-XLS] 2.5.198.86 */\r\n\t\t\t\tstack.push('#REF!'); break;\r\n\r\n\t\t\tcase 'PtgRefErr3d': /* [MS-XLS] 2.5.198.87 */\r\n\t\t\t\tstack.push('#REF!'); break;\r\n\r\n\t\t\tcase 'PtgExp': /* [MS-XLS] 2.5.198.58 TODO */\r\n\t\t\t\tc = {c:(f[1][1]),r:(f[1][0])};\r\n\t\t\t\tvar q = ({c: cell.c, r:cell.r});\r\n\t\t\t\tif(supbooks.sharedf[encode_cell(c)]) {\r\n\t\t\t\t\tvar parsedf = (supbooks.sharedf[encode_cell(c)]);\r\n\t\t\t\t\tstack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar fnd = false;\r\n\t\t\t\t\tfor(e1=0;e1!=supbooks.arrayf.length; ++e1) {\r\n\t\t\t\t\t\t/* TODO: should be something like range_has */\r\n\t\t\t\t\t\te2 = supbooks.arrayf[e1];\r\n\t\t\t\t\t\tif(c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\r\n\t\t\t\t\t\tif(c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\r\n\t\t\t\t\t\tstack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\r\n\t\t\t\t\t\tfnd = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!fnd) stack.push(f[1]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgArray': /* [MS-XLS] 2.5.198.32 TODO */\r\n\t\t\t\tstack.push(\"{\" + stringify_array(f[1]) + \"}\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgMemArea': /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\r\n\t\t\t\t//stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\r\n\t\t\tcase 'PtgAttrSpaceSemi': /* [MS-XLS] 2.5.198.39 */\r\n\t\t\t\tlast_sp = ff;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgTbl': /* [MS-XLS] 2.5.198.92 TODO */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgMemErr': /* [MS-XLS] 2.5.198.71 */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgMissArg': /* [MS-XLS] 2.5.198.74 */\r\n\t\t\t\tstack.push(\"\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgAreaErr': /* [MS-XLS] 2.5.198.29 */\r\n\t\t\t\tstack.push(\"#REF!\"); break;\r\n\r\n\t\t\tcase 'PtgAreaErr3d': /* [MS-XLS] 2.5.198.30 */\r\n\t\t\t\tstack.push(\"#REF!\"); break;\r\n\r\n\t\t\tcase 'PtgList': /* [MS-XLSB] 2.5.97.52 */\r\n\t\t\t\t// $FlowIgnore\r\n\t\t\t\tstack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgMemAreaN':\r\n\t\t\tcase 'PtgMemNoMemN':\r\n\t\t\tcase 'PtgAttrNoop':\r\n\t\t\tcase 'PtgSheet':\r\n\t\t\tcase 'PtgEndSheet':\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgMemFunc': /* [MS-XLS] 2.5.198.72 TODO */\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PtgMemNoMem': /* [MS-XLS] 2.5.198.73 TODO */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\r\n\t\t\tcase 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\r\n\t\t\tcase 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\r\n\t\t\tcase 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\r\n\t\t\tcase 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\r\n\t\t\tcase 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\r\n\t\t\tcase 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\r\n\t\t\tcase 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\r\n\t\t\tcase 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\r\n\t\t\tcase 'PtgElfRwV': /* [MS-XLS] 2.5.198.55 */\r\n\t\t\t\tthrow new Error(\"Unsupported ELFs\");\r\n\r\n\t\t\tcase 'PtgSxName': /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\r\n\t\t\t\tthrow new Error('Unrecognized Formula Token: ' + String(f));\r\n\t\t\tdefault: throw new Error('Unrecognized Formula Token: ' + String(f));\r\n\t\t}\r\n\t\tvar PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\r\n\t\tif(opts.biff != 3) if(last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\r\n\t\t\tf = formula[0][last_sp];\r\n\t\t\tvar _left = true;\r\n\t\t\tswitch(f[1][0]) {\r\n\t\t\t\t/* note: some bad XLSB files omit the PtgParen */\r\n\t\t\t\tcase 4: _left = false;\r\n\t\t\t\t/* falls through */\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\tsp = fill(\" \", f[1][1]); break;\r\n\t\t\t\tcase 5: _left = false;\r\n\t\t\t\t/* falls through */\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\tsp = fill(\"\\r\", f[1][1]); break;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tsp = \"\";\r\n\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\tif(opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\r\n\t\t\t}\r\n\t\t\tstack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\r\n\t\t\tlast_sp = -1;\r\n\t\t}\r\n\t}\r\n\tif(stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\r\n\treturn stack[0];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.1 TODO */\r\nfunction parse_ArrayParsedFormula(blob, length, opts) {\r\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\r\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\r\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\r\n\tvar rgce = parse_Rgce(blob, cce, opts);\r\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\r\n\tblob.l = target;\r\n\treturn [rgce, rgcb];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.3 TODO */\r\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\r\n\tvar target = blob.l + length, len = opts.biff == 2 ? 1 : 2;\r\n\tvar rgcb, cce = blob.read_shift(len); // length of rgce\r\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\r\n\tvar rgce = parse_Rgce(blob, cce, opts);\r\n\tif(length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\r\n\tblob.l = target;\r\n\treturn [rgce, rgcb];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.21 */\r\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\r\n\tvar target = blob.l + length;\r\n\tvar rgce = parse_Rgce(blob, cce, opts);\r\n\tvar rgcb;\r\n\tif(target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\r\n\treturn [rgce, rgcb];\r\n}\r\n\r\n/* [MS-XLS] 2.5.198.118 TODO */\r\nfunction parse_SharedParsedFormula(blob, length, opts) {\r\n\tvar target = blob.l + length;\r\n\tvar rgcb, cce = blob.read_shift(2); // length of rgce\r\n\tvar rgce = parse_Rgce(blob, cce, opts);\r\n\tif(cce == 0xFFFF) return [[],parsenoop(blob, length-2)];\r\n\tif(length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\r\n\treturn [rgce, rgcb];\r\n}\r\n\r\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\r\nfunction parse_FormulaValue(blob) {\r\n\tvar b;\r\n\tif(__readUInt16LE(blob,blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob),'n'];\r\n\tswitch(blob[blob.l]) {\r\n\t\tcase 0x00: blob.l += 8; return [\"String\", 's'];\r\n\t\tcase 0x01: b = blob[blob.l+2] === 0x1; blob.l += 8; return [b,'b'];\r\n\t\tcase 0x02: b = blob[blob.l+2]; blob.l += 8; return [b,'e'];\r\n\t\tcase 0x03: blob.l += 8; return [\"\",'s'];\r\n\t}\r\n\treturn [];\r\n}\r\n\r\n/* [MS-XLS] 2.4.127 TODO */\r\nfunction parse_Formula(blob, length, opts) {\r\n\tvar end = blob.l + length;\r\n\tvar cell = parse_XLSCell(blob, 6);\r\n\tif(opts.biff == 2) ++blob.l;\r\n\tvar val = parse_FormulaValue(blob,8);\r\n\tvar flags = blob.read_shift(1);\r\n\tif(opts.biff != 2) {\r\n\t\tblob.read_shift(1);\r\n\t\tif(opts.biff >= 5) {\r\n\t\t\t/*var chn = */blob.read_shift(4);\r\n\t\t}\r\n\t}\r\n\tvar cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\r\n\treturn {cell:cell, val:val[0], formula:cbf, shared: (flags >> 3) & 1, tt:val[1]};\r\n}\r\n\r\n/* XLSB Parsed Formula records have the same shape */\r\nfunction parse_XLSBParsedFormula(data, length, opts) {\r\n\tvar cce = data.read_shift(4);\r\n\tvar rgce = parse_Rgce(data, cce, opts);\r\n\tvar cb = data.read_shift(4);\r\n\tvar rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\r\n\treturn [rgce, rgcb];\r\n}\r\n\r\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\r\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\r\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\r\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\r\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\r\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\r\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\r\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\r\n/* [MS-XLS] 2.5.198.4 */\r\nvar Cetab = {\r\n0x0000: 'BEEP',\r\n0x0001: 'OPEN',\r\n0x0002: 'OPEN.LINKS',\r\n0x0003: 'CLOSE.ALL',\r\n0x0004: 'SAVE',\r\n0x0005: 'SAVE.AS',\r\n0x0006: 'FILE.DELETE',\r\n0x0007: 'PAGE.SETUP',\r\n0x0008: 'PRINT',\r\n0x0009: 'PRINTER.SETUP',\r\n0x000A: 'QUIT',\r\n0x000B: 'NEW.WINDOW',\r\n0x000C: 'ARRANGE.ALL',\r\n0x000D: 'WINDOW.SIZE',\r\n0x000E: 'WINDOW.MOVE',\r\n0x000F: 'FULL',\r\n0x0010: 'CLOSE',\r\n0x0011: 'RUN',\r\n0x0016: 'SET.PRINT.AREA',\r\n0x0017: 'SET.PRINT.TITLES',\r\n0x0018: 'SET.PAGE.BREAK',\r\n0x0019: 'REMOVE.PAGE.BREAK',\r\n0x001A: 'FONT',\r\n0x001B: 'DISPLAY',\r\n0x001C: 'PROTECT.DOCUMENT',\r\n0x001D: 'PRECISION',\r\n0x001E: 'A1.R1C1',\r\n0x001F: 'CALCULATE.NOW',\r\n0x0020: 'CALCULATION',\r\n0x0022: 'DATA.FIND',\r\n0x0023: 'EXTRACT',\r\n0x0024: 'DATA.DELETE',\r\n0x0025: 'SET.DATABASE',\r\n0x0026: 'SET.CRITERIA',\r\n0x0027: 'SORT',\r\n0x0028: 'DATA.SERIES',\r\n0x0029: 'TABLE',\r\n0x002A: 'FORMAT.NUMBER',\r\n0x002B: 'ALIGNMENT',\r\n0x002C: 'STYLE',\r\n0x002D: 'BORDER',\r\n0x002E: 'CELL.PROTECTION',\r\n0x002F: 'COLUMN.WIDTH',\r\n0x0030: 'UNDO',\r\n0x0031: 'CUT',\r\n0x0032: 'COPY',\r\n0x0033: 'PASTE',\r\n0x0034: 'CLEAR',\r\n0x0035: 'PASTE.SPECIAL',\r\n0x0036: 'EDIT.DELETE',\r\n0x0037: 'INSERT',\r\n0x0038: 'FILL.RIGHT',\r\n0x0039: 'FILL.DOWN',\r\n0x003D: 'DEFINE.NAME',\r\n0x003E: 'CREATE.NAMES',\r\n0x003F: 'FORMULA.GOTO',\r\n0x0040: 'FORMULA.FIND',\r\n0x0041: 'SELECT.LAST.CELL',\r\n0x0042: 'SHOW.ACTIVE.CELL',\r\n0x0043: 'GALLERY.AREA',\r\n0x0044: 'GALLERY.BAR',\r\n0x0045: 'GALLERY.COLUMN',\r\n0x0046: 'GALLERY.LINE',\r\n0x0047: 'GALLERY.PIE',\r\n0x0048: 'GALLERY.SCATTER',\r\n0x0049: 'COMBINATION',\r\n0x004A: 'PREFERRED',\r\n0x004B: 'ADD.OVERLAY',\r\n0x004C: 'GRIDLINES',\r\n0x004D: 'SET.PREFERRED',\r\n0x004E: 'AXES',\r\n0x004F: 'LEGEND',\r\n0x0050: 'ATTACH.TEXT',\r\n0x0051: 'ADD.ARROW',\r\n0x0052: 'SELECT.CHART',\r\n0x0053: 'SELECT.PLOT.AREA',\r\n0x0054: 'PATTERNS',\r\n0x0055: 'MAIN.CHART',\r\n0x0056: 'OVERLAY',\r\n0x0057: 'SCALE',\r\n0x0058: 'FORMAT.LEGEND',\r\n0x0059: 'FORMAT.TEXT',\r\n0x005A: 'EDIT.REPEAT',\r\n0x005B: 'PARSE',\r\n0x005C: 'JUSTIFY',\r\n0x005D: 'HIDE',\r\n0x005E: 'UNHIDE',\r\n0x005F: 'WORKSPACE',\r\n0x0060: 'FORMULA',\r\n0x0061: 'FORMULA.FILL',\r\n0x0062: 'FORMULA.ARRAY',\r\n0x0063: 'DATA.FIND.NEXT',\r\n0x0064: 'DATA.FIND.PREV',\r\n0x0065: 'FORMULA.FIND.NEXT',\r\n0x0066: 'FORMULA.FIND.PREV',\r\n0x0067: 'ACTIVATE',\r\n0x0068: 'ACTIVATE.NEXT',\r\n0x0069: 'ACTIVATE.PREV',\r\n0x006A: 'UNLOCKED.NEXT',\r\n0x006B: 'UNLOCKED.PREV',\r\n0x006C: 'COPY.PICTURE',\r\n0x006D: 'SELECT',\r\n0x006E: 'DELETE.NAME',\r\n0x006F: 'DELETE.FORMAT',\r\n0x0070: 'VLINE',\r\n0x0071: 'HLINE',\r\n0x0072: 'VPAGE',\r\n0x0073: 'HPAGE',\r\n0x0074: 'VSCROLL',\r\n0x0075: 'HSCROLL',\r\n0x0076: 'ALERT',\r\n0x0077: 'NEW',\r\n0x0078: 'CANCEL.COPY',\r\n0x0079: 'SHOW.CLIPBOARD',\r\n0x007A: 'MESSAGE',\r\n0x007C: 'PASTE.LINK',\r\n0x007D: 'APP.ACTIVATE',\r\n0x007E: 'DELETE.ARROW',\r\n0x007F: 'ROW.HEIGHT',\r\n0x0080: 'FORMAT.MOVE',\r\n0x0081: 'FORMAT.SIZE',\r\n0x0082: 'FORMULA.REPLACE',\r\n0x0083: 'SEND.KEYS',\r\n0x0084: 'SELECT.SPECIAL',\r\n0x0085: 'APPLY.NAMES',\r\n0x0086: 'REPLACE.FONT',\r\n0x0087: 'FREEZE.PANES',\r\n0x0088: 'SHOW.INFO',\r\n0x0089: 'SPLIT',\r\n0x008A: 'ON.WINDOW',\r\n0x008B: 'ON.DATA',\r\n0x008C: 'DISABLE.INPUT',\r\n0x008E: 'OUTLINE',\r\n0x008F: 'LIST.NAMES',\r\n0x0090: 'FILE.CLOSE',\r\n0x0091: 'SAVE.WORKBOOK',\r\n0x0092: 'DATA.FORM',\r\n0x0093: 'COPY.CHART',\r\n0x0094: 'ON.TIME',\r\n0x0095: 'WAIT',\r\n0x0096: 'FORMAT.FONT',\r\n0x0097: 'FILL.UP',\r\n0x0098: 'FILL.LEFT',\r\n0x0099: 'DELETE.OVERLAY',\r\n0x009B: 'SHORT.MENUS',\r\n0x009F: 'SET.UPDATE.STATUS',\r\n0x00A1: 'COLOR.PALETTE',\r\n0x00A2: 'DELETE.STYLE',\r\n0x00A3: 'WINDOW.RESTORE',\r\n0x00A4: 'WINDOW.MAXIMIZE',\r\n0x00A6: 'CHANGE.LINK',\r\n0x00A7: 'CALCULATE.DOCUMENT',\r\n0x00A8: 'ON.KEY',\r\n0x00A9: 'APP.RESTORE',\r\n0x00AA: 'APP.MOVE',\r\n0x00AB: 'APP.SIZE',\r\n0x00AC: 'APP.MINIMIZE',\r\n0x00AD: 'APP.MAXIMIZE',\r\n0x00AE: 'BRING.TO.FRONT',\r\n0x00AF: 'SEND.TO.BACK',\r\n0x00B9: 'MAIN.CHART.TYPE',\r\n0x00BA: 'OVERLAY.CHART.TYPE',\r\n0x00BB: 'SELECT.END',\r\n0x00BC: 'OPEN.MAIL',\r\n0x00BD: 'SEND.MAIL',\r\n0x00BE: 'STANDARD.FONT',\r\n0x00BF: 'CONSOLIDATE',\r\n0x00C0: 'SORT.SPECIAL',\r\n0x00C1: 'GALLERY.3D.AREA',\r\n0x00C2: 'GALLERY.3D.COLUMN',\r\n0x00C3: 'GALLERY.3D.LINE',\r\n0x00C4: 'GALLERY.3D.PIE',\r\n0x00C5: 'VIEW.3D',\r\n0x00C6: 'GOAL.SEEK',\r\n0x00C7: 'WORKGROUP',\r\n0x00C8: 'FILL.GROUP',\r\n0x00C9: 'UPDATE.LINK',\r\n0x00CA: 'PROMOTE',\r\n0x00CB: 'DEMOTE',\r\n0x00CC: 'SHOW.DETAIL',\r\n0x00CE: 'UNGROUP',\r\n0x00CF: 'OBJECT.PROPERTIES',\r\n0x00D0: 'SAVE.NEW.OBJECT',\r\n0x00D1: 'SHARE',\r\n0x00D2: 'SHARE.NAME',\r\n0x00D3: 'DUPLICATE',\r\n0x00D4: 'APPLY.STYLE',\r\n0x00D5: 'ASSIGN.TO.OBJECT',\r\n0x00D6: 'OBJECT.PROTECTION',\r\n0x00D7: 'HIDE.OBJECT',\r\n0x00D8: 'SET.EXTRACT',\r\n0x00D9: 'CREATE.PUBLISHER',\r\n0x00DA: 'SUBSCRIBE.TO',\r\n0x00DB: 'ATTRIBUTES',\r\n0x00DC: 'SHOW.TOOLBAR',\r\n0x00DE: 'PRINT.PREVIEW',\r\n0x00DF: 'EDIT.COLOR',\r\n0x00E0: 'SHOW.LEVELS',\r\n0x00E1: 'FORMAT.MAIN',\r\n0x00E2: 'FORMAT.OVERLAY',\r\n0x00E3: 'ON.RECALC',\r\n0x00E4: 'EDIT.SERIES',\r\n0x00E5: 'DEFINE.STYLE',\r\n0x00F0: 'LINE.PRINT',\r\n0x00F3: 'ENTER.DATA',\r\n0x00F9: 'GALLERY.RADAR',\r\n0x00FA: 'MERGE.STYLES',\r\n0x00FB: 'EDITION.OPTIONS',\r\n0x00FC: 'PASTE.PICTURE',\r\n0x00FD: 'PASTE.PICTURE.LINK',\r\n0x00FE: 'SPELLING',\r\n0x0100: 'ZOOM',\r\n0x0103: 'INSERT.OBJECT',\r\n0x0104: 'WINDOW.MINIMIZE',\r\n0x0109: 'SOUND.NOTE',\r\n0x010A: 'SOUND.PLAY',\r\n0x010B: 'FORMAT.SHAPE',\r\n0x010C: 'EXTEND.POLYGON',\r\n0x010D: 'FORMAT.AUTO',\r\n0x0110: 'GALLERY.3D.BAR',\r\n0x0111: 'GALLERY.3D.SURFACE',\r\n0x0112: 'FILL.AUTO',\r\n0x0114: 'CUSTOMIZE.TOOLBAR',\r\n0x0115: 'ADD.TOOL',\r\n0x0116: 'EDIT.OBJECT',\r\n0x0117: 'ON.DOUBLECLICK',\r\n0x0118: 'ON.ENTRY',\r\n0x0119: 'WORKBOOK.ADD',\r\n0x011A: 'WORKBOOK.MOVE',\r\n0x011B: 'WORKBOOK.COPY',\r\n0x011C: 'WORKBOOK.OPTIONS',\r\n0x011D: 'SAVE.WORKSPACE',\r\n0x0120: 'CHART.WIZARD',\r\n0x0121: 'DELETE.TOOL',\r\n0x0122: 'MOVE.TOOL',\r\n0x0123: 'WORKBOOK.SELECT',\r\n0x0124: 'WORKBOOK.ACTIVATE',\r\n0x0125: 'ASSIGN.TO.TOOL',\r\n0x0127: 'COPY.TOOL',\r\n0x0128: 'RESET.TOOL',\r\n0x0129: 'CONSTRAIN.NUMERIC',\r\n0x012A: 'PASTE.TOOL',\r\n0x012E: 'WORKBOOK.NEW',\r\n0x0131: 'SCENARIO.CELLS',\r\n0x0132: 'SCENARIO.DELETE',\r\n0x0133: 'SCENARIO.ADD',\r\n0x0134: 'SCENARIO.EDIT',\r\n0x0135: 'SCENARIO.SHOW',\r\n0x0136: 'SCENARIO.SHOW.NEXT',\r\n0x0137: 'SCENARIO.SUMMARY',\r\n0x0138: 'PIVOT.TABLE.WIZARD',\r\n0x0139: 'PIVOT.FIELD.PROPERTIES',\r\n0x013A: 'PIVOT.FIELD',\r\n0x013B: 'PIVOT.ITEM',\r\n0x013C: 'PIVOT.ADD.FIELDS',\r\n0x013E: 'OPTIONS.CALCULATION',\r\n0x013F: 'OPTIONS.EDIT',\r\n0x0140: 'OPTIONS.VIEW',\r\n0x0141: 'ADDIN.MANAGER',\r\n0x0142: 'MENU.EDITOR',\r\n0x0143: 'ATTACH.TOOLBARS',\r\n0x0144: 'VBAActivate',\r\n0x0145: 'OPTIONS.CHART',\r\n0x0148: 'VBA.INSERT.FILE',\r\n0x014A: 'VBA.PROCEDURE.DEFINITION',\r\n0x0150: 'ROUTING.SLIP',\r\n0x0152: 'ROUTE.DOCUMENT',\r\n0x0153: 'MAIL.LOGON',\r\n0x0156: 'INSERT.PICTURE',\r\n0x0157: 'EDIT.TOOL',\r\n0x0158: 'GALLERY.DOUGHNUT',\r\n0x015E: 'CHART.TREND',\r\n0x0160: 'PIVOT.ITEM.PROPERTIES',\r\n0x0162: 'WORKBOOK.INSERT',\r\n0x0163: 'OPTIONS.TRANSITION',\r\n0x0164: 'OPTIONS.GENERAL',\r\n0x0172: 'FILTER.ADVANCED',\r\n0x0175: 'MAIL.ADD.MAILER',\r\n0x0176: 'MAIL.DELETE.MAILER',\r\n0x0177: 'MAIL.REPLY',\r\n0x0178: 'MAIL.REPLY.ALL',\r\n0x0179: 'MAIL.FORWARD',\r\n0x017A: 'MAIL.NEXT.LETTER',\r\n0x017B: 'DATA.LABEL',\r\n0x017C: 'INSERT.TITLE',\r\n0x017D: 'FONT.PROPERTIES',\r\n0x017E: 'MACRO.OPTIONS',\r\n0x017F: 'WORKBOOK.HIDE',\r\n0x0180: 'WORKBOOK.UNHIDE',\r\n0x0181: 'WORKBOOK.DELETE',\r\n0x0182: 'WORKBOOK.NAME',\r\n0x0184: 'GALLERY.CUSTOM',\r\n0x0186: 'ADD.CHART.AUTOFORMAT',\r\n0x0187: 'DELETE.CHART.AUTOFORMAT',\r\n0x0188: 'CHART.ADD.DATA',\r\n0x0189: 'AUTO.OUTLINE',\r\n0x018A: 'TAB.ORDER',\r\n0x018B: 'SHOW.DIALOG',\r\n0x018C: 'SELECT.ALL',\r\n0x018D: 'UNGROUP.SHEETS',\r\n0x018E: 'SUBTOTAL.CREATE',\r\n0x018F: 'SUBTOTAL.REMOVE',\r\n0x0190: 'RENAME.OBJECT',\r\n0x019C: 'WORKBOOK.SCROLL',\r\n0x019D: 'WORKBOOK.NEXT',\r\n0x019E: 'WORKBOOK.PREV',\r\n0x019F: 'WORKBOOK.TAB.SPLIT',\r\n0x01A0: 'FULL.SCREEN',\r\n0x01A1: 'WORKBOOK.PROTECT',\r\n0x01A4: 'SCROLLBAR.PROPERTIES',\r\n0x01A5: 'PIVOT.SHOW.PAGES',\r\n0x01A6: 'TEXT.TO.COLUMNS',\r\n0x01A7: 'FORMAT.CHARTTYPE',\r\n0x01A8: 'LINK.FORMAT',\r\n0x01A9: 'TRACER.DISPLAY',\r\n0x01AE: 'TRACER.NAVIGATE',\r\n0x01AF: 'TRACER.CLEAR',\r\n0x01B0: 'TRACER.ERROR',\r\n0x01B1: 'PIVOT.FIELD.GROUP',\r\n0x01B2: 'PIVOT.FIELD.UNGROUP',\r\n0x01B3: 'CHECKBOX.PROPERTIES',\r\n0x01B4: 'LABEL.PROPERTIES',\r\n0x01B5: 'LISTBOX.PROPERTIES',\r\n0x01B6: 'EDITBOX.PROPERTIES',\r\n0x01B7: 'PIVOT.REFRESH',\r\n0x01B8: 'LINK.COMBO',\r\n0x01B9: 'OPEN.TEXT',\r\n0x01BA: 'HIDE.DIALOG',\r\n0x01BB: 'SET.DIALOG.FOCUS',\r\n0x01BC: 'ENABLE.OBJECT',\r\n0x01BD: 'PUSHBUTTON.PROPERTIES',\r\n0x01BE: 'SET.DIALOG.DEFAULT',\r\n0x01BF: 'FILTER',\r\n0x01C0: 'FILTER.SHOW.ALL',\r\n0x01C1: 'CLEAR.OUTLINE',\r\n0x01C2: 'FUNCTION.WIZARD',\r\n0x01C3: 'ADD.LIST.ITEM',\r\n0x01C4: 'SET.LIST.ITEM',\r\n0x01C5: 'REMOVE.LIST.ITEM',\r\n0x01C6: 'SELECT.LIST.ITEM',\r\n0x01C7: 'SET.CONTROL.VALUE',\r\n0x01C8: 'SAVE.COPY.AS',\r\n0x01CA: 'OPTIONS.LISTS.ADD',\r\n0x01CB: 'OPTIONS.LISTS.DELETE',\r\n0x01CC: 'SERIES.AXES',\r\n0x01CD: 'SERIES.X',\r\n0x01CE: 'SERIES.Y',\r\n0x01CF: 'ERRORBAR.X',\r\n0x01D0: 'ERRORBAR.Y',\r\n0x01D1: 'FORMAT.CHART',\r\n0x01D2: 'SERIES.ORDER',\r\n0x01D3: 'MAIL.LOGOFF',\r\n0x01D4: 'CLEAR.ROUTING.SLIP',\r\n0x01D5: 'APP.ACTIVATE.MICROSOFT',\r\n0x01D6: 'MAIL.EDIT.MAILER',\r\n0x01D7: 'ON.SHEET',\r\n0x01D8: 'STANDARD.WIDTH',\r\n0x01D9: 'SCENARIO.MERGE',\r\n0x01DA: 'SUMMARY.INFO',\r\n0x01DB: 'FIND.FILE',\r\n0x01DC: 'ACTIVE.CELL.FONT',\r\n0x01DD: 'ENABLE.TIPWIZARD',\r\n0x01DE: 'VBA.MAKE.ADDIN',\r\n0x01E0: 'INSERTDATATABLE',\r\n0x01E1: 'WORKGROUP.OPTIONS',\r\n0x01E2: 'MAIL.SEND.MAILER',\r\n0x01E5: 'AUTOCORRECT',\r\n0x01E9: 'POST.DOCUMENT',\r\n0x01EB: 'PICKLIST',\r\n0x01ED: 'VIEW.SHOW',\r\n0x01EE: 'VIEW.DEFINE',\r\n0x01EF: 'VIEW.DELETE',\r\n0x01FD: 'SHEET.BACKGROUND',\r\n0x01FE: 'INSERT.MAP.OBJECT',\r\n0x01FF: 'OPTIONS.MENONO',\r\n0x0205: 'MSOCHECKS',\r\n0x0206: 'NORMAL',\r\n0x0207: 'LAYOUT',\r\n0x0208: 'RM.PRINT.AREA',\r\n0x0209: 'CLEAR.PRINT.AREA',\r\n0x020A: 'ADD.PRINT.AREA',\r\n0x020B: 'MOVE.BRK',\r\n0x0221: 'HIDECURR.NOTE',\r\n0x0222: 'HIDEALL.NOTES',\r\n0x0223: 'DELETE.NOTE',\r\n0x0224: 'TRAVERSE.NOTES',\r\n0x0225: 'ACTIVATE.NOTES',\r\n0x026C: 'PROTECT.REVISIONS',\r\n0x026D: 'UNPROTECT.REVISIONS',\r\n0x0287: 'OPTIONS.ME',\r\n0x028D: 'WEB.PUBLISH',\r\n0x029B: 'NEWWEBQUERY',\r\n0x02A1: 'PIVOT.TABLE.CHART',\r\n0x02F1: 'OPTIONS.SAVE',\r\n0x02F3: 'OPTIONS.SPELL',\r\n0x0328: 'HIDEALL.INKANNOTS'\r\n};\r\n\r\n/* [MS-XLS] 2.5.198.17 */\r\n/* [MS-XLSB] 2.5.97.10 */\r\nvar Ftab = {\r\n0x0000: 'COUNT',\r\n0x0001: 'IF',\r\n0x0002: 'ISNA',\r\n0x0003: 'ISERROR',\r\n0x0004: 'SUM',\r\n0x0005: 'AVERAGE',\r\n0x0006: 'MIN',\r\n0x0007: 'MAX',\r\n0x0008: 'ROW',\r\n0x0009: 'COLUMN',\r\n0x000A: 'NA',\r\n0x000B: 'NPV',\r\n0x000C: 'STDEV',\r\n0x000D: 'DOLLAR',\r\n0x000E: 'FIXED',\r\n0x000F: 'SIN',\r\n0x0010: 'COS',\r\n0x0011: 'TAN',\r\n0x0012: 'ATAN',\r\n0x0013: 'PI',\r\n0x0014: 'SQRT',\r\n0x0015: 'EXP',\r\n0x0016: 'LN',\r\n0x0017: 'LOG10',\r\n0x0018: 'ABS',\r\n0x0019: 'INT',\r\n0x001A: 'SIGN',\r\n0x001B: 'ROUND',\r\n0x001C: 'LOOKUP',\r\n0x001D: 'INDEX',\r\n0x001E: 'REPT',\r\n0x001F: 'MID',\r\n0x0020: 'LEN',\r\n0x0021: 'VALUE',\r\n0x0022: 'TRUE',\r\n0x0023: 'FALSE',\r\n0x0024: 'AND',\r\n0x0025: 'OR',\r\n0x0026: 'NOT',\r\n0x0027: 'MOD',\r\n0x0028: 'DCOUNT',\r\n0x0029: 'DSUM',\r\n0x002A: 'DAVERAGE',\r\n0x002B: 'DMIN',\r\n0x002C: 'DMAX',\r\n0x002D: 'DSTDEV',\r\n0x002E: 'VAR',\r\n0x002F: 'DVAR',\r\n0x0030: 'TEXT',\r\n0x0031: 'LINEST',\r\n0x0032: 'TREND',\r\n0x0033: 'LOGEST',\r\n0x0034: 'GROWTH',\r\n0x0035: 'GOTO',\r\n0x0036: 'HALT',\r\n0x0037: 'RETURN',\r\n0x0038: 'PV',\r\n0x0039: 'FV',\r\n0x003A: 'NPER',\r\n0x003B: 'PMT',\r\n0x003C: 'RATE',\r\n0x003D: 'MIRR',\r\n0x003E: 'IRR',\r\n0x003F: 'RAND',\r\n0x0040: 'MATCH',\r\n0x0041: 'DATE',\r\n0x0042: 'TIME',\r\n0x0043: 'DAY',\r\n0x0044: 'MONTH',\r\n0x0045: 'YEAR',\r\n0x0046: 'WEEKDAY',\r\n0x0047: 'HOUR',\r\n0x0048: 'MINUTE',\r\n0x0049: 'SECOND',\r\n0x004A: 'NOW',\r\n0x004B: 'AREAS',\r\n0x004C: 'ROWS',\r\n0x004D: 'COLUMNS',\r\n0x004E: 'OFFSET',\r\n0x004F: 'ABSREF',\r\n0x0050: 'RELREF',\r\n0x0051: 'ARGUMENT',\r\n0x0052: 'SEARCH',\r\n0x0053: 'TRANSPOSE',\r\n0x0054: 'ERROR',\r\n0x0055: 'STEP',\r\n0x0056: 'TYPE',\r\n0x0057: 'ECHO',\r\n0x0058: 'SET.NAME',\r\n0x0059: 'CALLER',\r\n0x005A: 'DEREF',\r\n0x005B: 'WINDOWS',\r\n0x005C: 'SERIES',\r\n0x005D: 'DOCUMENTS',\r\n0x005E: 'ACTIVE.CELL',\r\n0x005F: 'SELECTION',\r\n0x0060: 'RESULT',\r\n0x0061: 'ATAN2',\r\n0x0062: 'ASIN',\r\n0x0063: 'ACOS',\r\n0x0064: 'CHOOSE',\r\n0x0065: 'HLOOKUP',\r\n0x0066: 'VLOOKUP',\r\n0x0067: 'LINKS',\r\n0x0068: 'INPUT',\r\n0x0069: 'ISREF',\r\n0x006A: 'GET.FORMULA',\r\n0x006B: 'GET.NAME',\r\n0x006C: 'SET.VALUE',\r\n0x006D: 'LOG',\r\n0x006E: 'EXEC',\r\n0x006F: 'CHAR',\r\n0x0070: 'LOWER',\r\n0x0071: 'UPPER',\r\n0x0072: 'PROPER',\r\n0x0073: 'LEFT',\r\n0x0074: 'RIGHT',\r\n0x0075: 'EXACT',\r\n0x0076: 'TRIM',\r\n0x0077: 'REPLACE',\r\n0x0078: 'SUBSTITUTE',\r\n0x0079: 'CODE',\r\n0x007A: 'NAMES',\r\n0x007B: 'DIRECTORY',\r\n0x007C: 'FIND',\r\n0x007D: 'CELL',\r\n0x007E: 'ISERR',\r\n0x007F: 'ISTEXT',\r\n0x0080: 'ISNUMBER',\r\n0x0081: 'ISBLANK',\r\n0x0082: 'T',\r\n0x0083: 'N',\r\n0x0084: 'FOPEN',\r\n0x0085: 'FCLOSE',\r\n0x0086: 'FSIZE',\r\n0x0087: 'FREADLN',\r\n0x0088: 'FREAD',\r\n0x0089: 'FWRITELN',\r\n0x008A: 'FWRITE',\r\n0x008B: 'FPOS',\r\n0x008C: 'DATEVALUE',\r\n0x008D: 'TIMEVALUE',\r\n0x008E: 'SLN',\r\n0x008F: 'SYD',\r\n0x0090: 'DDB',\r\n0x0091: 'GET.DEF',\r\n0x0092: 'REFTEXT',\r\n0x0093: 'TEXTREF',\r\n0x0094: 'INDIRECT',\r\n0x0095: 'REGISTER',\r\n0x0096: 'CALL',\r\n0x0097: 'ADD.BAR',\r\n0x0098: 'ADD.MENU',\r\n0x0099: 'ADD.COMMAND',\r\n0x009A: 'ENABLE.COMMAND',\r\n0x009B: 'CHECK.COMMAND',\r\n0x009C: 'RENAME.COMMAND',\r\n0x009D: 'SHOW.BAR',\r\n0x009E: 'DELETE.MENU',\r\n0x009F: 'DELETE.COMMAND',\r\n0x00A0: 'GET.CHART.ITEM',\r\n0x00A1: 'DIALOG.BOX',\r\n0x00A2: 'CLEAN',\r\n0x00A3: 'MDETERM',\r\n0x00A4: 'MINVERSE',\r\n0x00A5: 'MMULT',\r\n0x00A6: 'FILES',\r\n0x00A7: 'IPMT',\r\n0x00A8: 'PPMT',\r\n0x00A9: 'COUNTA',\r\n0x00AA: 'CANCEL.KEY',\r\n0x00AB: 'FOR',\r\n0x00AC: 'WHILE',\r\n0x00AD: 'BREAK',\r\n0x00AE: 'NEXT',\r\n0x00AF: 'INITIATE',\r\n0x00B0: 'REQUEST',\r\n0x00B1: 'POKE',\r\n0x00B2: 'EXECUTE',\r\n0x00B3: 'TERMINATE',\r\n0x00B4: 'RESTART',\r\n0x00B5: 'HELP',\r\n0x00B6: 'GET.BAR',\r\n0x00B7: 'PRODUCT',\r\n0x00B8: 'FACT',\r\n0x00B9: 'GET.CELL',\r\n0x00BA: 'GET.WORKSPACE',\r\n0x00BB: 'GET.WINDOW',\r\n0x00BC: 'GET.DOCUMENT',\r\n0x00BD: 'DPRODUCT',\r\n0x00BE: 'ISNONTEXT',\r\n0x00BF: 'GET.NOTE',\r\n0x00C0: 'NOTE',\r\n0x00C1: 'STDEVP',\r\n0x00C2: 'VARP',\r\n0x00C3: 'DSTDEVP',\r\n0x00C4: 'DVARP',\r\n0x00C5: 'TRUNC',\r\n0x00C6: 'ISLOGICAL',\r\n0x00C7: 'DCOUNTA',\r\n0x00C8: 'DELETE.BAR',\r\n0x00C9: 'UNREGISTER',\r\n0x00CC: 'USDOLLAR',\r\n0x00CD: 'FINDB',\r\n0x00CE: 'SEARCHB',\r\n0x00CF: 'REPLACEB',\r\n0x00D0: 'LEFTB',\r\n0x00D1: 'RIGHTB',\r\n0x00D2: 'MIDB',\r\n0x00D3: 'LENB',\r\n0x00D4: 'ROUNDUP',\r\n0x00D5: 'ROUNDDOWN',\r\n0x00D6: 'ASC',\r\n0x00D7: 'DBCS',\r\n0x00D8: 'RANK',\r\n0x00DB: 'ADDRESS',\r\n0x00DC: 'DAYS360',\r\n0x00DD: 'TODAY',\r\n0x00DE: 'VDB',\r\n0x00DF: 'ELSE',\r\n0x00E0: 'ELSE.IF',\r\n0x00E1: 'END.IF',\r\n0x00E2: 'FOR.CELL',\r\n0x00E3: 'MEDIAN',\r\n0x00E4: 'SUMPRODUCT',\r\n0x00E5: 'SINH',\r\n0x00E6: 'COSH',\r\n0x00E7: 'TANH',\r\n0x00E8: 'ASINH',\r\n0x00E9: 'ACOSH',\r\n0x00EA: 'ATANH',\r\n0x00EB: 'DGET',\r\n0x00EC: 'CREATE.OBJECT',\r\n0x00ED: 'VOLATILE',\r\n0x00EE: 'LAST.ERROR',\r\n0x00EF: 'CUSTOM.UNDO',\r\n0x00F0: 'CUSTOM.REPEAT',\r\n0x00F1: 'FORMULA.CONVERT',\r\n0x00F2: 'GET.LINK.INFO',\r\n0x00F3: 'TEXT.BOX',\r\n0x00F4: 'INFO',\r\n0x00F5: 'GROUP',\r\n0x00F6: 'GET.OBJECT',\r\n0x00F7: 'DB',\r\n0x00F8: 'PAUSE',\r\n0x00FB: 'RESUME',\r\n0x00FC: 'FREQUENCY',\r\n0x00FD: 'ADD.TOOLBAR',\r\n0x00FE: 'DELETE.TOOLBAR',\r\n0x00FF: 'User',\r\n0x0100: 'RESET.TOOLBAR',\r\n0x0101: 'EVALUATE',\r\n0x0102: 'GET.TOOLBAR',\r\n0x0103: 'GET.TOOL',\r\n0x0104: 'SPELLING.CHECK',\r\n0x0105: 'ERROR.TYPE',\r\n0x0106: 'APP.TITLE',\r\n0x0107: 'WINDOW.TITLE',\r\n0x0108: 'SAVE.TOOLBAR',\r\n0x0109: 'ENABLE.TOOL',\r\n0x010A: 'PRESS.TOOL',\r\n0x010B: 'REGISTER.ID',\r\n0x010C: 'GET.WORKBOOK',\r\n0x010D: 'AVEDEV',\r\n0x010E: 'BETADIST',\r\n0x010F: 'GAMMALN',\r\n0x0110: 'BETAINV',\r\n0x0111: 'BINOMDIST',\r\n0x0112: 'CHIDIST',\r\n0x0113: 'CHIINV',\r\n0x0114: 'COMBIN',\r\n0x0115: 'CONFIDENCE',\r\n0x0116: 'CRITBINOM',\r\n0x0117: 'EVEN',\r\n0x0118: 'EXPONDIST',\r\n0x0119: 'FDIST',\r\n0x011A: 'FINV',\r\n0x011B: 'FISHER',\r\n0x011C: 'FISHERINV',\r\n0x011D: 'FLOOR',\r\n0x011E: 'GAMMADIST',\r\n0x011F: 'GAMMAINV',\r\n0x0120: 'CEILING',\r\n0x0121: 'HYPGEOMDIST',\r\n0x0122: 'LOGNORMDIST',\r\n0x0123: 'LOGINV',\r\n0x0124: 'NEGBINOMDIST',\r\n0x0125: 'NORMDIST',\r\n0x0126: 'NORMSDIST',\r\n0x0127: 'NORMINV',\r\n0x0128: 'NORMSINV',\r\n0x0129: 'STANDARDIZE',\r\n0x012A: 'ODD',\r\n0x012B: 'PERMUT',\r\n0x012C: 'POISSON',\r\n0x012D: 'TDIST',\r\n0x012E: 'WEIBULL',\r\n0x012F: 'SUMXMY2',\r\n0x0130: 'SUMX2MY2',\r\n0x0131: 'SUMX2PY2',\r\n0x0132: 'CHITEST',\r\n0x0133: 'CORREL',\r\n0x0134: 'COVAR',\r\n0x0135: 'FORECAST',\r\n0x0136: 'FTEST',\r\n0x0137: 'INTERCEPT',\r\n0x0138: 'PEARSON',\r\n0x0139: 'RSQ',\r\n0x013A: 'STEYX',\r\n0x013B: 'SLOPE',\r\n0x013C: 'TTEST',\r\n0x013D: 'PROB',\r\n0x013E: 'DEVSQ',\r\n0x013F: 'GEOMEAN',\r\n0x0140: 'HARMEAN',\r\n0x0141: 'SUMSQ',\r\n0x0142: 'KURT',\r\n0x0143: 'SKEW',\r\n0x0144: 'ZTEST',\r\n0x0145: 'LARGE',\r\n0x0146: 'SMALL',\r\n0x0147: 'QUARTILE',\r\n0x0148: 'PERCENTILE',\r\n0x0149: 'PERCENTRANK',\r\n0x014A: 'MODE',\r\n0x014B: 'TRIMMEAN',\r\n0x014C: 'TINV',\r\n0x014E: 'MOVIE.COMMAND',\r\n0x014F: 'GET.MOVIE',\r\n0x0150: 'CONCATENATE',\r\n0x0151: 'POWER',\r\n0x0152: 'PIVOT.ADD.DATA',\r\n0x0153: 'GET.PIVOT.TABLE',\r\n0x0154: 'GET.PIVOT.FIELD',\r\n0x0155: 'GET.PIVOT.ITEM',\r\n0x0156: 'RADIANS',\r\n0x0157: 'DEGREES',\r\n0x0158: 'SUBTOTAL',\r\n0x0159: 'SUMIF',\r\n0x015A: 'COUNTIF',\r\n0x015B: 'COUNTBLANK',\r\n0x015C: 'SCENARIO.GET',\r\n0x015D: 'OPTIONS.LISTS.GET',\r\n0x015E: 'ISPMT',\r\n0x015F: 'DATEDIF',\r\n0x0160: 'DATESTRING',\r\n0x0161: 'NUMBERSTRING',\r\n0x0162: 'ROMAN',\r\n0x0163: 'OPEN.DIALOG',\r\n0x0164: 'SAVE.DIALOG',\r\n0x0165: 'VIEW.GET',\r\n0x0166: 'GETPIVOTDATA',\r\n0x0167: 'HYPERLINK',\r\n0x0168: 'PHONETIC',\r\n0x0169: 'AVERAGEA',\r\n0x016A: 'MAXA',\r\n0x016B: 'MINA',\r\n0x016C: 'STDEVPA',\r\n0x016D: 'VARPA',\r\n0x016E: 'STDEVA',\r\n0x016F: 'VARA',\r\n0x0170: 'BAHTTEXT',\r\n0x0171: 'THAIDAYOFWEEK',\r\n0x0172: 'THAIDIGIT',\r\n0x0173: 'THAIMONTHOFYEAR',\r\n0x0174: 'THAINUMSOUND',\r\n0x0175: 'THAINUMSTRING',\r\n0x0176: 'THAISTRINGLENGTH',\r\n0x0177: 'ISTHAIDIGIT',\r\n0x0178: 'ROUNDBAHTDOWN',\r\n0x0179: 'ROUNDBAHTUP',\r\n0x017A: 'THAIYEAR',\r\n0x017B: 'RTD',\r\n\r\n0x017C: 'CUBEVALUE',\r\n0x017D: 'CUBEMEMBER',\r\n0x017E: 'CUBEMEMBERPROPERTY',\r\n0x017F: 'CUBERANKEDMEMBER',\r\n0x0180: 'HEX2BIN',\r\n0x0181: 'HEX2DEC',\r\n0x0182: 'HEX2OCT',\r\n0x0183: 'DEC2BIN',\r\n0x0184: 'DEC2HEX',\r\n0x0185: 'DEC2OCT',\r\n0x0186: 'OCT2BIN',\r\n0x0187: 'OCT2HEX',\r\n0x0188: 'OCT2DEC',\r\n0x0189: 'BIN2DEC',\r\n0x018A: 'BIN2OCT',\r\n0x018B: 'BIN2HEX',\r\n0x018C: 'IMSUB',\r\n0x018D: 'IMDIV',\r\n0x018E: 'IMPOWER',\r\n0x018F: 'IMABS',\r\n0x0190: 'IMSQRT',\r\n0x0191: 'IMLN',\r\n0x0192: 'IMLOG2',\r\n0x0193: 'IMLOG10',\r\n0x0194: 'IMSIN',\r\n0x0195: 'IMCOS',\r\n0x0196: 'IMEXP',\r\n0x0197: 'IMARGUMENT',\r\n0x0198: 'IMCONJUGATE',\r\n0x0199: 'IMAGINARY',\r\n0x019A: 'IMREAL',\r\n0x019B: 'COMPLEX',\r\n0x019C: 'IMSUM',\r\n0x019D: 'IMPRODUCT',\r\n0x019E: 'SERIESSUM',\r\n0x019F: 'FACTDOUBLE',\r\n0x01A0: 'SQRTPI',\r\n0x01A1: 'QUOTIENT',\r\n0x01A2: 'DELTA',\r\n0x01A3: 'GESTEP',\r\n0x01A4: 'ISEVEN',\r\n0x01A5: 'ISODD',\r\n0x01A6: 'MROUND',\r\n0x01A7: 'ERF',\r\n0x01A8: 'ERFC',\r\n0x01A9: 'BESSELJ',\r\n0x01AA: 'BESSELK',\r\n0x01AB: 'BESSELY',\r\n0x01AC: 'BESSELI',\r\n0x01AD: 'XIRR',\r\n0x01AE: 'XNPV',\r\n0x01AF: 'PRICEMAT',\r\n0x01B0: 'YIELDMAT',\r\n0x01B1: 'INTRATE',\r\n0x01B2: 'RECEIVED',\r\n0x01B3: 'DISC',\r\n0x01B4: 'PRICEDISC',\r\n0x01B5: 'YIELDDISC',\r\n0x01B6: 'TBILLEQ',\r\n0x01B7: 'TBILLPRICE',\r\n0x01B8: 'TBILLYIELD',\r\n0x01B9: 'PRICE',\r\n0x01BA: 'YIELD',\r\n0x01BB: 'DOLLARDE',\r\n0x01BC: 'DOLLARFR',\r\n0x01BD: 'NOMINAL',\r\n0x01BE: 'EFFECT',\r\n0x01BF: 'CUMPRINC',\r\n0x01C0: 'CUMIPMT',\r\n0x01C1: 'EDATE',\r\n0x01C2: 'EOMONTH',\r\n0x01C3: 'YEARFRAC',\r\n0x01C4: 'COUPDAYBS',\r\n0x01C5: 'COUPDAYS',\r\n0x01C6: 'COUPDAYSNC',\r\n0x01C7: 'COUPNCD',\r\n0x01C8: 'COUPNUM',\r\n0x01C9: 'COUPPCD',\r\n0x01CA: 'DURATION',\r\n0x01CB: 'MDURATION',\r\n0x01CC: 'ODDLPRICE',\r\n0x01CD: 'ODDLYIELD',\r\n0x01CE: 'ODDFPRICE',\r\n0x01CF: 'ODDFYIELD',\r\n0x01D0: 'RANDBETWEEN',\r\n0x01D1: 'WEEKNUM',\r\n0x01D2: 'AMORDEGRC',\r\n0x01D3: 'AMORLINC',\r\n0x01D4: 'CONVERT',\r\n0x02D4: 'SHEETJS',\r\n0x01D5: 'ACCRINT',\r\n0x01D6: 'ACCRINTM',\r\n0x01D7: 'WORKDAY',\r\n0x01D8: 'NETWORKDAYS',\r\n0x01D9: 'GCD',\r\n0x01DA: 'MULTINOMIAL',\r\n0x01DB: 'LCM',\r\n0x01DC: 'FVSCHEDULE',\r\n0x01DD: 'CUBEKPIMEMBER',\r\n0x01DE: 'CUBESET',\r\n0x01DF: 'CUBESETCOUNT',\r\n0x01E0: 'IFERROR',\r\n0x01E1: 'COUNTIFS',\r\n0x01E2: 'SUMIFS',\r\n0x01E3: 'AVERAGEIF',\r\n0x01E4: 'AVERAGEIFS'\r\n};\r\nvar FtabArgc = {\r\n0x0002: 1, /* ISNA */\r\n0x0003: 1, /* ISERROR */\r\n0x000A: 0, /* NA */\r\n0x000F: 1, /* SIN */\r\n0x0010: 1, /* COS */\r\n0x0011: 1, /* TAN */\r\n0x0012: 1, /* ATAN */\r\n0x0013: 0, /* PI */\r\n0x0014: 1, /* SQRT */\r\n0x0015: 1, /* EXP */\r\n0x0016: 1, /* LN */\r\n0x0017: 1, /* LOG10 */\r\n0x0018: 1, /* ABS */\r\n0x0019: 1, /* INT */\r\n0x001A: 1, /* SIGN */\r\n0x001B: 2, /* ROUND */\r\n0x001E: 2, /* REPT */\r\n0x001F: 3, /* MID */\r\n0x0020: 1, /* LEN */\r\n0x0021: 1, /* VALUE */\r\n0x0022: 0, /* TRUE */\r\n0x0023: 0, /* FALSE */\r\n0x0026: 1, /* NOT */\r\n0x0027: 2, /* MOD */\r\n0x0028: 3, /* DCOUNT */\r\n0x0029: 3, /* DSUM */\r\n0x002A: 3, /* DAVERAGE */\r\n0x002B: 3, /* DMIN */\r\n0x002C: 3, /* DMAX */\r\n0x002D: 3, /* DSTDEV */\r\n0x002F: 3, /* DVAR */\r\n0x0030: 2, /* TEXT */\r\n0x0035: 1, /* GOTO */\r\n0x003D: 3, /* MIRR */\r\n0x003F: 0, /* RAND */\r\n0x0041: 3, /* DATE */\r\n0x0042: 3, /* TIME */\r\n0x0043: 1, /* DAY */\r\n0x0044: 1, /* MONTH */\r\n0x0045: 1, /* YEAR */\r\n0x0046: 1, /* WEEKDAY */\r\n0x0047: 1, /* HOUR */\r\n0x0048: 1, /* MINUTE */\r\n0x0049: 1, /* SECOND */\r\n0x004A: 0, /* NOW */\r\n0x004B: 1, /* AREAS */\r\n0x004C: 1, /* ROWS */\r\n0x004D: 1, /* COLUMNS */\r\n0x004F: 2, /* ABSREF */\r\n0x0050: 2, /* RELREF */\r\n0x0053: 1, /* TRANSPOSE */\r\n0x0055: 0, /* STEP */\r\n0x0056: 1, /* TYPE */\r\n0x0059: 0, /* CALLER */\r\n0x005A: 1, /* DEREF */\r\n0x005E: 0, /* ACTIVE.CELL */\r\n0x005F: 0, /* SELECTION */\r\n0x0061: 2, /* ATAN2 */\r\n0x0062: 1, /* ASIN */\r\n0x0063: 1, /* ACOS */\r\n0x0065: 3, /* HLOOKUP */\r\n0x0066: 3, /* VLOOKUP */\r\n0x0069: 1, /* ISREF */\r\n0x006A: 1, /* GET.FORMULA */\r\n0x006C: 2, /* SET.VALUE */\r\n0x006F: 1, /* CHAR */\r\n0x0070: 1, /* LOWER */\r\n0x0071: 1, /* UPPER */\r\n0x0072: 1, /* PROPER */\r\n0x0075: 2, /* EXACT */\r\n0x0076: 1, /* TRIM */\r\n0x0077: 4, /* REPLACE */\r\n0x0079: 1, /* CODE */\r\n0x007E: 1, /* ISERR */\r\n0x007F: 1, /* ISTEXT */\r\n0x0080: 1, /* ISNUMBER */\r\n0x0081: 1, /* ISBLANK */\r\n0x0082: 1, /* T */\r\n0x0083: 1, /* N */\r\n0x0085: 1, /* FCLOSE */\r\n0x0086: 1, /* FSIZE */\r\n0x0087: 1, /* FREADLN */\r\n0x0088: 2, /* FREAD */\r\n0x0089: 2, /* FWRITELN */\r\n0x008A: 2, /* FWRITE */\r\n0x008C: 1, /* DATEVALUE */\r\n0x008D: 1, /* TIMEVALUE */\r\n0x008E: 3, /* SLN */\r\n0x008F: 4, /* SYD */\r\n0x0090: 4, /* DDB */\r\n0x00A1: 1, /* DIALOG.BOX */\r\n0x00A2: 1, /* CLEAN */\r\n0x00A3: 1, /* MDETERM */\r\n0x00A4: 1, /* MINVERSE */\r\n0x00A5: 2, /* MMULT */\r\n0x00AC: 1, /* WHILE */\r\n0x00AF: 2, /* INITIATE */\r\n0x00B0: 2, /* REQUEST */\r\n0x00B1: 3, /* POKE */\r\n0x00B2: 2, /* EXECUTE */\r\n0x00B3: 1, /* TERMINATE */\r\n0x00B8: 1, /* FACT */\r\n0x00BA: 1, /* GET.WORKSPACE */\r\n0x00BD: 3, /* DPRODUCT */\r\n0x00BE: 1, /* ISNONTEXT */\r\n0x00C3: 3, /* DSTDEVP */\r\n0x00C4: 3, /* DVARP */\r\n0x00C5: 1, /* TRUNC */\r\n0x00C6: 1, /* ISLOGICAL */\r\n0x00C7: 3, /* DCOUNTA */\r\n0x00C9: 1, /* UNREGISTER */\r\n0x00CF: 4, /* REPLACEB */\r\n0x00D2: 3, /* MIDB */\r\n0x00D3: 1, /* LENB */\r\n0x00D4: 2, /* ROUNDUP */\r\n0x00D5: 2, /* ROUNDDOWN */\r\n0x00D6: 1, /* ASC */\r\n0x00D7: 1, /* DBCS */\r\n0x00E1: 0, /* END.IF */\r\n0x00E5: 1, /* SINH */\r\n0x00E6: 1, /* COSH */\r\n0x00E7: 1, /* TANH */\r\n0x00E8: 1, /* ASINH */\r\n0x00E9: 1, /* ACOSH */\r\n0x00EA: 1, /* ATANH */\r\n0x00EB: 3, /* DGET */\r\n0x00F4: 1, /* INFO */\r\n0x00F7: 4, /* DB */\r\n0x00FC: 2, /* FREQUENCY */\r\n0x0101: 1, /* EVALUATE */\r\n0x0105: 1, /* ERROR.TYPE */\r\n0x010F: 1, /* GAMMALN */\r\n0x0111: 4, /* BINOMDIST */\r\n0x0112: 2, /* CHIDIST */\r\n0x0113: 2, /* CHIINV */\r\n0x0114: 2, /* COMBIN */\r\n0x0115: 3, /* CONFIDENCE */\r\n0x0116: 3, /* CRITBINOM */\r\n0x0117: 1, /* EVEN */\r\n0x0118: 3, /* EXPONDIST */\r\n0x0119: 3, /* FDIST */\r\n0x011A: 3, /* FINV */\r\n0x011B: 1, /* FISHER */\r\n0x011C: 1, /* FISHERINV */\r\n0x011D: 2, /* FLOOR */\r\n0x011E: 4, /* GAMMADIST */\r\n0x011F: 3, /* GAMMAINV */\r\n0x0120: 2, /* CEILING */\r\n0x0121: 4, /* HYPGEOMDIST */\r\n0x0122: 3, /* LOGNORMDIST */\r\n0x0123: 3, /* LOGINV */\r\n0x0124: 3, /* NEGBINOMDIST */\r\n0x0125: 4, /* NORMDIST */\r\n0x0126: 1, /* NORMSDIST */\r\n0x0127: 3, /* NORMINV */\r\n0x0128: 1, /* NORMSINV */\r\n0x0129: 3, /* STANDARDIZE */\r\n0x012A: 1, /* ODD */\r\n0x012B: 2, /* PERMUT */\r\n0x012C: 3, /* POISSON */\r\n0x012D: 3, /* TDIST */\r\n0x012E: 4, /* WEIBULL */\r\n0x012F: 2, /* SUMXMY2 */\r\n0x0130: 2, /* SUMX2MY2 */\r\n0x0131: 2, /* SUMX2PY2 */\r\n0x0132: 2, /* CHITEST */\r\n0x0133: 2, /* CORREL */\r\n0x0134: 2, /* COVAR */\r\n0x0135: 3, /* FORECAST */\r\n0x0136: 2, /* FTEST */\r\n0x0137: 2, /* INTERCEPT */\r\n0x0138: 2, /* PEARSON */\r\n0x0139: 2, /* RSQ */\r\n0x013A: 2, /* STEYX */\r\n0x013B: 2, /* SLOPE */\r\n0x013C: 4, /* TTEST */\r\n0x0145: 2, /* LARGE */\r\n0x0146: 2, /* SMALL */\r\n0x0147: 2, /* QUARTILE */\r\n0x0148: 2, /* PERCENTILE */\r\n0x014B: 2, /* TRIMMEAN */\r\n0x014C: 2, /* TINV */\r\n0x0151: 2, /* POWER */\r\n0x0156: 1, /* RADIANS */\r\n0x0157: 1, /* DEGREES */\r\n0x015A: 2, /* COUNTIF */\r\n0x015B: 1, /* COUNTBLANK */\r\n0x015E: 4, /* ISPMT */\r\n0x015F: 3, /* DATEDIF */\r\n0x0160: 1, /* DATESTRING */\r\n0x0161: 2, /* NUMBERSTRING */\r\n0x0168: 1, /* PHONETIC */\r\n0x0170: 1, /* BAHTTEXT */\r\n0x0171: 1, /* THAIDAYOFWEEK */\r\n0x0172: 1, /* THAIDIGIT */\r\n0x0173: 1, /* THAIMONTHOFYEAR */\r\n0x0174: 1, /* THAINUMSOUND */\r\n0x0175: 1, /* THAINUMSTRING */\r\n0x0176: 1, /* THAISTRINGLENGTH */\r\n0x0177: 1, /* ISTHAIDIGIT */\r\n0x0178: 1, /* ROUNDBAHTDOWN */\r\n0x0179: 1, /* ROUNDBAHTUP */\r\n0x017A: 1, /* THAIYEAR */\r\n0x017E: 3, /* CUBEMEMBERPROPERTY */\r\n0x0181: 1, /* HEX2DEC */\r\n0x0188: 1, /* OCT2DEC */\r\n0x0189: 1, /* BIN2DEC */\r\n0x018C: 2, /* IMSUB */\r\n0x018D: 2, /* IMDIV */\r\n0x018E: 2, /* IMPOWER */\r\n0x018F: 1, /* IMABS */\r\n0x0190: 1, /* IMSQRT */\r\n0x0191: 1, /* IMLN */\r\n0x0192: 1, /* IMLOG2 */\r\n0x0193: 1, /* IMLOG10 */\r\n0x0194: 1, /* IMSIN */\r\n0x0195: 1, /* IMCOS */\r\n0x0196: 1, /* IMEXP */\r\n0x0197: 1, /* IMARGUMENT */\r\n0x0198: 1, /* IMCONJUGATE */\r\n0x0199: 1, /* IMAGINARY */\r\n0x019A: 1, /* IMREAL */\r\n0x019E: 4, /* SERIESSUM */\r\n0x019F: 1, /* FACTDOUBLE */\r\n0x01A0: 1, /* SQRTPI */\r\n0x01A1: 2, /* QUOTIENT */\r\n0x01A4: 1, /* ISEVEN */\r\n0x01A5: 1, /* ISODD */\r\n0x01A6: 2, /* MROUND */\r\n0x01A8: 1, /* ERFC */\r\n0x01A9: 2, /* BESSELJ */\r\n0x01AA: 2, /* BESSELK */\r\n0x01AB: 2, /* BESSELY */\r\n0x01AC: 2, /* BESSELI */\r\n0x01AE: 3, /* XNPV */\r\n0x01B6: 3, /* TBILLEQ */\r\n0x01B7: 3, /* TBILLPRICE */\r\n0x01B8: 3, /* TBILLYIELD */\r\n0x01BB: 2, /* DOLLARDE */\r\n0x01BC: 2, /* DOLLARFR */\r\n0x01BD: 2, /* NOMINAL */\r\n0x01BE: 2, /* EFFECT */\r\n0x01BF: 6, /* CUMPRINC */\r\n0x01C0: 6, /* CUMIPMT */\r\n0x01C1: 2, /* EDATE */\r\n0x01C2: 2, /* EOMONTH */\r\n0x01D0: 2, /* RANDBETWEEN */\r\n0x01D4: 3, /* CONVERT */\r\n0x01DC: 2, /* FVSCHEDULE */\r\n0x01DF: 1, /* CUBESETCOUNT */\r\n0x01E0: 2, /* IFERROR */\r\n0xFFFF: 0\r\n};\r\n/* [MS-XLSX] 2.2.3 Functions */\r\n/* [MS-XLSB] 2.5.97.10 Ftab */\r\nvar XLSXFutureFunctions = {\r\n\t\"_xlfn.ACOT\": \"ACOT\",\r\n\t\"_xlfn.ACOTH\": \"ACOTH\",\r\n\t\"_xlfn.AGGREGATE\": \"AGGREGATE\",\r\n\t\"_xlfn.ARABIC\": \"ARABIC\",\r\n\t\"_xlfn.AVERAGEIF\": \"AVERAGEIF\",\r\n\t\"_xlfn.AVERAGEIFS\": \"AVERAGEIFS\",\r\n\t\"_xlfn.BASE\": \"BASE\",\r\n\t\"_xlfn.BETA.DIST\": \"BETA.DIST\",\r\n\t\"_xlfn.BETA.INV\": \"BETA.INV\",\r\n\t\"_xlfn.BINOM.DIST\": \"BINOM.DIST\",\r\n\t\"_xlfn.BINOM.DIST.RANGE\": \"BINOM.DIST.RANGE\",\r\n\t\"_xlfn.BINOM.INV\": \"BINOM.INV\",\r\n\t\"_xlfn.BITAND\": \"BITAND\",\r\n\t\"_xlfn.BITLSHIFT\": \"BITLSHIFT\",\r\n\t\"_xlfn.BITOR\": \"BITOR\",\r\n\t\"_xlfn.BITRSHIFT\": \"BITRSHIFT\",\r\n\t\"_xlfn.BITXOR\": \"BITXOR\",\r\n\t\"_xlfn.CEILING.MATH\": \"CEILING.MATH\",\r\n\t\"_xlfn.CEILING.PRECISE\": \"CEILING.PRECISE\",\r\n\t\"_xlfn.CHISQ.DIST\": \"CHISQ.DIST\",\r\n\t\"_xlfn.CHISQ.DIST.RT\": \"CHISQ.DIST.RT\",\r\n\t\"_xlfn.CHISQ.INV\": \"CHISQ.INV\",\r\n\t\"_xlfn.CHISQ.INV.RT\": \"CHISQ.INV.RT\",\r\n\t\"_xlfn.CHISQ.TEST\": \"CHISQ.TEST\",\r\n\t\"_xlfn.COMBINA\": \"COMBINA\",\r\n\t\"_xlfn.CONCAT\": \"CONCAT\",\r\n\t\"_xlfn.CONFIDENCE.NORM\": \"CONFIDENCE.NORM\",\r\n\t\"_xlfn.CONFIDENCE.T\": \"CONFIDENCE.T\",\r\n\t\"_xlfn.COT\": \"COT\",\r\n\t\"_xlfn.COTH\": \"COTH\",\r\n\t\"_xlfn.COUNTIFS\": \"COUNTIFS\",\r\n\t\"_xlfn.COVARIANCE.P\": \"COVARIANCE.P\",\r\n\t\"_xlfn.COVARIANCE.S\": \"COVARIANCE.S\",\r\n\t\"_xlfn.CSC\": \"CSC\",\r\n\t\"_xlfn.CSCH\": \"CSCH\",\r\n\t\"_xlfn.DAYS\": \"DAYS\",\r\n\t\"_xlfn.DECIMAL\": \"DECIMAL\",\r\n\t\"_xlfn.ECMA.CEILING\": \"ECMA.CEILING\",\r\n\t\"_xlfn.ERF.PRECISE\": \"ERF.PRECISE\",\r\n\t\"_xlfn.ERFC.PRECISE\": \"ERFC.PRECISE\",\r\n\t\"_xlfn.EXPON.DIST\": \"EXPON.DIST\",\r\n\t\"_xlfn.F.DIST\": \"F.DIST\",\r\n\t\"_xlfn.F.DIST.RT\": \"F.DIST.RT\",\r\n\t\"_xlfn.F.INV\": \"F.INV\",\r\n\t\"_xlfn.F.INV.RT\": \"F.INV.RT\",\r\n\t\"_xlfn.F.TEST\": \"F.TEST\",\r\n\t\"_xlfn.FILTERXML\": \"FILTERXML\",\r\n\t\"_xlfn.FLOOR.MATH\": \"FLOOR.MATH\",\r\n\t\"_xlfn.FLOOR.PRECISE\": \"FLOOR.PRECISE\",\r\n\t\"_xlfn.FORECAST.ETS\": \"FORECAST.ETS\",\r\n\t\"_xlfn.FORECAST.ETS.CONFINT\": \"FORECAST.ETS.CONFINT\",\r\n\t\"_xlfn.FORECAST.ETS.SEASONALITY\": \"FORECAST.ETS.SEASONALITY\",\r\n\t\"_xlfn.FORECAST.ETS.STAT\": \"FORECAST.ETS.STAT\",\r\n\t\"_xlfn.FORECAST.LINEAR\": \"FORECAST.LINEAR\",\r\n\t\"_xlfn.FORMULATEXT\": \"FORMULATEXT\",\r\n\t\"_xlfn.GAMMA\": \"GAMMA\",\r\n\t\"_xlfn.GAMMA.DIST\": \"GAMMA.DIST\",\r\n\t\"_xlfn.GAMMA.INV\": \"GAMMA.INV\",\r\n\t\"_xlfn.GAMMALN.PRECISE\": \"GAMMALN.PRECISE\",\r\n\t\"_xlfn.GAUSS\": \"GAUSS\",\r\n\t\"_xlfn.HYPGEOM.DIST\": \"HYPGEOM.DIST\",\r\n\t\"_xlfn.IFERROR\": \"IFERROR\",\r\n\t\"_xlfn.IFNA\": \"IFNA\",\r\n\t\"_xlfn.IFS\": \"IFS\",\r\n\t\"_xlfn.IMCOSH\": \"IMCOSH\",\r\n\t\"_xlfn.IMCOT\": \"IMCOT\",\r\n\t\"_xlfn.IMCSC\": \"IMCSC\",\r\n\t\"_xlfn.IMCSCH\": \"IMCSCH\",\r\n\t\"_xlfn.IMSEC\": \"IMSEC\",\r\n\t\"_xlfn.IMSECH\": \"IMSECH\",\r\n\t\"_xlfn.IMSINH\": \"IMSINH\",\r\n\t\"_xlfn.IMTAN\": \"IMTAN\",\r\n\t\"_xlfn.ISFORMULA\": \"ISFORMULA\",\r\n\t\"_xlfn.ISO.CEILING\": \"ISO.CEILING\",\r\n\t\"_xlfn.ISOWEEKNUM\": \"ISOWEEKNUM\",\r\n\t\"_xlfn.LOGNORM.DIST\": \"LOGNORM.DIST\",\r\n\t\"_xlfn.LOGNORM.INV\": \"LOGNORM.INV\",\r\n\t\"_xlfn.MAXIFS\": \"MAXIFS\",\r\n\t\"_xlfn.MINIFS\": \"MINIFS\",\r\n\t\"_xlfn.MODE.MULT\": \"MODE.MULT\",\r\n\t\"_xlfn.MODE.SNGL\": \"MODE.SNGL\",\r\n\t\"_xlfn.MUNIT\": \"MUNIT\",\r\n\t\"_xlfn.NEGBINOM.DIST\": \"NEGBINOM.DIST\",\r\n\t\"_xlfn.NETWORKDAYS.INTL\": \"NETWORKDAYS.INTL\",\r\n\t\"_xlfn.NIGBINOM\": \"NIGBINOM\",\r\n\t\"_xlfn.NORM.DIST\": \"NORM.DIST\",\r\n\t\"_xlfn.NORM.INV\": \"NORM.INV\",\r\n\t\"_xlfn.NORM.S.DIST\": \"NORM.S.DIST\",\r\n\t\"_xlfn.NORM.S.INV\": \"NORM.S.INV\",\r\n\t\"_xlfn.NUMBERVALUE\": \"NUMBERVALUE\",\r\n\t\"_xlfn.PDURATION\": \"PDURATION\",\r\n\t\"_xlfn.PERCENTILE.EXC\": \"PERCENTILE.EXC\",\r\n\t\"_xlfn.PERCENTILE.INC\": \"PERCENTILE.INC\",\r\n\t\"_xlfn.PERCENTRANK.EXC\": \"PERCENTRANK.EXC\",\r\n\t\"_xlfn.PERCENTRANK.INC\": \"PERCENTRANK.INC\",\r\n\t\"_xlfn.PERMUTATIONA\": \"PERMUTATIONA\",\r\n\t\"_xlfn.PHI\": \"PHI\",\r\n\t\"_xlfn.POISSON.DIST\": \"POISSON.DIST\",\r\n\t\"_xlfn.QUARTILE.EXC\": \"QUARTILE.EXC\",\r\n\t\"_xlfn.QUARTILE.INC\": \"QUARTILE.INC\",\r\n\t\"_xlfn.QUERYSTRING\": \"QUERYSTRING\",\r\n\t\"_xlfn.RANK.AVG\": \"RANK.AVG\",\r\n\t\"_xlfn.RANK.EQ\": \"RANK.EQ\",\r\n\t\"_xlfn.RRI\": \"RRI\",\r\n\t\"_xlfn.SEC\": \"SEC\",\r\n\t\"_xlfn.SECH\": \"SECH\",\r\n\t\"_xlfn.SHEET\": \"SHEET\",\r\n\t\"_xlfn.SHEETS\": \"SHEETS\",\r\n\t\"_xlfn.SKEW.P\": \"SKEW.P\",\r\n\t\"_xlfn.STDEV.P\": \"STDEV.P\",\r\n\t\"_xlfn.STDEV.S\": \"STDEV.S\",\r\n\t\"_xlfn.SUMIFS\": \"SUMIFS\",\r\n\t\"_xlfn.SWITCH\": \"SWITCH\",\r\n\t\"_xlfn.T.DIST\": \"T.DIST\",\r\n\t\"_xlfn.T.DIST.2T\": \"T.DIST.2T\",\r\n\t\"_xlfn.T.DIST.RT\": \"T.DIST.RT\",\r\n\t\"_xlfn.T.INV\": \"T.INV\",\r\n\t\"_xlfn.T.INV.2T\": \"T.INV.2T\",\r\n\t\"_xlfn.T.TEST\": \"T.TEST\",\r\n\t\"_xlfn.TEXTJOIN\": \"TEXTJOIN\",\r\n\t\"_xlfn.UNICHAR\": \"UNICHAR\",\r\n\t\"_xlfn.UNICODE\": \"UNICODE\",\r\n\t\"_xlfn.VAR.P\": \"VAR.P\",\r\n\t\"_xlfn.VAR.S\": \"VAR.S\",\r\n\t\"_xlfn.WEBSERVICE\": \"WEBSERVICE\",\r\n\t\"_xlfn.WEIBULL.DIST\": \"WEIBULL.DIST\",\r\n\t\"_xlfn.WORKDAY.INTL\": \"WORKDAY.INTL\",\r\n\t\"_xlfn.XOR\": \"XOR\",\r\n\t\"_xlfn.Z.TEST\": \"Z.TEST\"\r\n};\r\n\r\n/* Part 3 TODO: actually parse formulae */\r\nfunction ods_to_csf_formula(f) {\r\n\tif(f.slice(0,3) == \"of:\") f = f.slice(3);\r\n\t/* 5.2 Basic Expressions */\r\n\tif(f.charCodeAt(0) == 61) {\r\n\t\tf = f.slice(1);\r\n\t\tif(f.charCodeAt(0) == 61) f = f.slice(1);\r\n\t}\r\n\tf = f.replace(/COM\\.MICROSOFT\\./g, \"\");\r\n\t/* Part 3 Section 5.8 References */\r\n\tf = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function($$, $1) { return $1.replace(/\\./g,\"\"); });\r\n\t/* TODO: something other than this */\r\n\tf = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\r\n\treturn f.replace(/[;~]/g,\",\").replace(/\\|/g,\";\");\r\n}\r\n\r\nfunction csf_to_ods_formula(f) {\r\n\tvar o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g,\":\");\r\n\t/* TODO: something other than this */\r\n\treturn o.replace(/;/g, \"|\").replace(/,/g,\";\");\r\n}\r\n\r\nfunction ods_to_csf_3D(r) {\r\n\tvar a = r.split(\":\");\r\n\tvar s = a[0].split(\".\")[0];\r\n\treturn [s, a[0].split(\".\")[1] + (a.length > 1 ? (\":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0])) : \"\")];\r\n}\r\n\r\nfunction csf_to_ods_3D(r) {\r\n\treturn r.replace(/\\./,\"!\");\r\n}\r\n\r\nvar strs = {}; // shared strings\r\nvar _ssfopts = {}; // spreadsheet formatting options\r\n\r\nRELS.WS = [\r\n\t\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\",\r\n\t\"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"\r\n];\r\n\r\nfunction get_sst_id(sst, str) {\r\n\tfor(var i = 0, len = sst.length; i < len; ++i) if(sst[i].t === str) { sst.Count ++; return i; }\r\n\tsst[len] = {t:str}; sst.Count ++; sst.Unique ++; return len;\r\n}\r\n\r\nfunction col_obj_w(C, col) {\r\n\tvar p = ({min:C+1,max:C+1});\r\n\t/* wch (chars), wpx (pixels) */\r\n\tvar wch = -1;\r\n\tif(col.MDW) MDW = col.MDW;\r\n\tif(col.width != null) p.customWidth = 1;\r\n\telse if(col.wpx != null) wch = px2char(col.wpx);\r\n\telse if(col.wch != null) wch = col.wch;\r\n\tif(wch > -1) { p.width = char2width(wch); p.customWidth = 1; }\r\n\telse if(col.width != null) p.width = col.width;\r\n\tif(col.hidden) p.hidden = true;\r\n\treturn p;\r\n}\r\n\r\nfunction default_margins(margins, mode) {\r\n\tif(!margins) return;\r\n\tvar defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\r\n\tif(mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\r\n\tif(margins.left   == null) margins.left   = defs[0];\r\n\tif(margins.right  == null) margins.right  = defs[1];\r\n\tif(margins.top    == null) margins.top    = defs[2];\r\n\tif(margins.bottom == null) margins.bottom = defs[3];\r\n\tif(margins.header == null) margins.header = defs[4];\r\n\tif(margins.footer == null) margins.footer = defs[5];\r\n}\r\n\r\nfunction get_cell_style(styles, cell, opts) {\r\n\tvar z = opts.revssf[cell.z != null ? cell.z : \"General\"];\r\n\tvar i = 0x3c, len = styles.length;\r\n\tif(z == null && opts.ssf) {\r\n\t\tfor(; i < 0x188; ++i) if(opts.ssf[i] == null) {\r\n\t\t\tSSF.load(cell.z, i);\r\n\t\t\t// $FlowIgnore\r\n\t\t\topts.ssf[i] = cell.z;\r\n\t\t\topts.revssf[cell.z] = z = i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor(i = 0; i != len; ++i) if(styles[i].numFmtId === z) return i;\r\n\tstyles[len] = {\r\n\t\tnumFmtId:z,\r\n\t\tfontId:0,\r\n\t\tfillId:0,\r\n\t\tborderId:0,\r\n\t\txfId:0,\r\n\t\tapplyNumberFormat:1\r\n\t};\r\n\treturn len;\r\n}\r\n\r\nfunction safe_format(p, fmtid, fillid, opts, themes, styles) {\r\n\tif(p.t === 'z') return;\r\n\tif(p.t === 'd' && typeof p.v === 'string') p.v = parseDate(p.v);\r\n\ttry {\r\n\t\tif(opts.cellNF) p.z = SSF._table[fmtid];\r\n\t} catch(e) { if(opts.WTF) throw e; }\r\n\tif(!opts || opts.cellText !== false) try {\r\n\t\tif(SSF._table[fmtid] == null) SSF.load(SSFImplicit[fmtid] || \"General\", fmtid);\r\n\t\tif(p.t === 'e') p.w = p.w || BErr[p.v];\r\n\t\telse if(fmtid === 0) {\r\n\t\t\tif(p.t === 'n') {\r\n\t\t\t\tif((p.v|0) === p.v) p.w = SSF._general_int(p.v);\r\n\t\t\t\telse p.w = SSF._general_num(p.v);\r\n\t\t\t}\r\n\t\t\telse if(p.t === 'd') {\r\n\t\t\t\tvar dd = datenum(p.v);\r\n\t\t\t\tif((dd|0) === dd) p.w = SSF._general_int(dd);\r\n\t\t\t\telse p.w = SSF._general_num(dd);\r\n\t\t\t}\r\n\t\t\telse if(p.v === undefined) return \"\";\r\n\t\t\telse p.w = SSF._general(p.v,_ssfopts);\r\n\t\t}\r\n\t\telse if(p.t === 'd') p.w = SSF.format(fmtid,datenum(p.v),_ssfopts);\r\n\t\telse p.w = SSF.format(fmtid,p.v,_ssfopts);\r\n\t} catch(e) { if(opts.WTF) throw e; }\r\n\tif(!opts.cellStyles) return;\r\n\tif(fillid != null) try {\r\n\t\tp.s = styles.Fills[fillid];\r\n\t\tif (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\r\n\t\t\tp.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\r\n\t\t\tif(opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\r\n\t\t}\r\n\t\tif (p.s.bgColor && p.s.bgColor.theme) {\r\n\t\t\tp.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\r\n\t\t\tif(opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\r\n\t\t}\r\n\t} catch(e) { if(opts.WTF && styles.Fills) throw e; }\r\n}\r\nfunction parse_ws_xml_dim(ws, s) {\r\n\tvar d = safe_decode_range(s);\r\n\tif(d.s.r<=d.e.r && d.s.c<=d.e.c && d.s.r>=0 && d.s.c>=0) ws[\"!ref\"] = encode_range(d);\r\n}\r\nvar mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\r\nvar sheetdataregex = /<(?:\\w+:)?sheetData>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\r\nvar hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\r\nvar dimregex = /\"(\\w*:\\w*)\"/;\r\nvar colregex = /<(?:\\w:)?col[^>]*[\\/]?>/g;\r\nvar afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\r\nvar marginregex= /<(?:\\w:)?pageMargins[^>]*\\/>/g;\r\nvar sheetprregex = /<(?:\\w:)?sheetPr(?:[^>a-z][^>]*)?\\/>/;\r\nvar svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\r\n/* 18.3 Worksheets */\r\nfunction parse_ws_xml(data, opts, idx, rels, wb, themes, styles) {\r\n\tif(!data) return data;\r\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\r\n\r\n\t/* 18.3.1.99 worksheet CT_Worksheet */\r\n\tvar s = opts.dense ? ([]) : ({});\r\n\tvar refguess = ({s: {r:2000000, c:2000000}, e: {r:0, c:0} });\r\n\r\n\tvar data1 = \"\", data2 = \"\";\r\n\tvar mtch = data.match(sheetdataregex);\r\n\tif(mtch) {\r\n\t\tdata1 = data.slice(0, mtch.index);\r\n\t\tdata2 = data.slice(mtch.index + mtch[0].length);\r\n\t} else data1 = data2 = data;\r\n\r\n\t/* 18.3.1.82 sheetPr CT_SheetPr */\r\n\tvar sheetPr = data1.match(sheetprregex);\r\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\r\n\r\n\t/* 18.3.1.35 dimension CT_SheetDimension */\r\n\t// $FlowIgnore\r\n\tvar ridx = (data1.match(/<(?:\\w*:)?dimension/)||{index:-1}).index;\r\n\tif(ridx > 0) {\r\n\t\tvar ref = data1.slice(ridx,ridx+50).match(dimregex);\r\n\t\tif(ref) parse_ws_xml_dim(s, ref[1]);\r\n\t}\r\n\r\n\t/* 18.3.1.88 sheetViews CT_SheetViews */\r\n\tvar svs = data1.match(svsregex);\r\n\tif(svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\r\n\r\n\t/* 18.3.1.17 cols CT_Cols */\r\n\tvar columns = [];\r\n\tif(opts.cellStyles) {\r\n\t\t/* 18.3.1.13 col CT_Col */\r\n\t\tvar cols = data1.match(colregex);\r\n\t\tif(cols) parse_ws_xml_cols(columns, cols);\r\n\t}\r\n\r\n\t/* 18.3.1.80 sheetData CT_SheetData ? */\r\n\tif(mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles);\r\n\r\n\t/* 18.3.1.2  autoFilter CT_AutoFilter */\r\n\tvar afilter = data2.match(afregex);\r\n\tif(afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\r\n\r\n\t/* 18.3.1.55 mergeCells CT_MergeCells */\r\n\tvar merges = [];\r\n\tvar _merge = data2.match(mergecregex);\r\n\tif(_merge) for(ridx = 0; ridx != _merge.length; ++ridx)\r\n\t\tmerges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\")+1));\r\n\r\n\t/* 18.3.1.48 hyperlinks CT_Hyperlinks */\r\n\tvar hlink = data2.match(hlinkregex);\r\n\tif(hlink) parse_ws_xml_hlinks(s, hlink, rels);\r\n\r\n\t/* 18.3.1.62 pageMargins CT_PageMargins */\r\n\tvar margins = data2.match(marginregex);\r\n\tif(margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\r\n\r\n\tif(!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\r\n\tif(opts.sheetRows > 0 && s[\"!ref\"]) {\r\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\r\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\r\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\r\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\r\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\r\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\r\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\r\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\r\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\r\n\t\t}\r\n\t}\r\n\tif(columns.length > 0) s[\"!cols\"] = columns;\r\n\tif(merges.length > 0) s[\"!merges\"] = merges;\r\n\treturn s;\r\n}\r\n\r\nfunction write_ws_xml_merges(merges) {\r\n\tif(merges.length === 0) return \"\";\r\n\tvar o = '<mergeCells count=\"' + merges.length + '\">';\r\n\tfor(var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\r\n\treturn o + '</mergeCells>';\r\n}\r\n\r\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\r\nfunction parse_ws_xml_sheetpr(sheetPr, s, wb, idx) {\r\n\tvar data = parsexmltag(sheetPr);\r\n\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\r\n\tif(data.codeName) wb.Sheets[idx].CodeName = data.codeName;\r\n}\r\n\r\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\r\nfunction write_ws_xml_protection(sp) {\r\n\t// algorithmName, hashValue, saltValue, spinCountpassword\r\n\tvar o = ({sheet:1});\r\n\tvar deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\r\n\tvar deftrue = [\r\n\t\t\"formatColumns\", \"formatRows\", \"formatCells\",\r\n\t\t\"insertColumns\", \"insertRows\", \"insertHyperlinks\",\r\n\t\t\"deleteColumns\", \"deleteRows\",\r\n\t\t\"sort\", \"autoFilter\", \"pivotTables\"\r\n\t];\r\n\tdeffalse.forEach(function(n) { if(sp[n] != null && sp[n]) o[n] = \"1\"; });\r\n\tdeftrue.forEach(function(n) { if(sp[n] != null && !sp[n]) o[n] = \"0\"; });\r\n\t/* TODO: algorithm */\r\n\tif(sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\r\n\treturn writextag('sheetProtection', null, o);\r\n}\r\n\r\nfunction parse_ws_xml_hlinks(s, data, rels) {\r\n\tvar dense = Array.isArray(s);\r\n\tfor(var i = 0; i != data.length; ++i) {\r\n\t\tvar val = parsexmltag(utf8read(data[i]), true);\r\n\t\tif(!val.ref) return;\r\n\t\tvar rel = ((rels || {})['!id']||[])[val.id];\r\n\t\tif(rel) {\r\n\t\t\tval.Target = rel.Target;\r\n\t\t\tif(val.location) val.Target += \"#\"+val.location;\r\n\t\t} else {\r\n\t\t\tval.Target = \"#\" + val.location;\r\n\t\t\trel = {Target: val.Target, TargetMode: 'Internal'};\r\n\t\t}\r\n\t\tval.Rel = rel;\r\n\t\tif(val.tooltip) { val.Tooltip = val.tooltip; delete val.tooltip; }\r\n\t\tvar rng = safe_decode_range(val.ref);\r\n\t\tfor(var R=rng.s.r;R<=rng.e.r;++R) for(var C=rng.s.c;C<=rng.e.c;++C) {\r\n\t\t\tvar addr = encode_cell({c:C,r:R});\r\n\t\t\tif(dense) {\r\n\t\t\t\tif(!s[R]) s[R] = [];\r\n\t\t\t\tif(!s[R][C]) s[R][C] = {t:\"z\",v:undefined};\r\n\t\t\t\ts[R][C].l = val;\r\n\t\t\t} else {\r\n\t\t\t\tif(!s[addr]) s[addr] = {t:\"z\",v:undefined};\r\n\t\t\t\ts[addr].l = val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction parse_ws_xml_margins(margin) {\r\n\tvar o = {};\r\n\t[\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function(k) {\r\n\t\tif(margin[k]) o[k] = parseFloat(margin[k]);\r\n\t});\r\n\treturn o;\r\n}\r\nfunction write_ws_xml_margins(margin) {\r\n\tdefault_margins(margin);\r\n\treturn writextag('pageMargins', null, margin);\r\n}\r\n\r\nfunction parse_ws_xml_cols(columns, cols) {\r\n\tvar seencol = false;\r\n\tfor(var coli = 0; coli != cols.length; ++coli) {\r\n\t\tvar coll = parsexmltag(cols[coli], true);\r\n\t\tif(coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\r\n\t\tvar colm=parseInt(coll.min, 10)-1, colM=parseInt(coll.max,10)-1;\r\n\t\tdelete coll.min; delete coll.max; coll.width = +coll.width;\r\n\t\tif(!seencol && coll.width) { seencol = true; find_mdw_colw(coll.width); }\r\n\t\tprocess_col(coll);\r\n\t\twhile(colm <= colM) columns[colm++] = dup(coll);\r\n\t}\r\n}\r\n\r\nfunction write_ws_xml_cols(ws, cols) {\r\n\tvar o = [\"<cols>\"], col;\r\n\tfor(var i = 0; i != cols.length; ++i) {\r\n\t\tif(!(col = cols[i])) continue;\r\n\t\to[o.length] = (writextag('col', null, col_obj_w(i, col)));\r\n\t}\r\n\to[o.length] = \"</cols>\";\r\n\treturn o.join(\"\");\r\n}\r\n\r\nfunction parse_ws_xml_autofilter(data) {\r\n\tvar o = { ref: (data.match(/ref=\"([^\"]*)\"/)||[])[1]};\r\n\treturn o;\r\n}\r\nfunction write_ws_xml_autofilter(data) {\r\n\treturn writextag(\"autoFilter\", null, {ref:data.ref});\r\n}\r\n\r\n/* 18.3.1.88 sheetViews CT_SheetViews */\r\n/* 18.3.1.87 sheetView CT_SheetView */\r\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/>/;\r\nfunction parse_ws_xml_sheetviews(data, wb) {\r\n\t(data.match(sviewregex)||[]).forEach(function(r) {\r\n\t\tvar tag = parsexmltag(r);\r\n\t\tif(parsexmlbool(tag.rightToLeft)) {\r\n\t\t\tif(!wb.Views) wb.Views = [{}];\r\n\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\r\n\t\t\twb.Views[0].RTL = true;\r\n\t\t}\r\n\t});\r\n}\r\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb) {\r\n\tvar sview = {workbookViewId:\"0\"};\r\n\t// $FlowIgnore\r\n\tif( (((wb||{}).Workbook||{}).Views||[])[0] ) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\r\n\treturn writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\r\n}\r\n\r\nfunction write_ws_xml_cell(cell, ref, ws, opts) {\r\n\tif(cell.v === undefined && cell.f === undefined || cell.t === 'z') return \"\";\r\n\tvar vv = \"\";\r\n\tvar oldt = cell.t, oldv = cell.v;\r\n\tswitch(cell.t) {\r\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\r\n\t\tcase 'n': vv = ''+cell.v; break;\r\n\t\tcase 'e': vv = BErr[cell.v]; break;\r\n\t\tcase 'd':\r\n\t\t\tif(opts.cellDates) vv = parseDate(cell.v, -1).toISOString();\r\n\t\t\telse {\r\n\t\t\t\tcell = dup(cell);\r\n\t\t\t\tcell.t = 'n';\r\n\t\t\t\tvv = ''+(cell.v = datenum(parseDate(cell.v)));\r\n\t\t\t}\r\n\t\t\tif(typeof cell.z === 'undefined') cell.z = SSF._table[14];\r\n\t\t\tbreak;\r\n\t\tdefault: vv = cell.v; break;\r\n\t}\r\n\tvar v = writetag('v', escapexml(vv)), o = ({r:ref});\r\n\t/* TODO: cell style */\r\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\r\n\tif(os !== 0) o.s = os;\r\n\tswitch(cell.t) {\r\n\t\tcase 'n': break;\r\n\t\tcase 'd': o.t = \"d\"; break;\r\n\t\tcase 'b': o.t = \"b\"; break;\r\n\t\tcase 'e': o.t = \"e\"; break;\r\n\t\tdefault: if(cell.v == null) { delete cell.t; break; }\r\n\t\t\tif(opts.bookSST) {\r\n\t\t\t\tv = writetag('v', ''+get_sst_id(opts.Strings, cell.v));\r\n\t\t\t\to.t = \"s\"; break;\r\n\t\t\t}\r\n\t\t\to.t = \"str\"; break;\r\n\t}\r\n\tif(cell.t != oldt) { cell.t = oldt; cell.v = oldv; }\r\n\tif(cell.f) {\r\n\t\tvar ff = cell.F && cell.F.slice(0, ref.length) == ref ? {t:\"array\", ref:cell.F} : null;\r\n\t\tv = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\r\n\t}\r\n\tif(cell.l) ws['!links'].push([ref, cell.l]);\r\n\tif(cell.c) ws['!comments'].push([ref, cell.c]);\r\n\treturn writextag('c', v, o);\r\n}\r\n\r\nvar parse_ws_xml_data = (function() {\r\n\tvar cellregex = /<(?:\\w+:)?c[ >]/, rowregex = /<\\/(?:\\w+:)?row>/;\r\n\tvar rregex = /r=[\"']([^\"']*)[\"']/, isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\r\n\tvar refregex = /ref=[\"']([^\"']*)[\"']/;\r\n\tvar match_v = matchtag(\"v\"), match_f = matchtag(\"f\");\r\n\r\nreturn function parse_ws_xml_data(sdata, s, opts, guess, themes, styles) {\r\n\tvar ri = 0, x = \"\", cells = [], cref = [], idx=0, i=0, cc=0, d=\"\", p;\r\n\tvar tag, tagr = 0, tagc = 0;\r\n\tvar sstr, ftag;\r\n\tvar fmtid = 0, fillid = 0;\r\n\tvar do_format = Array.isArray(styles.CellXf), cf;\r\n\tvar arrayf = [];\r\n\tvar sharedf = [];\r\n\tvar dense = Array.isArray(s);\r\n\tvar rows = [], rowobj = {}, rowrite = false;\r\n\tfor(var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\r\n\t\tx = marr[mt].trim();\r\n\t\tvar xlen = x.length;\r\n\t\tif(xlen === 0) continue;\r\n\r\n\t\t/* 18.3.1.73 row CT_Row */\r\n\t\tfor(ri = 0; ri < xlen; ++ri) if(x.charCodeAt(ri) === 62) break; ++ri;\r\n\t\ttag = parsexmltag(x.slice(0,ri), true);\r\n\t\ttagr = tag.r != null ? parseInt(tag.r, 10) : tagr+1; tagc = -1;\r\n\t\tif(opts.sheetRows && opts.sheetRows < tagr) continue;\r\n\t\tif(guess.s.r > tagr - 1) guess.s.r = tagr - 1;\r\n\t\tif(guess.e.r < tagr - 1) guess.e.r = tagr - 1;\r\n\r\n\t\tif(opts && opts.cellStyles) {\r\n\t\t\trowobj = {}; rowrite = false;\r\n\t\t\tif(tag.ht) { rowrite = true; rowobj.hpt = parseFloat(tag.ht); rowobj.hpx = pt2px(rowobj.hpt); }\r\n\t\t\tif(tag.hidden == \"1\") { rowrite = true; rowobj.hidden = true; }\r\n\t\t\tif(tag.outlineLevel != null) { rowrite = true; rowobj.level = +tag.outlineLevel; }\r\n\t\t\tif(rowrite) rows[tagr-1] = rowobj;\r\n\t\t}\r\n\r\n\t\t/* 18.3.1.4 c CT_Cell */\r\n\t\tcells = x.slice(ri).split(cellregex);\r\n\t\tfor(ri = 0; ri != cells.length; ++ri) {\r\n\t\t\tx = cells[ri].trim();\r\n\t\t\tif(x.length === 0) continue;\r\n\t\t\tcref = x.match(rregex); idx = ri; i=0; cc=0;\r\n\t\t\tx = \"<c \" + (x.slice(0,1)==\"<\"?\">\":\"\") + x;\r\n\t\t\tif(cref != null && cref.length === 2) {\r\n\t\t\t\tidx = 0; d=cref[1];\r\n\t\t\t\tfor(i=0; i != d.length; ++i) {\r\n\t\t\t\t\tif((cc=d.charCodeAt(i)-64) < 1 || cc > 26) break;\r\n\t\t\t\t\tidx = 26*idx + cc;\r\n\t\t\t\t}\r\n\t\t\t\t--idx;\r\n\t\t\t\ttagc = idx;\r\n\t\t\t} else ++tagc;\r\n\t\t\tfor(i = 0; i != x.length; ++i) if(x.charCodeAt(i) === 62) break; ++i;\r\n\t\t\ttag = parsexmltag(x.slice(0,i), true);\r\n\t\t\tif(!tag.r) tag.r = encode_cell({r:tagr-1, c:tagc});\r\n\t\t\td = x.slice(i);\r\n\t\t\tp = ({t:\"\"});\r\n\r\n\t\t\tif((cref=d.match(match_v))!= null && cref[1] !== '') p.v=unescapexml(cref[1]);\r\n\t\t\tif(opts.cellFormula) {\r\n\t\t\t\tif((cref=d.match(match_f))!= null && cref[1] !== '') {\r\n\t\t\t\t\t/* TODO: match against XLSXFutureFunctions */\r\n\t\t\t\t\tp.f=_xlfn(unescapexml(utf8read(cref[1])));\r\n\t\t\t\t\tif(cref[0].indexOf('t=\"array\"') > -1) {\r\n\t\t\t\t\t\tp.F = (d.match(refregex)||[])[1];\r\n\t\t\t\t\t\tif(p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\r\n\t\t\t\t\t} else if(cref[0].indexOf('t=\"shared\"') > -1) {\r\n\t\t\t\t\t\t// TODO: parse formula\r\n\t\t\t\t\t\tftag = parsexmltag(cref[0]);\r\n\t\t\t\t\t\tsharedf[parseInt(ftag.si, 10)] = [ftag, _xlfn(unescapexml(utf8read(cref[1])))];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if((cref=d.match(/<f[^>]*\\/>/))) {\r\n\t\t\t\t\tftag = parsexmltag(cref[0]);\r\n\t\t\t\t\tif(sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][0].ref, tag.r);\r\n\t\t\t\t}\r\n\t\t\t\t/* TODO: factor out contains logic */\r\n\t\t\t\tvar _tag = decode_cell(tag.r);\r\n\t\t\t\tfor(i = 0; i < arrayf.length; ++i)\r\n\t\t\t\t\tif(_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r)\r\n\t\t\t\t\t\tif(_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c)\r\n\t\t\t\t\t\t\tp.F = arrayf[i][1];\r\n\t\t\t}\r\n\r\n\t\t\tif(tag.t == null && p.v === undefined) {\r\n\t\t\t\tif(p.f || p.F) {\r\n\t\t\t\t\tp.v = 0; p.t = \"n\";\r\n\t\t\t\t} else if(!opts.sheetStubs) continue;\r\n\t\t\t\telse p.t = \"z\";\r\n\t\t\t}\r\n\t\t\telse p.t = tag.t || \"n\";\r\n\t\t\tif(guess.s.c > idx) guess.s.c = idx;\r\n\t\t\tif(guess.e.c < idx) guess.e.c = idx;\r\n\t\t\t/* 18.18.11 t ST_CellType */\r\n\t\t\tswitch(p.t) {\r\n\t\t\t\tcase 'n':\r\n\t\t\t\t\tif(p.v == \"\" || p.v == null) {\r\n\t\t\t\t\t\tif(!opts.sheetStubs) continue;\r\n\t\t\t\t\t\tp.t = 'z';\r\n\t\t\t\t\t} else p.v = parseFloat(p.v);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 's':\r\n\t\t\t\t\tif(typeof p.v == 'undefined') {\r\n\t\t\t\t\t\tif(!opts.sheetStubs) continue;\r\n\t\t\t\t\t\tp.t = 'z';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsstr = strs[parseInt(p.v, 10)];\r\n\t\t\t\t\t\tp.v = sstr.t;\r\n\t\t\t\t\t\tp.r = sstr.r;\r\n\t\t\t\t\t\tif(opts.cellHTML) p.h = sstr.h;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'str':\r\n\t\t\t\t\tp.t = \"s\";\r\n\t\t\t\t\tp.v = (p.v!=null) ? utf8read(p.v) : '';\r\n\t\t\t\t\tif(opts.cellHTML) p.h = escapehtml(p.v);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'inlineStr':\r\n\t\t\t\t\tcref = d.match(isregex);\r\n\t\t\t\t\tp.t = 's';\r\n\t\t\t\t\tif(cref != null && (sstr = parse_si(cref[1]))) p.v = sstr.t; else p.v = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'b': p.v = parsexmlbool(p.v); break;\r\n\t\t\t\tcase 'd':\r\n\t\t\t\t\tif(opts.cellDates) p.v = parseDate(p.v, 1);\r\n\t\t\t\t\telse { p.v = datenum(parseDate(p.v, 1)); p.t = 'n'; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t/* error string in .w, number in .v */\r\n\t\t\t\tcase 'e':\r\n\t\t\t\t\tif(!opts || opts.cellText !== false) p.w = p.v;\r\n\t\t\t\t\tp.v = RBErr[p.v]; break;\r\n\t\t\t}\r\n\t\t\t/* formatting */\r\n\t\t\tfmtid = fillid = 0;\r\n\t\t\tif(do_format && tag.s !== undefined) {\r\n\t\t\t\tcf = styles.CellXf[tag.s];\r\n\t\t\t\tif(cf != null) {\r\n\t\t\t\t\tif(cf.numFmtId != null) fmtid = cf.numFmtId;\r\n\t\t\t\t\tif(opts.cellStyles) {\r\n\t\t\t\t\t\tif(cf.fillId != null) fillid = cf.fillId;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsafe_format(p, fmtid, fillid, opts, themes, styles);\r\n\t\t\tif(opts.cellDates && do_format && p.t == 'n' && SSF.is_date(SSF._table[fmtid])) { p.t = 'd'; p.v = numdate(p.v); }\r\n\t\t\tif(dense) {\r\n\t\t\t\tvar _r = decode_cell(tag.r);\r\n\t\t\t\tif(!s[_r.r]) s[_r.r] = [];\r\n\t\t\t\ts[_r.r][_r.c] = p;\r\n\t\t\t} else s[tag.r] = p;\r\n\t\t}\r\n\t}\r\n\tif(rows.length > 0) s['!rows'] = rows;\r\n}; })();\r\n\r\nfunction write_ws_xml_data(ws, opts, idx, wb) {\r\n\tvar o = [], r = [], range = safe_decode_range(ws['!ref']), cell=\"\", ref, rr = \"\", cols = [], R=0, C=0, rows = ws['!rows'];\r\n\tvar dense = Array.isArray(ws);\r\n\tvar params = ({r:rr}), row, height = -1;\r\n\tfor(C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\r\n\tfor(R = range.s.r; R <= range.e.r; ++R) {\r\n\t\tr = [];\r\n\t\trr = encode_row(R);\r\n\t\tfor(C = range.s.c; C <= range.e.c; ++C) {\r\n\t\t\tref = cols[C] + rr;\r\n\t\t\tvar _cell = dense ? (ws[R]||[])[C]: ws[ref];\r\n\t\t\tif(_cell === undefined) continue;\r\n\t\t\tif((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb)) != null) r.push(cell);\r\n\t\t}\r\n\t\tif(r.length > 0 || (rows && rows[R])) {\r\n\t\t\tparams = ({r:rr});\r\n\t\t\tif(rows && rows[R]) {\r\n\t\t\t\trow = rows[R];\r\n\t\t\t\tif(row.hidden) params.hidden = 1;\r\n\t\t\t\theight = -1;\r\n\t\t\t\tif (row.hpx) height = px2pt(row.hpx);\r\n\t\t\t\telse if (row.hpt) height = row.hpt;\r\n\t\t\t\tif (height > -1) { params.ht = height; params.customHeight = 1; }\r\n\t\t\t\tif (row.level) { params.outlineLevel = row.level; }\r\n\t\t\t}\r\n\t\t\to[o.length] = (writextag('row', r.join(\"\"), params));\r\n\t\t}\r\n\t}\r\n\tif(rows) for(; R < rows.length; ++R) {\r\n\t\tif(rows && rows[R]) {\r\n\t\t\tparams = ({r:R+1});\r\n\t\t\trow = rows[R];\r\n\t\t\tif(row.hidden) params.hidden = 1;\r\n\t\t\theight = -1;\r\n\t\t\tif (row.hpx) height = px2pt(row.hpx);\r\n\t\t\telse if (row.hpt) height = row.hpt;\r\n\t\t\tif (height > -1) { params.ht = height; params.customHeight = 1; }\r\n\t\t\tif (row.level) { params.outlineLevel = row.level; }\r\n\t\t\to[o.length] = (writextag('row', \"\", params));\r\n\t\t}\r\n\t}\r\n\treturn o.join(\"\");\r\n}\r\n\r\nvar WS_XML_ROOT = writextag('worksheet', null, {\r\n\t'xmlns': XMLNS.main[0],\r\n\t'xmlns:r': XMLNS.r\r\n});\r\n\r\nfunction write_ws_xml(idx, opts, wb, rels) {\r\n\tvar o = [XML_HEADER, WS_XML_ROOT];\r\n\tvar s = wb.SheetNames[idx], sidx = 0, rdata = \"\";\r\n\tvar ws = wb.Sheets[s];\r\n\tif(ws == null) ws = {};\r\n\tvar ref = ws['!ref']; if(ref == null) ref = 'A1';\r\n\tif(!rels) rels = {};\r\n\tws['!comments'] = [];\r\n\tws['!drawing'] = [];\r\n\r\n\tif(opts.bookType !== 'xlsx' && wb.vbaraw) {\r\n\t\tvar cname = wb.SheetNames[idx];\r\n\t\ttry { if(wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname; } catch(e) {}\r\n\t\to[o.length] = (writextag('sheetPr', null, {'codeName': escapexml(cname)}));\r\n\t}\r\n\r\n\to[o.length] = (writextag('dimension', null, {'ref': ref}));\r\n\r\n\to[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\r\n\r\n\t/* TODO: store in WB, process styles */\r\n\tif(opts.sheetFormat) o[o.length] = (writextag('sheetFormatPr', null, {\r\n\t\tdefaultRowHeight:opts.sheetFormat.defaultRowHeight||'16',\r\n\t\tbaseColWidth:opts.sheetFormat.baseColWidth||'10',\r\n\t\toutlineLevelRow:opts.sheetFormat.outlineLevelRow||'7'\r\n\t}));\r\n\r\n\tif(ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = (write_ws_xml_cols(ws, ws['!cols']));\r\n\r\n\to[sidx = o.length] = '<sheetData/>';\r\n\tws['!links'] = [];\r\n\tif(ws['!ref'] != null) {\r\n\t\trdata = write_ws_xml_data(ws, opts, idx, wb, rels);\r\n\t\tif(rdata.length > 0) o[o.length] = (rdata);\r\n\t}\r\n\tif(o.length>sidx+1) { o[o.length] = ('</sheetData>'); o[sidx]=o[sidx].replace(\"/>\",\">\"); }\r\n\r\n\t/* sheetCalcPr */\r\n\r\n\tif(ws['!protect'] != null) o[o.length] = write_ws_xml_protection(ws['!protect']);\r\n\r\n\t/* protectedRanges */\r\n\t/* scenarios */\r\n\r\n\tif(ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter']);\r\n\r\n\t/* sortState */\r\n\t/* dataConsolidate */\r\n\t/* customSheetViews */\r\n\r\n\tif(ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = (write_ws_xml_merges(ws['!merges']));\r\n\r\n\t/* phoneticPr */\r\n\t/* conditionalFormatting */\r\n\t/* dataValidations */\r\n\r\n\tvar relc = -1, rel, rId = -1;\r\n\tif(ws['!links'].length > 0) {\r\n\t\to[o.length] = \"<hyperlinks>\";\r\n\t\tws['!links'].forEach(function(l) {\r\n\t\t\tif(!l[1].Target) return;\r\n\t\t\trel = ({\"ref\":l[0]});\r\n\t\t\tif(l[1].Target.charAt(0) != \"#\") {\r\n\t\t\t\trId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\r\n\t\t\t\trel[\"r:id\"] = \"rId\"+rId;\r\n\t\t\t}\r\n\t\t\tif((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc+1));\r\n\t\t\tif(l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\r\n\t\t\to[o.length] = writextag(\"hyperlink\",null,rel);\r\n\t\t});\r\n\t\to[o.length] = \"</hyperlinks>\";\r\n\t}\r\n\tdelete ws['!links'];\r\n\r\n\t/* printOptions */\r\n\tif (ws['!margins'] != null) o[o.length] =  write_ws_xml_margins(ws['!margins']);\r\n\t/* pageSetup */\r\n\r\n\t//var hfidx = o.length;\r\n\to[o.length] = \"\";\r\n\r\n\t/* rowBreaks */\r\n\t/* colBreaks */\r\n\t/* customProperties */\r\n\t/* cellWatches */\r\n\r\n\to[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {numberStoredAsText:1, sqref:ref}));\r\n\r\n\t/* smartTags */\r\n\r\n\tif(ws['!drawing'].length > 0) {\r\n\t\trId = add_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\r\n\t\to[o.length] = writextag(\"drawing\", null, {\"r:id\":\"rId\" + rId});\r\n\t}\r\n\telse delete ws['!drawing'];\r\n\r\n\tif(ws['!comments'].length > 0) {\r\n\t\trId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\r\n\t\to[o.length] = writextag(\"legacyDrawing\", null, {\"r:id\":\"rId\" + rId});\r\n\t\tws['!legacy'] = rId;\r\n\t}\r\n\r\n\t/* drawingHF */\r\n\t/* picture */\r\n\t/* oleObjects */\r\n\t/* controls */\r\n\t/* webPublishItems */\r\n\t/* tableParts */\r\n\t/* extList */\r\n\r\n\tif(o.length>2) { o[o.length] = ('</worksheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n\r\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\r\nfunction parse_BrtRowHdr(data, length) {\r\n\tvar z = ({});\r\n\tvar tgt = data.l + length;\r\n\tz.r = data.read_shift(4);\r\n\tdata.l += 4; // TODO: ixfe\r\n\tvar miyRw = data.read_shift(2);\r\n\tdata.l += 1; // TODO: top/bot padding\r\n\tvar flags = data.read_shift(1);\r\n\tdata.l = tgt;\r\n\tif(flags & 0x07) z.level = flags & 0x07;\r\n\tif(flags & 0x10) z.hidden = true;\r\n\tif(flags & 0x20) z.hpt = miyRw / 20;\r\n\treturn z;\r\n}\r\nfunction write_BrtRowHdr(R, range, ws) {\r\n\tvar o = new_buf(17+8*16);\r\n\tvar row = (ws['!rows']||[])[R]||{};\r\n\to.write_shift(4, R);\r\n\r\n\to.write_shift(4, 0); /* TODO: ixfe */\r\n\r\n\tvar miyRw = 0x0140;\r\n\tif(row.hpx) miyRw = px2pt(row.hpx) * 20;\r\n\telse if(row.hpt) miyRw = row.hpt * 20;\r\n\to.write_shift(2, miyRw);\r\n\r\n\to.write_shift(1, 0); /* top/bot padding */\r\n\r\n\tvar flags = 0x0;\r\n\tif(row.level) flags |= row.level;\r\n\tif(row.hidden) flags |= 0x10;\r\n\tif(row.hpx || row.hpt) flags |= 0x20;\r\n\to.write_shift(1, flags);\r\n\r\n\to.write_shift(1, 0); /* phonetic guide */\r\n\r\n\t/* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\r\n\tvar ncolspan = 0, lcs = o.l;\r\n\to.l += 4;\r\n\r\n\tvar caddr = {r:R, c:0};\r\n\tfor(var i = 0; i < 16; ++i) {\r\n\t\tif((range.s.c > ((i+1) << 10)) || (range.e.c < (i << 10))) continue;\r\n\t\tvar first = -1, last = -1;\r\n\t\tfor(var j = (i<<10); j < ((i+1)<<10); ++j) {\r\n\t\t\tcaddr.c = j;\r\n\t\t\tvar cell = Array.isArray(ws) ? (ws[caddr.r]||[])[caddr.c] : ws[encode_cell(caddr)];\r\n\t\t\tif(cell) { if(first < 0) first = j; last = j; }\r\n\t\t}\r\n\t\tif(first < 0) continue;\r\n\t\t++ncolspan;\r\n\t\to.write_shift(4, first);\r\n\t\to.write_shift(4, last);\r\n\t}\r\n\r\n\tvar l = o.l;\r\n\to.l = lcs;\r\n\to.write_shift(4, ncolspan);\r\n\to.l = l;\r\n\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\nfunction write_row_header(ba, ws, range, R) {\r\n\tvar o = write_BrtRowHdr(R, range, ws);\r\n\tif((o.length > 17) || (ws['!rows']||[])[R]) write_record(ba, 'BrtRowHdr', o);\r\n}\r\n\r\n/* [MS-XLSB] 2.4.820 BrtWsDim */\r\nvar parse_BrtWsDim = parse_UncheckedRfX;\r\nvar write_BrtWsDim = write_UncheckedRfX;\r\n\r\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\r\nfunction parse_BrtWsFmtInfo() {\r\n}\r\n//function write_BrtWsFmtInfo(ws, o) { }\r\n\r\n/* [MS-XLSB] 2.4.823 BrtWsProp */\r\nfunction parse_BrtWsProp(data, length) {\r\n\tvar z = {};\r\n\t/* TODO: pull flags */\r\n\tdata.l += 19;\r\n\tz.name = parse_XLSBCodeName(data, length - 19);\r\n\treturn z;\r\n}\r\nfunction write_BrtWsProp(str, o) {\r\n\tif(o == null) o = new_buf(84+4*str.length);\r\n\tfor(var i = 0; i < 3; ++i) o.write_shift(1,0);\r\n\twrite_BrtColor({auto:1}, o);\r\n\to.write_shift(-4,-1);\r\n\to.write_shift(-4,-1);\r\n\twrite_XLSBCodeName(str, o);\r\n\treturn o.slice(0, o.l);\r\n}\r\n\r\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\r\nfunction parse_BrtCellBlank(data) {\r\n\tvar cell = parse_XLSBCell(data);\r\n\treturn [cell];\r\n}\r\nfunction write_BrtCellBlank(cell, ncell, o) {\r\n\tif(o == null) o = new_buf(8);\r\n\treturn write_XLSBCell(ncell, o);\r\n}\r\n\r\n\r\n/* [MS-XLSB] 2.4.307 BrtCellBool */\r\nfunction parse_BrtCellBool(data) {\r\n\tvar cell = parse_XLSBCell(data);\r\n\tvar fBool = data.read_shift(1);\r\n\treturn [cell, fBool, 'b'];\r\n}\r\nfunction write_BrtCellBool(cell, ncell, o) {\r\n\tif(o == null) o = new_buf(9);\r\n\twrite_XLSBCell(ncell, o);\r\n\to.write_shift(1, cell.v ? 1 : 0);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.308 BrtCellError */\r\nfunction parse_BrtCellError(data) {\r\n\tvar cell = parse_XLSBCell(data);\r\n\tvar bError = data.read_shift(1);\r\n\treturn [cell, bError, 'e'];\r\n}\r\n\r\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\r\nfunction parse_BrtCellIsst(data) {\r\n\tvar cell = parse_XLSBCell(data);\r\n\tvar isst = data.read_shift(4);\r\n\treturn [cell, isst, 's'];\r\n}\r\nfunction write_BrtCellIsst(cell, ncell, o) {\r\n\tif(o == null) o = new_buf(12);\r\n\twrite_XLSBCell(ncell, o);\r\n\to.write_shift(4, ncell.v);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.313 BrtCellReal */\r\nfunction parse_BrtCellReal(data) {\r\n\tvar cell = parse_XLSBCell(data);\r\n\tvar value = parse_Xnum(data);\r\n\treturn [cell, value, 'n'];\r\n}\r\nfunction write_BrtCellReal(cell, ncell, o) {\r\n\tif(o == null) o = new_buf(16);\r\n\twrite_XLSBCell(ncell, o);\r\n\twrite_Xnum(cell.v, o);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.314 BrtCellRk */\r\nfunction parse_BrtCellRk(data) {\r\n\tvar cell = parse_XLSBCell(data);\r\n\tvar value = parse_RkNumber(data);\r\n\treturn [cell, value, 'n'];\r\n}\r\nfunction write_BrtCellRk(cell, ncell, o) {\r\n\tif(o == null) o = new_buf(12);\r\n\twrite_XLSBCell(ncell, o);\r\n\twrite_RkNumber(cell.v, o);\r\n\treturn o;\r\n}\r\n\r\n\r\n/* [MS-XLSB] 2.4.317 BrtCellSt */\r\nfunction parse_BrtCellSt(data) {\r\n\tvar cell = parse_XLSBCell(data);\r\n\tvar value = parse_XLWideString(data);\r\n\treturn [cell, value, 'str'];\r\n}\r\nfunction write_BrtCellSt(cell, ncell, o) {\r\n\tif(o == null) o = new_buf(12 + 4 * cell.v.length);\r\n\twrite_XLSBCell(ncell, o);\r\n\twrite_XLWideString(cell.v, o);\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\r\nfunction parse_BrtFmlaBool(data, length, opts) {\r\n\tvar end = data.l + length;\r\n\tvar cell = parse_XLSBCell(data);\r\n\tcell.r = opts['!row'];\r\n\tvar value = data.read_shift(1);\r\n\tvar o = [cell, value, 'b'];\r\n\tif(opts.cellFormula) {\r\n\t\tdata.l += 2;\r\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\r\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\r\n\t}\r\n\telse data.l = end;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\r\nfunction parse_BrtFmlaError(data, length, opts) {\r\n\tvar end = data.l + length;\r\n\tvar cell = parse_XLSBCell(data);\r\n\tcell.r = opts['!row'];\r\n\tvar value = data.read_shift(1);\r\n\tvar o = [cell, value, 'e'];\r\n\tif(opts.cellFormula) {\r\n\t\tdata.l += 2;\r\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\r\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\r\n\t}\r\n\telse data.l = end;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\r\nfunction parse_BrtFmlaNum(data, length, opts) {\r\n\tvar end = data.l + length;\r\n\tvar cell = parse_XLSBCell(data);\r\n\tcell.r = opts['!row'];\r\n\tvar value = parse_Xnum(data);\r\n\tvar o = [cell, value, 'n'];\r\n\tif(opts.cellFormula) {\r\n\t\tdata.l += 2;\r\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\r\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\r\n\t}\r\n\telse data.l = end;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\r\nfunction parse_BrtFmlaString(data, length, opts) {\r\n\tvar end = data.l + length;\r\n\tvar cell = parse_XLSBCell(data);\r\n\tcell.r = opts['!row'];\r\n\tvar value = parse_XLWideString(data);\r\n\tvar o = [cell, value, 'str'];\r\n\tif(opts.cellFormula) {\r\n\t\tdata.l += 2;\r\n\t\tvar formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\r\n\t\to[3] = stringify_formula(formula, null/*range*/, cell, opts.supbooks, opts);/* TODO */\r\n\t}\r\n\telse data.l = end;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\r\nvar parse_BrtMergeCell = parse_UncheckedRfX;\r\nvar write_BrtMergeCell = write_UncheckedRfX;\r\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\r\nfunction write_BrtBeginMergeCells(cnt, o) {\r\n\tif(o == null) o = new_buf(4);\r\n\to.write_shift(4, cnt);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.662 BrtHLink */\r\nfunction parse_BrtHLink(data, length) {\r\n\tvar end = data.l + length;\r\n\tvar rfx = parse_UncheckedRfX(data, 16);\r\n\tvar relId = parse_XLNullableWideString(data);\r\n\tvar loc = parse_XLWideString(data);\r\n\tvar tooltip = parse_XLWideString(data);\r\n\tvar display = parse_XLWideString(data);\r\n\tdata.l = end;\r\n\tvar o = ({rfx:rfx, relId:relId, loc:loc, display:display});\r\n\tif(tooltip) o.Tooltip = tooltip;\r\n\treturn o;\r\n}\r\nfunction write_BrtHLink(l, rId) {\r\n\tvar o = new_buf(50+4*(l[1].Target.length + (l[1].Tooltip || \"\").length));\r\n\twrite_UncheckedRfX({s:decode_cell(l[0]), e:decode_cell(l[0])}, o);\r\n\twrite_RelID(\"rId\" + rId, o);\r\n\tvar locidx = l[1].Target.indexOf(\"#\");\r\n\tvar loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx+1);\r\n\twrite_XLWideString(loc || \"\", o);\r\n\twrite_XLWideString(l[1].Tooltip || \"\", o);\r\n\twrite_XLWideString(\"\", o);\r\n\treturn o.slice(0, o.l);\r\n}\r\n\r\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\r\nfunction parse_BrtArrFmla(data, length, opts) {\r\n\tvar end = data.l + length;\r\n\tvar rfx = parse_RfX(data, 16);\r\n\tvar fAlwaysCalc = data.read_shift(1);\r\n\tvar o = [rfx]; o[2] = fAlwaysCalc;\r\n\tif(opts.cellFormula) {\r\n\t\tvar formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\r\n\t\to[1] = formula;\r\n\t} else data.l = end;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\r\nfunction parse_BrtShrFmla(data, length, opts) {\r\n\tvar end = data.l + length;\r\n\tvar rfx = parse_UncheckedRfX(data, 16);\r\n\tvar o = [rfx];\r\n\tif(opts.cellFormula) {\r\n\t\tvar formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\r\n\t\to[1] = formula;\r\n\t\tdata.l = end;\r\n\t} else data.l = end;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.323 BrtColInfo */\r\n/* TODO: once XLS ColInfo is set, combine the functions */\r\nfunction write_BrtColInfo(C, col, o) {\r\n\tif(o == null) o = new_buf(18);\r\n\tvar p = col_obj_w(C, col);\r\n\to.write_shift(-4, C);\r\n\to.write_shift(-4, C);\r\n\to.write_shift(4, (p.width || 10) * 256);\r\n\to.write_shift(4, 0/*ixfe*/); // style\r\n\tvar flags = 0;\r\n\tif(col.hidden) flags |= 0x01;\r\n\tif(typeof p.width == 'number') flags |= 0x02;\r\n\to.write_shift(1, flags); // bit flag\r\n\to.write_shift(1, 0); // bit flag\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.678 BrtMargins */\r\nvar BrtMarginKeys = [\"left\",\"right\",\"top\",\"bottom\",\"header\",\"footer\"];\r\nfunction parse_BrtMargins(data) {\r\n\tvar margins = ({});\r\n\tBrtMarginKeys.forEach(function(k) { margins[k] = parse_Xnum(data, 8); });\r\n\treturn margins;\r\n}\r\nfunction write_BrtMargins(margins, o) {\r\n\tif(o == null) o = new_buf(6*8);\r\n\tdefault_margins(margins);\r\n\tBrtMarginKeys.forEach(function(k) { write_Xnum((margins)[k], o); });\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\r\nfunction parse_BrtBeginWsView(data) {\r\n\tvar f = data.read_shift(2);\r\n\tdata.l += 28;\r\n\treturn { RTL: f & 0x20 };\r\n}\r\nfunction write_BrtBeginWsView(ws, Workbook, o) {\r\n\tif(o == null) o = new_buf(30);\r\n\tvar f = 0x39c;\r\n\tif((((Workbook||{}).Views||[])[0]||{}).RTL) f |= 0x20;\r\n\to.write_shift(2, f); // bit flag\r\n\to.write_shift(4, 0);\r\n\to.write_shift(4, 0); // view first row\r\n\to.write_shift(4, 0); // view first col\r\n\to.write_shift(1, 0); // gridline color ICV\r\n\to.write_shift(1, 0);\r\n\to.write_shift(2, 0);\r\n\to.write_shift(2, 100); // zoom scale\r\n\to.write_shift(2, 0);\r\n\to.write_shift(2, 0);\r\n\to.write_shift(2, 0);\r\n\to.write_shift(4, 0); // workbook view id\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\r\nfunction write_BrtCellIgnoreEC(ref) {\r\n\tvar o = new_buf(24);\r\n\to.write_shift(4, 4);\r\n\to.write_shift(4, 1);\r\n\twrite_UncheckedRfX(ref, o);\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\r\nfunction write_BrtSheetProtection(sp, o) {\r\n\tif(o == null) o = new_buf(16*4+2);\r\n\to.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\r\n\to.write_shift(4, 1); // this record should not be written if no protection\r\n\t[\r\n\t\t[\"objects\",             false], // fObjects\r\n\t\t[\"scenarios\",           false], // fScenarios\r\n\t\t[\"formatCells\",          true], // fFormatCells\r\n\t\t[\"formatColumns\",        true], // fFormatColumns\r\n\t\t[\"formatRows\",           true], // fFormatRows\r\n\t\t[\"insertColumns\",        true], // fInsertColumns\r\n\t\t[\"insertRows\",           true], // fInsertRows\r\n\t\t[\"insertHyperlinks\",     true], // fInsertHyperlinks\r\n\t\t[\"deleteColumns\",        true], // fDeleteColumns\r\n\t\t[\"deleteRows\",           true], // fDeleteRows\r\n\t\t[\"selectLockedCells\",   false], // fSelLockedCells\r\n\t\t[\"sort\",                 true], // fSort\r\n\t\t[\"autoFilter\",           true], // fAutoFilter\r\n\t\t[\"pivotTables\",          true], // fPivotTables\r\n\t\t[\"selectUnlockedCells\", false]  // fSelUnlockedCells\r\n\t].forEach(function(n) {\r\nif(n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);\r\n\t\telse      o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\r\n\t});\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.1.7.61 Worksheet */\r\nfunction parse_ws_bin(data, _opts, idx, rels, wb, themes, styles) {\r\n\tif(!data) return data;\r\n\tvar opts = _opts || {};\r\n\tif(!rels) rels = {'!id':{}};\r\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\r\n\tvar s = (opts.dense ? [] : {});\r\n\r\n\tvar ref;\r\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\r\n\r\n\tvar pass = false, end = false;\r\n\tvar row, p, cf, R, C, addr, sstr, rr, cell;\r\n\tvar merges = [];\r\n\topts.biff = 12;\r\n\topts['!row'] = 0;\r\n\r\n\tvar ai = 0, af = false;\r\n\r\n\tvar arrayf = [];\r\n\tvar sharedf = {};\r\n\tvar supbooks = opts.supbooks || ([[]]);\r\n\tsupbooks.sharedf = sharedf;\r\n\tsupbooks.arrayf = arrayf;\r\n\tsupbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function(x) { return x.name; });\r\n\tif(!opts.supbooks) {\r\n\t\topts.supbooks = supbooks;\r\n\t\tif(wb.Names) for(var i = 0; i < wb.Names.length; ++i) supbooks[0][i+1] = wb.Names[i];\r\n\t}\r\n\r\n\tvar colinfo = [], rowinfo = [];\r\n\tvar seencol = false;\r\n\r\n\trecordhopper(data, function ws_parse(val, R_n, RT) {\r\n\t\tif(end) return;\r\n\t\tswitch(RT) {\r\n\t\t\tcase 0x0094: /* 'BrtWsDim' */\r\n\t\t\t\tref = val; break;\r\n\t\t\tcase 0x0000: /* 'BrtRowHdr' */\r\n\t\t\t\trow = val;\r\n\t\t\t\tif(opts.sheetRows && opts.sheetRows <= row.r) end=true;\r\n\t\t\t\trr = encode_row(R = row.r);\r\n\t\t\t\topts['!row'] = row.r;\r\n\t\t\t\tif(val.hidden || val.hpt || val.level != null) {\r\n\t\t\t\t\tif(val.hpt) val.hpx = pt2px(val.hpt);\r\n\t\t\t\t\trowinfo[val.r] = val;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0002: /* 'BrtCellRk' */\r\n\t\t\tcase 0x0003: /* 'BrtCellError' */\r\n\t\t\tcase 0x0004: /* 'BrtCellBool' */\r\n\t\t\tcase 0x0005: /* 'BrtCellReal' */\r\n\t\t\tcase 0x0006: /* 'BrtCellSt' */\r\n\t\t\tcase 0x0007: /* 'BrtCellIsst' */\r\n\t\t\tcase 0x0008: /* 'BrtFmlaString' */\r\n\t\t\tcase 0x0009: /* 'BrtFmlaNum' */\r\n\t\t\tcase 0x000A: /* 'BrtFmlaBool' */\r\n\t\t\tcase 0x000B: /* 'BrtFmlaError' */\r\n\t\t\t\tp = ({t:val[2]});\r\n\t\t\t\tswitch(val[2]) {\r\n\t\t\t\t\tcase 'n': p.v = val[1]; break;\r\n\t\t\t\t\tcase 's': sstr = strs[val[1]]; p.v = sstr.t; p.r = sstr.r; break;\r\n\t\t\t\t\tcase 'b': p.v = val[1] ? true : false; break;\r\n\t\t\t\t\tcase 'e': p.v = val[1]; if(opts.cellText !== false) p.w = BErr[p.v]; break;\r\n\t\t\t\t\tcase 'str': p.t = 's'; p.v = val[1]; break;\r\n\t\t\t\t}\r\n\t\t\t\tif((cf = styles.CellXf[val[0].iStyleRef])) safe_format(p,cf.numFmtId,null,opts, themes, styles);\r\n\t\t\t\tC = val[0].c;\r\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\r\n\t\t\t\telse s[encode_col(C) + rr] = p;\r\n\t\t\t\tif(opts.cellFormula) {\r\n\t\t\t\t\taf = false;\r\n\t\t\t\t\tfor(ai = 0; ai < arrayf.length; ++ai) {\r\n\t\t\t\t\t\tvar aii = arrayf[ai];\r\n\t\t\t\t\t\tif(row.r >= aii[0].s.r && row.r <= aii[0].e.r)\r\n\t\t\t\t\t\t\tif(C >= aii[0].s.c && C <= aii[0].e.c) {\r\n\t\t\t\t\t\t\t\tp.F = encode_range(aii[0]); af = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!af && val.length > 3) p.f = val[3];\r\n\t\t\t\t}\r\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\r\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\r\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\r\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\r\n\t\t\t\tif(opts.cellDates && cf && p.t == 'n' && SSF.is_date(SSF._table[cf.numFmtId])) {\r\n\t\t\t\t\tvar _d = SSF.parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0001: /* 'BrtCellBlank' */\r\n\t\t\t\tif(!opts.sheetStubs || pass) break;\r\n\t\t\t\tp = ({t:'z',v:undefined});\r\n\t\t\t\tC = val[0].c;\r\n\t\t\t\tif(opts.dense) { if(!s[R]) s[R] = []; s[R][C] = p; }\r\n\t\t\t\telse s[encode_col(C) + rr] = p;\r\n\t\t\t\tif(refguess.s.r > row.r) refguess.s.r = row.r;\r\n\t\t\t\tif(refguess.s.c > C) refguess.s.c = C;\r\n\t\t\t\tif(refguess.e.r < row.r) refguess.e.r = row.r;\r\n\t\t\t\tif(refguess.e.c < C) refguess.e.c = C;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x00B0: /* 'BrtMergeCell' */\r\n\t\t\t\tmerges.push(val); break;\r\n\r\n\t\t\tcase 0x01EE: /* 'BrtHLink' */\r\n\t\t\t\tvar rel = rels['!id'][val.relId];\r\n\t\t\t\tif(rel) {\r\n\t\t\t\t\tval.Target = rel.Target;\r\n\t\t\t\t\tif(val.loc) val.Target += \"#\"+val.loc;\r\n\t\t\t\t\tval.Rel = rel;\r\n\t\t\t\t} else if(val.relId == '') {\r\n\t\t\t\t\tval.Target = \"#\" + val.loc;\r\n\t\t\t\t}\r\n\t\t\t\tfor(R=val.rfx.s.r;R<=val.rfx.e.r;++R) for(C=val.rfx.s.c;C<=val.rfx.e.c;++C) {\r\n\t\t\t\t\tif(opts.dense) {\r\n\t\t\t\t\t\tif(!s[R]) s[R] = [];\r\n\t\t\t\t\t\tif(!s[R][C]) s[R][C] = {t:'z',v:undefined};\r\n\t\t\t\t\t\ts[R][C].l = val;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\taddr = encode_cell({c:C,r:R});\r\n\t\t\t\t\t\tif(!s[addr]) s[addr] = {t:'z',v:undefined};\r\n\t\t\t\t\t\ts[addr].l = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x01AA: /* 'BrtArrFmla' */\r\n\t\t\t\tif(!opts.cellFormula) break;\r\n\t\t\t\tarrayf.push(val);\r\n\t\t\t\tcell = ((opts.dense ? s[R][C] : s[encode_col(C) + rr]));\r\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\r\n\t\t\t\tcell.F = encode_range(val[0]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x01AB: /* 'BrtShrFmla' */\r\n\t\t\t\tif(!opts.cellFormula) break;\r\n\t\t\t\tsharedf[encode_cell(val[0].s)] = val[1];\r\n\t\t\t\tcell = (opts.dense ? s[R][C] : s[encode_col(C) + rr]);\r\n\t\t\t\tcell.f = stringify_formula(val[1], refguess, {r:row.r, c:C}, supbooks, opts);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* identical to 'ColInfo' in XLS */\r\n\t\t\tcase 0x003C: /* 'BrtColInfo' */\r\n\t\t\t\tif(!opts.cellStyles) break;\r\n\t\t\t\twhile(val.e >= val.s) {\r\n\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256, hidden: !!(val.flags & 0x01) };\r\n\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\r\n\t\t\t\t\tprocess_col(colinfo[val.e+1]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x00A1: /* 'BrtBeginAFilter' */\r\n\t\t\t\ts['!autofilter'] = { ref:encode_range(val) };\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\r\n\t\t\t\ts['!margins'] = val;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0093: /* 'BrtWsProp' */\r\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\r\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0089: /* 'BrtBeginWsView' */\r\n\t\t\t\tif(!wb.Views) wb.Views = [{}];\r\n\t\t\t\tif(!wb.Views[0]) wb.Views[0] = {};\r\n\t\t\t\tif(val.RTL) wb.Views[0].RTL = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x01E5: /* 'BrtWsFmtInfo' */\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x00AF: /* 'BrtAFilterDateGroupItem' */\r\n\t\t\tcase 0x0284: /* 'BrtActiveX' */\r\n\t\t\tcase 0x0271: /* 'BrtBigName' */\r\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\r\n\t\t\tcase 0x018C: /* 'BrtBrk' */\r\n\t\t\tcase 0x0458: /* 'BrtCFIcon' */\r\n\t\t\tcase 0x047A: /* 'BrtCFRuleExt' */\r\n\t\t\tcase 0x01D7: /* 'BrtCFVO' */\r\n\t\t\tcase 0x041A: /* 'BrtCFVO14' */\r\n\t\t\tcase 0x0289: /* 'BrtCellIgnoreEC' */\r\n\t\t\tcase 0x0451: /* 'BrtCellIgnoreEC14' */\r\n\t\t\tcase 0x0031: /* 'BrtCellMeta' */\r\n\t\t\tcase 0x024D: /* 'BrtCellSmartTagProperty' */\r\n\t\t\tcase 0x025F: /* 'BrtCellWatch' */\r\n\t\t\tcase 0x0234: /* 'BrtColor' */\r\n\t\t\tcase 0x041F: /* 'BrtColor14' */\r\n\t\t\tcase 0x00A8: /* 'BrtColorFilter' */\r\n\t\t\tcase 0x00AE: /* 'BrtCustomFilter' */\r\n\t\t\tcase 0x049C: /* 'BrtCustomFilter14' */\r\n\t\t\tcase 0x01F3: /* 'BrtDRef' */\r\n\t\t\tcase 0x0040: /* 'BrtDVal' */\r\n\t\t\tcase 0x041D: /* 'BrtDVal14' */\r\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\r\n\t\t\tcase 0x00AB: /* 'BrtDynamicFilter' */\r\n\t\t\tcase 0x00A7: /* 'BrtFilter' */\r\n\t\t\tcase 0x0499: /* 'BrtFilter14' */\r\n\t\t\tcase 0x00A9: /* 'BrtIconFilter' */\r\n\t\t\tcase 0x049D: /* 'BrtIconFilter14' */\r\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\r\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\r\n\t\t\tcase 0x0295: /* 'BrtListPart' */\r\n\t\t\tcase 0x027F: /* 'BrtOleObject' */\r\n\t\t\tcase 0x01DE: /* 'BrtPageSetup' */\r\n\t\t\tcase 0x0097: /* 'BrtPane' */\r\n\t\t\tcase 0x0219: /* 'BrtPhoneticInfo' */\r\n\t\t\tcase 0x01DD: /* 'BrtPrintOptions' */\r\n\t\t\tcase 0x0218: /* 'BrtRangeProtection' */\r\n\t\t\tcase 0x044F: /* 'BrtRangeProtection14' */\r\n\t\t\tcase 0x02A8: /* 'BrtRangeProtectionIso' */\r\n\t\t\tcase 0x0450: /* 'BrtRangeProtectionIso14' */\r\n\t\t\tcase 0x0400: /* 'BrtRwDescent' */\r\n\t\t\tcase 0x0098: /* 'BrtSel' */\r\n\t\t\tcase 0x0297: /* 'BrtSheetCalcProp' */\r\n\t\t\tcase 0x0217: /* 'BrtSheetProtection' */\r\n\t\t\tcase 0x02A6: /* 'BrtSheetProtectionIso' */\r\n\t\t\tcase 0x01F8: /* 'BrtSlc' */\r\n\t\t\tcase 0x0413: /* 'BrtSparkline' */\r\n\t\t\tcase 0x01AC: /* 'BrtTable' */\r\n\t\t\tcase 0x00AA: /* 'BrtTop10Filter' */\r\n\t\t\tcase 0x0C00: /* 'BrtUid' */\r\n\t\t\tcase 0x0032: /* 'BrtValueMeta' */\r\n\t\t\tcase 0x0816: /* 'BrtWebExtension' */\r\n\t\t\tcase 0x0415: /* 'BrtWsFmtInfoEx14' */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\r\n\t\t\t\tpass = true; break;\r\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\r\n\t\t\t\tpass = false; break;\r\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\r\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\r\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\r\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\r\n\t\t}\r\n\t}, opts);\r\n\r\n\tdelete opts.supbooks;\r\n\tdelete opts['!row'];\r\n\r\n\tif(!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\r\n\tif(opts.sheetRows && s[\"!ref\"]) {\r\n\t\tvar tmpref = safe_decode_range(s[\"!ref\"]);\r\n\t\tif(opts.sheetRows <= +tmpref.e.r) {\r\n\t\t\ttmpref.e.r = opts.sheetRows - 1;\r\n\t\t\tif(tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\r\n\t\t\tif(tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\r\n\t\t\tif(tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\r\n\t\t\tif(tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\r\n\t\t\ts[\"!fullref\"] = s[\"!ref\"];\r\n\t\t\ts[\"!ref\"] = encode_range(tmpref);\r\n\t\t}\r\n\t}\r\n\tif(merges.length > 0) s[\"!merges\"] = merges;\r\n\tif(colinfo.length > 0) s[\"!cols\"] = colinfo;\r\n\tif(rowinfo.length > 0) s[\"!rows\"] = rowinfo;\r\n\treturn s;\r\n}\r\n\r\n/* TODO: something useful -- this is a stub */\r\nfunction write_ws_bin_cell(ba, cell, R, C, opts, ws) {\r\n\tif(cell.v === undefined) return \"\";\r\n\tvar vv = \"\";\r\n\tswitch(cell.t) {\r\n\t\tcase 'b': vv = cell.v ? \"1\" : \"0\"; break;\r\n\t\tcase 'd': // no BrtCellDate :(\r\n\t\t\tcell = dup(cell);\r\n\t\t\tcell.z = cell.z || SSF._table[14];\r\n\t\t\tcell.v = datenum(parseDate(cell.v)); cell.t = 'n';\r\n\t\t\tbreak;\r\n\t\t/* falls through */\r\n\t\tcase 'n': case 'e': vv = ''+cell.v; break;\r\n\t\tdefault: vv = cell.v; break;\r\n\t}\r\n\tvar o = ({r:R, c:C});\r\n\t/* TODO: cell style */\r\n\to.s = get_cell_style(opts.cellXfs, cell, opts);\r\n\tif(cell.l) ws['!links'].push([encode_cell(o), cell.l]);\r\n\tif(cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\r\n\tswitch(cell.t) {\r\n\t\tcase 's': case 'str':\r\n\t\t\tif(opts.bookSST) {\r\n\t\t\t\tvv = get_sst_id(opts.Strings, (cell.v));\r\n\t\t\t\to.t = \"s\"; o.v = vv;\r\n\t\t\t\twrite_record(ba, \"BrtCellIsst\", write_BrtCellIsst(cell, o));\r\n\t\t\t} else {\r\n\t\t\t\to.t = \"str\";\r\n\t\t\t\twrite_record(ba, \"BrtCellSt\", write_BrtCellSt(cell, o));\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\tcase 'n':\r\n\t\t\t/* TODO: determine threshold for Real vs RK */\r\n\t\t\tif(cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) write_record(ba, \"BrtCellRk\", write_BrtCellRk(cell, o));\r\n\t\t\telse write_record(ba, \"BrtCellReal\", write_BrtCellReal(cell, o));\r\n\t\t\treturn;\r\n\t\tcase 'b':\r\n\t\t\to.t = \"b\";\r\n\t\t\twrite_record(ba, \"BrtCellBool\", write_BrtCellBool(cell, o));\r\n\t\t\treturn;\r\n\t\tcase 'e': /* TODO: error */ o.t = \"e\"; break;\r\n\t}\r\n\twrite_record(ba, \"BrtCellBlank\", write_BrtCellBlank(cell, o));\r\n}\r\n\r\nfunction write_CELLTABLE(ba, ws, idx, opts) {\r\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols = [];\r\n\twrite_record(ba, 'BrtBeginSheetData');\r\n\tvar dense = Array.isArray(ws);\r\n\tvar cap = range.e.r;\r\n\tif(ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\r\n\tfor(var R = range.s.r; R <= cap; ++R) {\r\n\t\trr = encode_row(R);\r\n\t\t/* [ACCELLTABLE] */\r\n\t\t/* BrtRowHdr */\r\n\t\twrite_row_header(ba, ws, range, R);\r\n\t\tif(R <= range.e.r) for(var C = range.s.c; C <= range.e.c; ++C) {\r\n\t\t\t/* *16384CELL */\r\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\r\n\t\t\tref = cols[C] + rr;\r\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\r\n\t\t\tif(!cell) continue;\r\n\t\t\t/* write cell */\r\n\t\t\twrite_ws_bin_cell(ba, cell, R, C, opts, ws);\r\n\t\t}\r\n\t}\r\n\twrite_record(ba, 'BrtEndSheetData');\r\n}\r\n\r\nfunction write_MERGECELLS(ba, ws) {\r\n\tif(!ws || !ws['!merges']) return;\r\n\twrite_record(ba, 'BrtBeginMergeCells', write_BrtBeginMergeCells(ws['!merges'].length));\r\n\tws['!merges'].forEach(function(m) { write_record(ba, 'BrtMergeCell', write_BrtMergeCell(m)); });\r\n\twrite_record(ba, 'BrtEndMergeCells');\r\n}\r\n\r\nfunction write_COLINFOS(ba, ws) {\r\n\tif(!ws || !ws['!cols']) return;\r\n\twrite_record(ba, 'BrtBeginColInfos');\r\n\tws['!cols'].forEach(function(m, i) { if(m) write_record(ba, 'BrtColInfo', write_BrtColInfo(i, m)); });\r\n\twrite_record(ba, 'BrtEndColInfos');\r\n}\r\n\r\nfunction write_IGNOREECS(ba, ws) {\r\n\tif(!ws || !ws['!ref']) return;\r\n\twrite_record(ba, 'BrtBeginCellIgnoreECs');\r\n\twrite_record(ba, 'BrtCellIgnoreEC', write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\r\n\twrite_record(ba, 'BrtEndCellIgnoreECs');\r\n}\r\n\r\nfunction write_HLINKS(ba, ws, rels) {\r\n\t/* *BrtHLink */\r\n\tws['!links'].forEach(function(l) {\r\n\t\tif(!l[1].Target) return;\r\n\t\tvar rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\r\n\t\twrite_record(ba, \"BrtHLink\", write_BrtHLink(l, rId));\r\n\t});\r\n\tdelete ws['!links'];\r\n}\r\nfunction write_LEGACYDRAWING(ba, ws, idx, rels) {\r\n\t/* [BrtLegacyDrawing] */\r\n\tif(ws['!comments'].length > 0) {\r\n\t\tvar rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx+1) + \".vml\", RELS.VML);\r\n\t\twrite_record(ba, \"BrtLegacyDrawing\", write_RelID(\"rId\" + rId));\r\n\t\tws['!legacy'] = rId;\r\n\t}\r\n}\r\n\r\nfunction write_AUTOFILTER(ba, ws) {\r\n\tif(!ws['!autofilter']) return;\r\n\twrite_record(ba, \"BrtBeginAFilter\", write_UncheckedRfX(safe_decode_range(ws['!autofilter'].ref)));\r\n\t/* *FILTERCOLUMN */\r\n\t/* [SORTSTATE] */\r\n\t/* BrtEndAFilter */\r\n\twrite_record(ba, \"BrtEndAFilter\");\r\n}\r\n\r\nfunction write_WSVIEWS2(ba, ws, Workbook) {\r\n\twrite_record(ba, \"BrtBeginWsViews\");\r\n\t{ /* 1*WSVIEW2 */\r\n\t\t/* [ACUID] */\r\n\t\twrite_record(ba, \"BrtBeginWsView\", write_BrtBeginWsView(ws, Workbook));\r\n\t\t/* [BrtPane] */\r\n\t\t/* *4BrtSel */\r\n\t\t/* *4SXSELECT */\r\n\t\t/* *FRT */\r\n\t\twrite_record(ba, \"BrtEndWsView\");\r\n\t}\r\n\t/* *FRT */\r\n\twrite_record(ba, \"BrtEndWsViews\");\r\n}\r\n\r\nfunction write_WSFMTINFO() {\r\n\t/* [ACWSFMTINFO] */\r\n\t//write_record(ba, \"BrtWsFmtInfo\", write_BrtWsFmtInfo(ws));\r\n}\r\n\r\nfunction write_SHEETPROTECT(ba, ws) {\r\n\tif(!ws['!protect']) return;\r\n\t/* [BrtSheetProtectionIso] */\r\n\twrite_record(ba, \"BrtSheetProtection\", write_BrtSheetProtection(ws['!protect']));\r\n}\r\n\r\nfunction write_ws_bin(idx, opts, wb, rels) {\r\n\tvar ba = buf_array();\r\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\r\n\tvar c = s; try { if(wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c; } catch(e) {}\r\n\tvar r = safe_decode_range(ws['!ref'] || \"A1\");\r\n\tws['!links'] = [];\r\n\t/* passed back to write_zip and removed there */\r\n\tws['!comments'] = [];\r\n\twrite_record(ba, \"BrtBeginSheet\");\r\n\tif(wb.vbaraw) write_record(ba, \"BrtWsProp\", write_BrtWsProp(c));\r\n\twrite_record(ba, \"BrtWsDim\", write_BrtWsDim(r));\r\n\twrite_WSVIEWS2(ba, ws, wb.Workbook);\r\n\twrite_WSFMTINFO(ba, ws);\r\n\twrite_COLINFOS(ba, ws, idx, opts, wb);\r\n\twrite_CELLTABLE(ba, ws, idx, opts, wb);\r\n\t/* [BrtSheetCalcProp] */\r\n\twrite_SHEETPROTECT(ba, ws);\r\n\t/* *([BrtRangeProtectionIso] BrtRangeProtection) */\r\n\t/* [SCENMAN] */\r\n\twrite_AUTOFILTER(ba, ws);\r\n\t/* [SORTSTATE] */\r\n\t/* [DCON] */\r\n\t/* [USERSHVIEWS] */\r\n\twrite_MERGECELLS(ba, ws);\r\n\t/* [BrtPhoneticInfo] */\r\n\t/* *CONDITIONALFORMATTING */\r\n\t/* [DVALS] */\r\n\twrite_HLINKS(ba, ws, rels);\r\n\t/* [BrtPrintOptions] */\r\n\tif(ws['!margins']) write_record(ba, \"BrtMargins\", write_BrtMargins(ws['!margins']));\r\n\t/* [BrtPageSetup] */\r\n\t/* [HEADERFOOTER] */\r\n\t/* [RWBRK] */\r\n\t/* [COLBRK] */\r\n\t/* *BrtBigName */\r\n\t/* [CELLWATCHES] */\r\n\twrite_IGNOREECS(ba, ws);\r\n\t/* [SMARTTAGS] */\r\n\t/* [BrtDrawing] */\r\n\twrite_LEGACYDRAWING(ba, ws, idx, rels);\r\n\t/* [BrtLegacyDrawingHF] */\r\n\t/* [BrtBkHim] */\r\n\t/* [OLEOBJECTS] */\r\n\t/* [ACTIVEXCONTROLS] */\r\n\t/* [WEBPUBITEMS] */\r\n\t/* [LISTPARTS] */\r\n\t/* FRTWORKSHEET */\r\n\twrite_record(ba, \"BrtEndSheet\");\r\n\treturn ba.end();\r\n}\r\nfunction parse_numCache(data) {\r\n\tvar col = [];\r\n\r\n\t/* 21.2.2.150 pt CT_NumVal */\r\n\t(data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg)||[]).forEach(function(pt) {\r\n\t\tvar q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\r\n\t\tif(!q) return;\r\n\t\tcol[+q[1]] = +q[2];\r\n\t});\r\n\r\n\t/* 21.2.2.71 formatCode CT_Xstring */\r\n\tvar nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\",\"General\"])[1]);\r\n\r\n\treturn [col, nf];\r\n}\r\n\r\n/* 21.2 DrawingML - Charts */\r\nfunction parse_chart(data, name, opts, rels, wb, csheet) {\r\n\tvar cs = ((csheet || {\"!type\":\"chart\"}));\r\n\tif(!data) return csheet;\r\n\t/* 21.2.2.27 chart CT_Chart */\r\n\r\n\tvar C = 0, R = 0, col = \"A\";\r\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\r\n\r\n\t/* 21.2.2.120 numCache CT_NumData */\r\n\t(data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm)||[]).forEach(function(nc) {\r\n\t\tvar cache = parse_numCache(nc);\r\n\t\trefguess.s.r = refguess.s.c = 0;\r\n\t\trefguess.e.c = C;\r\n\t\tcol = encode_col(C);\r\n\t\tcache[0].forEach(function(n,i) {\r\n\t\t\tcs[col + encode_row(i)] = {t:'n', v:n, z:cache[1] };\r\n\t\t\tR = i;\r\n\t\t});\r\n\t\tif(refguess.e.r < R) refguess.e.r = R;\r\n\t\t++C;\r\n\t});\r\n\tif(C > 0) cs[\"!ref\"] = encode_range(refguess);\r\n\treturn cs;\r\n}\r\nRELS.CS = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\";\r\n\r\nvar CS_XML_ROOT = writextag('chartsheet', null, {\r\n\t'xmlns': XMLNS.main[0],\r\n\t'xmlns:r': XMLNS.r\r\n});\r\n\r\n/* 18.3 Worksheets also covers Chartsheets */\r\nfunction parse_cs_xml(data, opts, idx, rels, wb) {\r\n\tif(!data) return data;\r\n\t/* 18.3.1.12 chartsheet CT_ChartSheet */\r\n\tif(!rels) rels = {'!id':{}};\r\n\tvar s = {'!type':\"chart\", '!chart':null, '!rel':\"\"};\r\n\tvar m;\r\n\r\n\t/* 18.3.1.83 sheetPr CT_ChartsheetPr */\r\n\tvar sheetPr = data.match(sheetprregex);\r\n\tif(sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\r\n\r\n\t/* 18.3.1.36 drawing CT_Drawing */\r\n\tif((m = data.match(/drawing r:id=\"(.*?)\"/))) s['!rel'] = m[1];\r\n\r\n\tif(rels['!id'][s['!rel']]) s['!chart'] = rels['!id'][s['!rel']];\r\n\treturn s;\r\n}\r\nfunction write_cs_xml(idx, opts, wb, rels) {\r\n\tvar o = [XML_HEADER, CS_XML_ROOT];\r\n\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\r\n\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\r\n\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n\r\n/* [MS-XLSB] 2.4.331 BrtCsProp */\r\nfunction parse_BrtCsProp(data, length) {\r\n\tdata.l += 10;\r\n\tvar name = parse_XLWideString(data, length - 10);\r\n\treturn { name: name };\r\n}\r\n\r\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\r\nfunction parse_cs_bin(data, opts, idx, rels, wb) {\r\n\tif(!data) return data;\r\n\tif(!rels) rels = {'!id':{}};\r\n\tvar s = {'!type':\"chart\", '!chart':null, '!rel':\"\"};\r\n\tvar state = [];\r\n\tvar pass = false;\r\n\trecordhopper(data, function cs_parse(val, R_n, RT) {\r\n\t\tswitch(RT) {\r\n\r\n\t\t\tcase 0x0226: /* 'BrtDrawing' */\r\n\t\t\t\ts['!rel'] = val; break;\r\n\r\n\t\t\tcase 0x028B: /* 'BrtCsProp' */\r\n\t\t\t\tif(!wb.Sheets[idx]) wb.Sheets[idx] = {};\r\n\t\t\t\tif(val.name) wb.Sheets[idx].CodeName = val.name;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0232: /* 'BrtBkHim' */\r\n\t\t\tcase 0x028C: /* 'BrtCsPageSetup' */\r\n\t\t\tcase 0x029D: /* 'BrtCsProtection' */\r\n\t\t\tcase 0x02A7: /* 'BrtCsProtectionIso' */\r\n\t\t\tcase 0x0227: /* 'BrtLegacyDrawing' */\r\n\t\t\tcase 0x0228: /* 'BrtLegacyDrawingHF' */\r\n\t\t\tcase 0x01DC: /* 'BrtMargins' */\r\n\t\t\tcase 0x0C00: /* 'BrtUid' */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\r\n\t\t\t\tpass = true; break;\r\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\r\n\t\t\t\tpass = false; break;\r\n\t\t\tcase 0x0025: /* 'BrtACBegin' */\r\n\t\t\t\tstate.push(R_n); break;\r\n\t\t\tcase 0x0026: /* 'BrtACEnd' */\r\n\t\t\t\tstate.pop(); break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0) state.push(R_n);\r\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0) state.pop();\r\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\r\n\t\t}\r\n\t}, opts);\r\n\r\n\tif(rels['!id'][s['!rel']]) s['!chart'] = rels['!id'][s['!rel']];\r\n\treturn s;\r\n}\r\nfunction write_cs_bin() {\r\n\tvar ba = buf_array();\r\n\twrite_record(ba, \"BrtBeginSheet\");\r\n\t/* [BrtCsProp] */\r\n\t/* CSVIEWS */\r\n\t/* [[BrtCsProtectionIso] BrtCsProtection] */\r\n\t/* [USERCSVIEWS] */\r\n\t/* [BrtMargins] */\r\n\t/* [BrtCsPageSetup] */\r\n\t/* [HEADERFOOTER] */\r\n\t/* BrtDrawing */\r\n\t/* [BrtLegacyDrawing] */\r\n\t/* [BrtLegacyDrawingHF] */\r\n\t/* [BrtBkHim] */\r\n\t/* [WEBPUBITEMS] */\r\n\t/* FRTCHARTSHEET */\r\n\twrite_record(ba, \"BrtEndSheet\");\r\n\treturn ba.end();\r\n}\r\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\r\nvar WBPropsDef = [\r\n\t['allowRefreshQuery',           false, \"bool\"],\r\n\t['autoCompressPictures',        true,  \"bool\"],\r\n\t['backupFile',                  false, \"bool\"],\r\n\t['checkCompatibility',          false, \"bool\"],\r\n\t['CodeName',                    ''],\r\n\t['date1904',                    false, \"bool\"],\r\n\t['defaultThemeVersion',         0,      \"int\"],\r\n\t['filterPrivacy',               false, \"bool\"],\r\n\t['hidePivotFieldList',          false, \"bool\"],\r\n\t['promptedSolutions',           false, \"bool\"],\r\n\t['publishItems',                false, \"bool\"],\r\n\t['refreshAllConnections',       false, \"bool\"],\r\n\t['saveExternalLinkValues',      true,  \"bool\"],\r\n\t['showBorderUnselectedTables',  true,  \"bool\"],\r\n\t['showInkAnnotation',           true,  \"bool\"],\r\n\t['showObjects',                 'all'],\r\n\t['showPivotChartFilter',        false, \"bool\"],\r\n\t['updateLinks', 'userSet']\r\n];\r\n\r\n/* 18.2.30 (CT_BookView) Defaults */\r\nvar WBViewDef = [\r\n\t['activeTab',                   0,      \"int\"],\r\n\t['autoFilterDateGrouping',      true,  \"bool\"],\r\n\t['firstSheet',                  0,      \"int\"],\r\n\t['minimized',                   false, \"bool\"],\r\n\t['showHorizontalScroll',        true,  \"bool\"],\r\n\t['showSheetTabs',               true,  \"bool\"],\r\n\t['showVerticalScroll',          true,  \"bool\"],\r\n\t['tabRatio',                    600,    \"int\"],\r\n\t['visibility',                  'visible']\r\n\t//window{Height,Width}, {x,y}Window\r\n];\r\n\r\n/* 18.2.19 (CT_Sheet) Defaults */\r\nvar SheetDef = [\r\n\t//['state', 'visible']\r\n];\r\n\r\n/* 18.2.2  (CT_CalcPr) Defaults */\r\nvar CalcPrDef = [\r\n\t['calcCompleted', 'true'],\r\n\t['calcMode', 'auto'],\r\n\t['calcOnSave', 'true'],\r\n\t['concurrentCalc', 'true'],\r\n\t['fullCalcOnLoad', 'false'],\r\n\t['fullPrecision', 'true'],\r\n\t['iterate', 'false'],\r\n\t['iterateCount', '100'],\r\n\t['iterateDelta', '0.001'],\r\n\t['refMode', 'A1']\r\n];\r\n\r\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\r\n/*var CustomWBViewDef = [\r\n\t['autoUpdate', 'false'],\r\n\t['changesSavedWin', 'false'],\r\n\t['includeHiddenRowCol', 'true'],\r\n\t['includePrintSettings', 'true'],\r\n\t['maximized', 'false'],\r\n\t['minimized', 'false'],\r\n\t['onlySync', 'false'],\r\n\t['personalView', 'false'],\r\n\t['showComments', 'commIndicator'],\r\n\t['showFormulaBar', 'true'],\r\n\t['showHorizontalScroll', 'true'],\r\n\t['showObjects', 'all'],\r\n\t['showSheetTabs', 'true'],\r\n\t['showStatusbar', 'true'],\r\n\t['showVerticalScroll', 'true'],\r\n\t['tabRatio', '600'],\r\n\t['xWindow', '0'],\r\n\t['yWindow', '0']\r\n];*/\r\n\r\nfunction push_defaults_array(target, defaults) {\r\n\tfor(var j = 0; j != target.length; ++j) { var w = target[j];\r\n\t\tfor(var i=0; i != defaults.length; ++i) { var z = defaults[i];\r\n\t\t\tif(w[z[0]] == null) w[z[0]] = z[1];\r\n\t\t\telse switch(z[2]) {\r\n\t\t\tcase \"bool\": if(typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]); break;\r\n\t\t\tcase \"int\": if(typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10); break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nfunction push_defaults(target, defaults) {\r\n\tfor(var i = 0; i != defaults.length; ++i) { var z = defaults[i];\r\n\t\tif(target[z[0]] == null) target[z[0]] = z[1];\r\n\t\telse switch(z[2]) {\r\n\t\t\tcase \"bool\": if(typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]); break;\r\n\t\t\tcase \"int\": if(typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10); break;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction parse_wb_defaults(wb) {\r\n\tpush_defaults(wb.WBProps, WBPropsDef);\r\n\tpush_defaults(wb.CalcPr, CalcPrDef);\r\n\r\n\tpush_defaults_array(wb.WBView, WBViewDef);\r\n\tpush_defaults_array(wb.Sheets, SheetDef);\r\n\r\n\t_ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\r\n}\r\n\r\nfunction safe1904(wb) {\r\n\t/* TODO: store date1904 somewhere else */\r\n\tif(!wb.Workbook) return \"false\";\r\n\tif(!wb.Workbook.WBProps) return \"false\";\r\n\treturn parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\r\n}\r\n\r\nvar badchars = \"][*?\\/\\\\\".split(\"\");\r\nfunction check_ws_name(n, safe) {\r\n\tif(n.length > 31) { if(safe) return false; throw new Error(\"Sheet names cannot exceed 31 chars\"); }\r\n\tvar _good = true;\r\n\tbadchars.forEach(function(c) {\r\n\t\tif(n.indexOf(c) == -1) return;\r\n\t\tif(!safe) throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\r\n\t\t_good = false;\r\n\t});\r\n\treturn _good;\r\n}\r\nfunction check_wb_names(N, S, codes) {\r\n\tN.forEach(function(n,i) {\r\n\t\tcheck_ws_name(n);\r\n\t\tfor(var j = 0; j < i; ++j) if(n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\r\n\t\tif(codes) {\r\n\t\t\tvar cn = (S && S[i] && S[i].CodeName) || n;\r\n\t\t\tif(cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\r\n\t\t}\r\n\t});\r\n}\r\nfunction check_wb(wb) {\r\n\tif(!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\r\n\tif(!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\r\n\tvar Sheets = (wb.Workbook && wb.Workbook.Sheets) || [];\r\n\tcheck_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\r\n\t/* TODO: validate workbook */\r\n}\r\n/* 18.2 Workbook */\r\nvar wbnsregex = /<\\w+:workbook/;\r\nfunction parse_wb_xml(data, opts) {\r\n\tif(!data) throw new Error(\"Could not find file\");\r\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, Names:[], xmlns: \"\" };\r\n\tvar pass = false, xmlns = \"xmlns\";\r\n\tvar dname = {}, dnstart = 0;\r\n\tdata.replace(tagregex, function xml_wb(x, idx) {\r\n\t\tvar y = parsexmltag(x);\r\n\t\tswitch(strip_ns(y[0])) {\r\n\t\t\tcase '<?xml': break;\r\n\r\n\t\t\t/* 18.2.27 workbook CT_Workbook 1 */\r\n\t\t\tcase '<workbook':\r\n\t\t\t\tif(x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\r\n\t\t\t\twb.xmlns = y[xmlns];\r\n\t\t\t\tbreak;\r\n\t\t\tcase '</workbook>': break;\r\n\r\n\t\t\t/* 18.2.13 fileVersion CT_FileVersion ? */\r\n\t\t\tcase '<fileVersion': delete y[0]; wb.AppVersion = y; break;\r\n\t\t\tcase '<fileVersion/>': case '</fileVersion>': break;\r\n\r\n\t\t\t/* 18.2.12 fileSharing CT_FileSharing ? */\r\n\t\t\tcase '<fileSharing': case '<fileSharing/>': break;\r\n\r\n\t\t\t/* 18.2.28 workbookPr CT_WorkbookPr ? */\r\n\t\t\tcase '<workbookPr':\r\n\t\t\tcase '<workbookPr/>':\r\n\t\t\t\tWBPropsDef.forEach(function(w) {\r\n\t\t\t\t\tif(y[w[0]] == null) return;\r\n\t\t\t\t\tswitch(w[2]) {\r\n\t\t\t\t\t\tcase \"bool\": wb.WBProps[w[0]] = parsexmlbool(y[w[0]]); break;\r\n\t\t\t\t\t\tcase \"int\": wb.WBProps[w[0]] = parseInt(y[w[0]], 10); break;\r\n\t\t\t\t\t\tdefault: wb.WBProps[w[0]] = y[w[0]];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(y.codeName) wb.WBProps.CodeName = y.codeName;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '</workbookPr>': break;\r\n\r\n\t\t\t/* 18.2.29 workbookProtection CT_WorkbookProtection ? */\r\n\t\t\tcase '<workbookProtection': break;\r\n\t\t\tcase '<workbookProtection/>': break;\r\n\r\n\t\t\t/* 18.2.1  bookViews CT_BookViews ? */\r\n\t\t\tcase '<bookViews': case '<bookViews>': case '</bookViews>': break;\r\n\t\t\t/* 18.2.30   workbookView CT_BookView + */\r\n\t\t\tcase '<workbookView': delete y[0]; wb.WBView.push(y); break;\r\n\t\t\tcase '</workbookView>': break;\r\n\r\n\t\t\t/* 18.2.20 sheets CT_Sheets 1 */\r\n\t\t\tcase '<sheets': case '<sheets>': case '</sheets>': break; // aggregate sheet\r\n\t\t\t/* 18.2.19   sheet CT_Sheet + */\r\n\t\t\tcase '<sheet':\r\n\t\t\t\tswitch(y.state) {\r\n\t\t\t\t\tcase \"hidden\": y.Hidden = 1; break;\r\n\t\t\t\t\tcase \"veryHidden\": y.Hidden = 2; break;\r\n\t\t\t\t\tdefault: y.Hidden = 0;\r\n\t\t\t\t}\r\n\t\t\t\tdelete y.state;\r\n\t\t\t\ty.name = unescapexml(utf8read(y.name));\r\n\t\t\t\tdelete y[0]; wb.Sheets.push(y); break;\r\n\t\t\tcase '</sheet>': break;\r\n\r\n\t\t\t/* 18.2.15 functionGroups CT_FunctionGroups ? */\r\n\t\t\tcase '<functionGroups': case '<functionGroups/>': break;\r\n\t\t\t/* 18.2.14   functionGroup CT_FunctionGroup + */\r\n\t\t\tcase '<functionGroup': break;\r\n\r\n\t\t\t/* 18.2.9  externalReferences CT_ExternalReferences ? */\r\n\t\t\tcase '<externalReferences': case '</externalReferences>': case '<externalReferences>': break;\r\n\t\t\t/* 18.2.8    externalReference CT_ExternalReference + */\r\n\t\t\tcase '<externalReference': break;\r\n\r\n\t\t\t/* 18.2.6  definedNames CT_DefinedNames ? */\r\n\t\t\tcase '<definedNames/>': break;\r\n\t\t\tcase '<definedNames>': case '<definedNames': pass=true; break;\r\n\t\t\tcase '</definedNames>': pass=false; break;\r\n\t\t\t/* 18.2.5    definedName CT_DefinedName + */\r\n\t\t\tcase '<definedName': {\r\n\t\t\t\tdname = {};\r\n\t\t\t\tdname.Name = y.name;\r\n\t\t\t\tif(y.comment) dname.Comment = y.comment;\r\n\t\t\t\tif(y.localSheetId) dname.Sheet = +y.localSheetId;\r\n\t\t\t\tdnstart = idx + x.length;\r\n\t\t\t}\tbreak;\r\n\t\t\tcase '</definedName>': {\r\n\t\t\t\tdname.Ref = data.slice(dnstart, idx);\r\n\t\t\t\twb.Names.push(dname);\r\n\t\t\t} break;\r\n\t\t\tcase '<definedName/>': break;\r\n\r\n\t\t\t/* 18.2.2  calcPr CT_CalcPr ? */\r\n\t\t\tcase '<calcPr': delete y[0]; wb.CalcPr = y; break;\r\n\t\t\tcase '<calcPr/>': delete y[0]; wb.CalcPr = y; break;\r\n\t\t\tcase '</calcPr>': break;\r\n\r\n\t\t\t/* 18.2.16 oleSize CT_OleSize ? (ref required) */\r\n\t\t\tcase '<oleSize': break;\r\n\r\n\t\t\t/* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\r\n\t\t\tcase '<customWorkbookViews>': case '</customWorkbookViews>': case '<customWorkbookViews': break;\r\n\t\t\t/* 18.2.3    customWorkbookView CT_CustomWorkbookView + */\r\n\t\t\tcase '<customWorkbookView': case '</customWorkbookView>': break;\r\n\r\n\t\t\t/* 18.2.18 pivotCaches CT_PivotCaches ? */\r\n\t\t\tcase '<pivotCaches>': case '</pivotCaches>': case '<pivotCaches': break;\r\n\t\t\t/* 18.2.17 pivotCache CT_PivotCache ? */\r\n\t\t\tcase '<pivotCache': break;\r\n\r\n\t\t\t/* 18.2.21 smartTagPr CT_SmartTagPr ? */\r\n\t\t\tcase '<smartTagPr': case '<smartTagPr/>': break;\r\n\r\n\t\t\t/* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\r\n\t\t\tcase '<smartTagTypes': case '<smartTagTypes>': case '</smartTagTypes>': break;\r\n\t\t\t/* 18.2.22   smartTagType CT_SmartTagType ? */\r\n\t\t\tcase '<smartTagType': break;\r\n\r\n\t\t\t/* 18.2.24 webPublishing CT_WebPublishing ? */\r\n\t\t\tcase '<webPublishing': case '<webPublishing/>': break;\r\n\r\n\t\t\t/* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\r\n\t\t\tcase '<fileRecoveryPr': case '<fileRecoveryPr/>': break;\r\n\r\n\t\t\t/* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\r\n\t\t\tcase '<webPublishObjects>': case '<webPublishObjects': case '</webPublishObjects>': break;\r\n\t\t\t/* 18.2.25 webPublishObject CT_WebPublishObject ? */\r\n\t\t\tcase '<webPublishObject': break;\r\n\r\n\t\t\t/* 18.2.10 extLst CT_ExtensionList ? */\r\n\t\t\tcase '<extLst': case '<extLst>': case '</extLst>': case '<extLst/>': break;\r\n\t\t\t/* 18.2.7    ext CT_Extension + */\r\n\t\t\tcase '<ext': pass=true; break; //TODO: check with versions of excel\r\n\t\t\tcase '</ext>': pass=false; break;\r\n\r\n\t\t\t/* Others */\r\n\t\t\tcase '<ArchID': break;\r\n\t\t\tcase '<AlternateContent':\r\n\t\t\tcase '<AlternateContent>': pass=true; break;\r\n\t\t\tcase '</AlternateContent>': pass=false; break;\r\n\r\n\t\t\t/* TODO */\r\n\t\t\tcase '<revisionPtr': break;\r\n\r\n\t\t\tdefault: if(!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\r\n\t\t}\r\n\t\treturn x;\r\n\t});\r\n\tif(XMLNS.main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\r\n\r\n\tparse_wb_defaults(wb);\r\n\r\n\treturn wb;\r\n}\r\n\r\nvar WB_XML_ROOT = writextag('workbook', null, {\r\n\t'xmlns': XMLNS.main[0],\r\n\t//'xmlns:mx': XMLNS.mx,\r\n\t//'xmlns:s': XMLNS.main[0],\r\n\t'xmlns:r': XMLNS.r\r\n});\r\n\r\nfunction write_wb_xml(wb) {\r\n\tvar o = [XML_HEADER];\r\n\to[o.length] = WB_XML_ROOT;\r\n\r\n\tvar write_names = (wb.Workbook && (wb.Workbook.Names||[]).length > 0);\r\n\r\n\t/* fileVersion */\r\n\t/* fileSharing */\r\n\r\n\tvar workbookPr = ({codeName:\"ThisWorkbook\"});\r\n\tif(wb.Workbook && wb.Workbook.WBProps) {\r\n\t\tWBPropsDef.forEach(function(x) {\r\nif((wb.Workbook.WBProps[x[0]]) == null) return;\r\n\t\t\tif((wb.Workbook.WBProps[x[0]]) == x[1]) return;\r\n\t\t\tworkbookPr[x[0]] = (wb.Workbook.WBProps[x[0]]);\r\n\t\t});\r\nif(wb.Workbook.WBProps.CodeName) { workbookPr.codeName = wb.Workbook.WBProps.CodeName; delete workbookPr.CodeName; }\r\n\t}\r\n\to[o.length] = (writextag('workbookPr', null, workbookPr));\r\n\r\n\t/* workbookProtection */\r\n\t/* bookViews */\r\n\r\n\to[o.length] = \"<sheets>\";\r\n\tvar sheets = wb.Workbook && wb.Workbook.Sheets || [];\r\n\tfor(var i = 0; i != wb.SheetNames.length; ++i) {\r\n\t\tvar sht = ({name:escapexml(wb.SheetNames[i].slice(0,31))});\r\n\t\tsht.sheetId = \"\"+(i+1);\r\n\t\tsht[\"r:id\"] = \"rId\"+(i+1);\r\n\t\tif(sheets[i]) switch(sheets[i].Hidden) {\r\n\t\t\tcase 1: sht.state = \"hidden\"; break;\r\n\t\t\tcase 2: sht.state = \"veryHidden\"; break;\r\n\t\t}\r\n\t\to[o.length] = (writextag('sheet',null,sht));\r\n\t}\r\n\to[o.length] = \"</sheets>\";\r\n\r\n\t/* functionGroups */\r\n\t/* externalReferences */\r\n\r\n\tif(write_names) {\r\n\t\to[o.length] = \"<definedNames>\";\r\n\t\tif(wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function(n) {\r\n\t\t\tvar d = {name:n.Name};\r\n\t\t\tif(n.Comment) d.comment = n.Comment;\r\n\t\t\tif(n.Sheet != null) d.localSheetId = \"\"+n.Sheet;\r\n\t\t\tif(!n.Ref) return;\r\n\t\t\to[o.length] = writextag('definedName', String(n.Ref), d);\r\n\t\t});\r\n\t\to[o.length] = \"</definedNames>\";\r\n\t}\r\n\r\n\t/* calcPr */\r\n\t/* oleSize */\r\n\t/* customWorkbookViews */\r\n\t/* pivotCaches */\r\n\t/* smartTagPr */\r\n\t/* smartTagTypes */\r\n\t/* webPublishing */\r\n\t/* fileRecoveryPr */\r\n\t/* webPublishObjects */\r\n\t/* extLst */\r\n\r\n\tif(o.length>2){ o[o.length] = '</workbook>'; o[1]=o[1].replace(\"/>\",\">\"); }\r\n\treturn o.join(\"\");\r\n}\r\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\r\nfunction parse_BrtBundleSh(data, length) {\r\n\tvar z = {};\r\n\tz.Hidden = data.read_shift(4); //hsState ST_SheetState\r\n\tz.iTabID = data.read_shift(4);\r\n\tz.strRelID = parse_RelID(data,length-8);\r\n\tz.name = parse_XLWideString(data);\r\n\treturn z;\r\n}\r\nfunction write_BrtBundleSh(data, o) {\r\n\tif(!o) o = new_buf(127);\r\n\to.write_shift(4, data.Hidden);\r\n\to.write_shift(4, data.iTabID);\r\n\twrite_RelID(data.strRelID, o);\r\n\twrite_XLWideString(data.name.slice(0,31), o);\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.815 BrtWbProp */\r\nfunction parse_BrtWbProp(data, length) {\r\n\tvar o = ({});\r\n\tvar flags = data.read_shift(4);\r\n\to.defaultThemeVersion = data.read_shift(4);\r\n\tvar strName = (length > 8) ? parse_XLWideString(data) : \"\";\r\n\tif(strName.length > 0) o.CodeName = strName;\r\n\to.autoCompressPictures = !!(flags & 0x10000);\r\n\to.backupFile = !!(flags & 0x40);\r\n\to.checkCompatibility = !!(flags & 0x1000);\r\n\to.date1904 = !!(flags & 0x01);\r\n\to.filterPrivacy = !!(flags & 0x08);\r\n\to.hidePivotFieldList = !!(flags & 0x400);\r\n\to.promptedSolutions = !!(flags & 0x10);\r\n\to.publishItems = !!(flags & 0x800);\r\n\to.refreshAllConnections = !!(flags & 0x40000);\r\n\to.saveExternalLinkValues = !!(flags & 0x80);\r\n\to.showBorderUnselectedTables = !!(flags & 0x04);\r\n\to.showInkAnnotation = !!(flags & 0x20);\r\n\to.showObjects = [\"all\", \"placeholders\", \"none\"][(flags >> 13) & 0x03];\r\n\to.showPivotChartFilter = !!(flags & 0x8000);\r\n\to.updateLinks = [\"userSet\", \"never\", \"always\"][(flags >> 8) & 0x03];\r\n\treturn o;\r\n}\r\nfunction write_BrtWbProp(data, o) {\r\n\tif(!o) o = new_buf(72);\r\n\tvar flags = 0;\r\n\tif(data) {\r\n\t\t/* TODO: mirror parse_BrtWbProp fields */\r\n\t\tif(data.filterPrivacy) flags |= 0x08;\r\n\t}\r\n\to.write_shift(4, flags);\r\n\to.write_shift(4, 0);\r\n\twrite_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\r\n\treturn o.slice(0, o.l);\r\n}\r\n\r\nfunction parse_BrtFRTArchID$(data, length) {\r\n\tvar o = {};\r\n\tdata.read_shift(4);\r\n\to.ArchID = data.read_shift(4);\r\n\tdata.l += length - 8;\r\n\treturn o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.687 BrtName */\r\nfunction parse_BrtName(data, length, opts) {\r\n\tvar end = data.l + length;\r\n\tdata.l += 4; //var flags = data.read_shift(4);\r\n\tdata.l += 1; //var chKey = data.read_shift(1);\r\n\tvar itab = data.read_shift(4);\r\n\tvar name = parse_XLNameWideString(data);\r\n\tvar formula = parse_XLSBNameParsedFormula(data, 0, opts);\r\n\tvar comment = parse_XLNullableWideString(data);\r\n\t//if(0 /* fProc */) {\r\n\t\t// unusedstring1: XLNullableWideString\r\n\t\t// description: XLNullableWideString\r\n\t\t// helpTopic: XLNullableWideString\r\n\t\t// unusedstring2: XLNullableWideString\r\n\t//}\r\n\tdata.l = end;\r\n\tvar out = ({Name:name, Ptg:formula});\r\n\tif(itab < 0xFFFFFFF) out.Sheet = itab;\r\n\tif(comment) out.Comment = comment;\r\n\treturn out;\r\n}\r\n\r\n/* [MS-XLSB] 2.1.7.61 Workbook */\r\nfunction parse_wb_bin(data, opts) {\r\n\tvar wb = { AppVersion:{}, WBProps:{}, WBView:[], Sheets:[], CalcPr:{}, xmlns: \"\" };\r\n\tvar pass = false;\r\n\r\n\tif(!opts) opts = {};\r\n\topts.biff = 12;\r\n\r\n\tvar Names = [];\r\n\tvar supbooks = ([[]]);\r\n\tsupbooks.SheetNames = [];\r\n\tsupbooks.XTI = [];\r\n\r\n\trecordhopper(data, function hopper_wb(val, R_n, RT) {\r\n\t\tswitch(RT) {\r\n\t\t\tcase 0x009C: /* 'BrtBundleSh' */\r\n\t\t\t\tsupbooks.SheetNames.push(val.name);\r\n\t\t\t\twb.Sheets.push(val); break;\r\n\r\n\t\t\tcase 0x0099: /* 'BrtWbProp' */\r\n\t\t\t\twb.WBProps = val; break;\r\n\r\n\t\t\tcase 0x0027: /* 'BrtName' */\r\n\t\t\t\tif(val.Sheet != null) opts.SID = val.Sheet;\r\n\t\t\t\tval.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\r\n\t\t\t\tdelete opts.SID;\r\n\t\t\t\tdelete val.Ptg;\r\n\t\t\t\tNames.push(val);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x040C: /* 'BrtNameExt' */ break;\r\n\r\n\t\t\tcase 0x0165: /* 'BrtSupSelf' */\r\n\t\t\tcase 0x0166: /* 'BrtSupSame' */\r\n\t\t\tcase 0x0163: /* 'BrtSupBookSrc' */\r\n\t\t\tcase 0x029B: /* 'BrtSupAddin' */\r\n\t\t\t\tif(!supbooks[0].length) supbooks[0] = [RT, val];\r\n\t\t\t\telse supbooks.push([RT, val]);\r\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x016A: /* 'BrtExternSheet' */\r\n\t\t\t\tif(supbooks.length === 0) { supbooks[0] = []; supbooks[0].XTI = []; }\r\n\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\r\n\t\t\t\tsupbooks.XTI = supbooks.XTI.concat(val);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 0x0169: /* 'BrtPlaceholderName' */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* case 'BrtModelTimeGroupingCalcCol' */\r\n\t\t\tcase 0x0C00: /* 'BrtUid' */\r\n\t\t\tcase 0x0C01: /* 'BrtRevisionPtr' */\r\n\t\t\tcase 0x0817: /* 'BrtAbsPath15' */\r\n\t\t\tcase 0x0216: /* 'BrtBookProtection' */\r\n\t\t\tcase 0x02A5: /* 'BrtBookProtectionIso' */\r\n\t\t\tcase 0x009E: /* 'BrtBookView' */\r\n\t\t\tcase 0x009D: /* 'BrtCalcProp' */\r\n\t\t\tcase 0x0262: /* 'BrtCrashRecErr' */\r\n\t\t\tcase 0x0802: /* 'BrtDecoupledPivotCacheID' */\r\n\t\t\tcase 0x009B: /* 'BrtFileRecover' */\r\n\t\t\tcase 0x0224: /* 'BrtFileSharing' */\r\n\t\t\tcase 0x02A4: /* 'BrtFileSharingIso' */\r\n\t\t\tcase 0x0080: /* 'BrtFileVersion' */\r\n\t\t\tcase 0x0299: /* 'BrtFnGroup' */\r\n\t\t\tcase 0x0850: /* 'BrtModelRelationship' */\r\n\t\t\tcase 0x084D: /* 'BrtModelTable' */\r\n\t\t\tcase 0x0225: /* 'BrtOleSize' */\r\n\t\t\tcase 0x0805: /* 'BrtPivotTableRef' */\r\n\t\t\tcase 0x0254: /* 'BrtSmartTagType' */\r\n\t\t\tcase 0x081C: /* 'BrtTableSlicerCacheID' */\r\n\t\t\tcase 0x081B: /* 'BrtTableSlicerCacheIDs' */\r\n\t\t\tcase 0x0822: /* 'BrtTimelineCachePivotCacheID' */\r\n\t\t\tcase 0x018D: /* 'BrtUserBookView' */\r\n\t\t\tcase 0x009A: /* 'BrtWbFactoid' */\r\n\t\t\tcase 0x045D: /* 'BrtWbProp14' */\r\n\t\t\tcase 0x0229: /* 'BrtWebOpt' */\r\n\t\t\tcase 0x082B: /* 'BrtWorkBookPr15' */\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 0x0023: /* 'BrtFRTBegin' */\r\n\t\t\t\tpass = true; break;\r\n\t\t\tcase 0x0024: /* 'BrtFRTEnd' */\r\n\t\t\t\tpass = false; break;\r\n\t\t\tcase 0x0025: /* 'BrtACBegin' */ break;\r\n\t\t\tcase 0x0026: /* 'BrtACEnd' */ break;\r\n\r\n\t\t\tcase 0x0010: /* 'BrtFRTArchID$' */ break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tif((R_n||\"\").indexOf(\"Begin\") > 0){/* empty */}\r\n\t\t\t\telse if((R_n||\"\").indexOf(\"End\") > 0){/* empty */}\r\n\t\t\t\telse if(!pass || opts.WTF) throw new Error(\"Unexpected record \" + RT + \" \" + R_n);\r\n\t\t}\r\n\t}, opts);\r\n\r\n\tparse_wb_defaults(wb);\r\n\r\n\t// $FlowIgnore\r\n\twb.Names = Names;\r\n\r\n\t(wb).supbooks = supbooks;\r\n\treturn wb;\r\n}\r\n\r\nfunction write_BUNDLESHS(ba, wb) {\r\n\twrite_record(ba, \"BrtBeginBundleShs\");\r\n\tfor(var idx = 0; idx != wb.SheetNames.length; ++idx) {\r\n\t\tvar viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\r\n\t\tvar d = { Hidden: viz, iTabID: idx+1, strRelID: 'rId' + (idx+1), name: wb.SheetNames[idx] };\r\n\t\twrite_record(ba, \"BrtBundleSh\", write_BrtBundleSh(d));\r\n\t}\r\n\twrite_record(ba, \"BrtEndBundleShs\");\r\n}\r\n\r\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\r\nfunction write_BrtFileVersion(data, o) {\r\n\tif(!o) o = new_buf(127);\r\n\tfor(var i = 0; i != 4; ++i) o.write_shift(4, 0);\r\n\twrite_XLWideString(\"SheetJS\", o);\r\n\twrite_XLWideString(XLSX.version, o);\r\n\twrite_XLWideString(XLSX.version, o);\r\n\twrite_XLWideString(\"7262\", o);\r\n\to.length = o.l;\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\n/* [MS-XLSB] 2.4.301 BrtBookView */\r\nfunction write_BrtBookView(idx, o) {\r\n\tif(!o) o = new_buf(29);\r\n\to.write_shift(-4, 0);\r\n\to.write_shift(-4, 460);\r\n\to.write_shift(4,  28800);\r\n\to.write_shift(4,  17600);\r\n\to.write_shift(4,  500);\r\n\to.write_shift(4,  idx);\r\n\to.write_shift(4,  idx);\r\n\tvar flags = 0x78;\r\n\to.write_shift(1,  flags);\r\n\treturn o.length > o.l ? o.slice(0, o.l) : o;\r\n}\r\n\r\nfunction write_BOOKVIEWS(ba, wb) {\r\n\t/* required if hidden tab appears before visible tab */\r\n\tif(!wb.Workbook || !wb.Workbook.Sheets) return;\r\n\tvar sheets = wb.Workbook.Sheets;\r\n\tvar i = 0, vistab = -1, hidden = -1;\r\n\tfor(; i < sheets.length; ++i) {\r\n\t\tif(!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;\r\n\t\telse if(sheets[i].Hidden == 1 && hidden == -1) hidden = i;\r\n\t}\r\n\tif(hidden > vistab) return;\r\n\twrite_record(ba, \"BrtBeginBookViews\");\r\n\twrite_record(ba, \"BrtBookView\", write_BrtBookView(vistab));\r\n\t/* 1*(BrtBookView *FRT) */\r\n\twrite_record(ba, \"BrtEndBookViews\");\r\n}\r\n\r\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\r\n/*function write_BrtCalcProp(data, o) {\r\n\tif(!o) o = new_buf(26);\r\n\to.write_shift(4,0); // force recalc\r\n\to.write_shift(4,1);\r\n\to.write_shift(4,0);\r\n\twrite_Xnum(0, o);\r\n\to.write_shift(-4, 1023);\r\n\to.write_shift(1, 0x33);\r\n\to.write_shift(1, 0x00);\r\n\treturn o;\r\n}*/\r\n\r\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\r\n/*function write_BrtFileRecover(data, o) {\r\n\tif(!o) o = new_buf(1);\r\n\to.write_shift(1,0);\r\n\treturn o;\r\n}*/\r\n\r\n/* [MS-XLSB] 2.1.7.61 Workbook */\r\nfunction write_wb_bin(wb, opts) {\r\n\tvar ba = buf_array();\r\n\twrite_record(ba, \"BrtBeginBook\");\r\n\twrite_record(ba, \"BrtFileVersion\", write_BrtFileVersion());\r\n\t/* [[BrtFileSharingIso] BrtFileSharing] */\r\n\twrite_record(ba, \"BrtWbProp\", write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\r\n\t/* [ACABSPATH] */\r\n\t/* [[BrtBookProtectionIso] BrtBookProtection] */\r\n\twrite_BOOKVIEWS(ba, wb, opts);\r\n\twrite_BUNDLESHS(ba, wb, opts);\r\n\t/* [FNGROUP] */\r\n\t/* [EXTERNALS] */\r\n\t/* *BrtName */\r\n\t/* write_record(ba, \"BrtCalcProp\", write_BrtCalcProp()); */\r\n\t/* [BrtOleSize] */\r\n\t/* *(BrtUserBookView *FRT) */\r\n\t/* [PIVOTCACHEIDS] */\r\n\t/* [BrtWbFactoid] */\r\n\t/* [SMARTTAGTYPES] */\r\n\t/* [BrtWebOpt] */\r\n\t/* write_record(ba, \"BrtFileRecover\", write_BrtFileRecover()); */\r\n\t/* [WEBPUBITEMS] */\r\n\t/* [CRERRS] */\r\n\t/* FRTWORKBOOK */\r\n\twrite_record(ba, \"BrtEndBook\");\r\n\r\n\treturn ba.end();\r\n}\r\nfunction parse_wb(data, name, opts) {\r\n\tif(name.slice(-4)===\".bin\") return parse_wb_bin((data), opts);\r\n\treturn parse_wb_xml((data), opts);\r\n}\r\n\r\nfunction parse_ws(data, name, idx, opts, rels, wb, themes, styles) {\r\n\tif(name.slice(-4)===\".bin\") return parse_ws_bin((data), opts, idx, rels, wb, themes, styles);\r\n\treturn parse_ws_xml((data), opts, idx, rels, wb, themes, styles);\r\n}\r\n\r\nfunction parse_cs(data, name, idx, opts, rels, wb, themes, styles) {\r\n\tif(name.slice(-4)===\".bin\") return parse_cs_bin((data), opts, idx, rels, wb, themes, styles);\r\n\treturn parse_cs_xml((data), opts, idx, rels, wb, themes, styles);\r\n}\r\n\r\nfunction parse_ms(data, name, idx, opts, rels, wb, themes, styles) {\r\n\tif(name.slice(-4)===\".bin\") return parse_ms_bin((data), opts, idx, rels, wb, themes, styles);\r\n\treturn parse_ms_xml((data), opts, idx, rels, wb, themes, styles);\r\n}\r\n\r\nfunction parse_ds(data, name, idx, opts, rels, wb, themes, styles) {\r\n\tif(name.slice(-4)===\".bin\") return parse_ds_bin((data), opts, idx, rels, wb, themes, styles);\r\n\treturn parse_ds_xml((data), opts, idx, rels, wb, themes, styles);\r\n}\r\n\r\nfunction parse_sty(data, name, themes, opts) {\r\n\tif(name.slice(-4)===\".bin\") return parse_sty_bin((data), themes, opts);\r\n\treturn parse_sty_xml((data), themes, opts);\r\n}\r\n\r\nfunction parse_theme(data, name, opts) {\r\n\treturn parse_theme_xml(data, opts);\r\n}\r\n\r\nfunction parse_sst(data, name, opts) {\r\n\tif(name.slice(-4)===\".bin\") return parse_sst_bin((data), opts);\r\n\treturn parse_sst_xml((data), opts);\r\n}\r\n\r\nfunction parse_cmnt(data, name, opts) {\r\n\tif(name.slice(-4)===\".bin\") return parse_comments_bin((data), opts);\r\n\treturn parse_comments_xml((data), opts);\r\n}\r\n\r\nfunction parse_cc(data, name, opts) {\r\n\tif(name.slice(-4)===\".bin\") return parse_cc_bin((data), name, opts);\r\n\treturn parse_cc_xml((data), name, opts);\r\n}\r\n\r\nfunction parse_xlink(data, name, opts) {\r\n\tif(name.slice(-4)===\".bin\") return parse_xlink_bin((data), name, opts);\r\n\treturn parse_xlink_xml((data), name, opts);\r\n}\r\n\r\nfunction write_wb(wb, name, opts) {\r\n\treturn (name.slice(-4)===\".bin\" ? write_wb_bin : write_wb_xml)(wb, opts);\r\n}\r\n\r\nfunction write_ws(data, name, opts, wb, rels) {\r\n\treturn (name.slice(-4)===\".bin\" ? write_ws_bin : write_ws_xml)(data, opts, wb, rels);\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nfunction write_cs(data, name, opts, wb, rels) {\r\n\treturn (name.slice(-4)===\".bin\" ? write_cs_bin : write_cs_xml)(data, opts, wb, rels);\r\n}\r\n\r\nfunction write_sty(data, name, opts) {\r\n\treturn (name.slice(-4)===\".bin\" ? write_sty_bin : write_sty_xml)(data, opts);\r\n}\r\n\r\nfunction write_sst(data, name, opts) {\r\n\treturn (name.slice(-4)===\".bin\" ? write_sst_bin : write_sst_xml)(data, opts);\r\n}\r\n\r\nfunction write_cmnt(data, name, opts) {\r\n\treturn (name.slice(-4)===\".bin\" ? write_comments_bin : write_comments_xml)(data, opts);\r\n}\r\n/*\r\nfunction write_cc(data, name:string, opts) {\r\n\treturn (name.slice(-4)===\".bin\" ? write_cc_bin : write_cc_xml)(data, opts);\r\n}\r\n*/\r\nvar attregexg2=/([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\r\nvar attregex2=/([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\r\nvar _chr = function(c) { return String.fromCharCode(c); };\r\nfunction xlml_parsexmltag(tag, skip_root) {\r\n\tvar words = tag.split(/\\s+/);\r\n\tvar z = ([]); if(!skip_root) z[0] = words[0];\r\n\tif(words.length === 1) return z;\r\n\tvar m = tag.match(attregexg2), y, j, w, i;\r\n\tif(m) for(i = 0; i != m.length; ++i) {\r\n\t\ty = m[i].match(attregex2);\r\nif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\r\n\t\telse {\r\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\r\n\t\t\telse w = y[1].slice(j+1);\r\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\r\n\t\t}\r\n\t}\r\n\treturn z;\r\n}\r\nfunction xlml_parsexmltagobj(tag) {\r\n\tvar words = tag.split(/\\s+/);\r\n\tvar z = {};\r\n\tif(words.length === 1) return z;\r\n\tvar m = tag.match(attregexg2), y, j, w, i;\r\n\tif(m) for(i = 0; i != m.length; ++i) {\r\n\t\ty = m[i].match(attregex2);\r\nif((j=y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1,y[2].length-1);\r\n\t\telse {\r\n\t\t\tif(y[1].slice(0,6) === \"xmlns:\") w = \"xmlns\"+y[1].slice(6);\r\n\t\t\telse w = y[1].slice(j+1);\r\n\t\t\tz[w] = y[2].slice(1,y[2].length-1);\r\n\t\t}\r\n\t}\r\n\treturn z;\r\n}\r\n\r\n// ----\r\n\r\nfunction xlml_format(format, value) {\r\n\tvar fmt = XLMLFormatMap[format] || unescapexml(format);\r\n\tif(fmt === \"General\") return SSF._general(value);\r\n\treturn SSF.format(fmt, value);\r\n}\r\n\r\nfunction xlml_set_custprop(Custprops, key, cp, val) {\r\n\tvar oval = val;\r\n\tswitch((cp[0].match(/dt:dt=\"([\\w.]+)\"/)||[\"\",\"\"])[1]) {\r\n\t\tcase \"boolean\": oval = parsexmlbool(val); break;\r\n\t\tcase \"i2\": case \"int\": oval = parseInt(val, 10); break;\r\n\t\tcase \"r4\": case \"float\": oval = parseFloat(val); break;\r\n\t\tcase \"date\": case \"dateTime.tz\": oval = parseDate(val); break;\r\n\t\tcase \"i8\": case \"string\": case \"fixed\": case \"uuid\": case \"bin.base64\": break;\r\n\t\tdefault: throw new Error(\"bad custprop:\" + cp[0]);\r\n\t}\r\n\tCustprops[unescapexml(key)] = oval;\r\n}\r\n\r\nfunction safe_format_xlml(cell, nf, o) {\r\n\tif(cell.t === 'z') return;\r\n\tif(!o || o.cellText !== false) try {\r\n\t\tif(cell.t === 'e') { cell.w = cell.w || BErr[cell.v]; }\r\n\t\telse if(nf === \"General\") {\r\n\t\t\tif(cell.t === 'n') {\r\n\t\t\t\tif((cell.v|0) === cell.v) cell.w = SSF._general_int(cell.v);\r\n\t\t\t\telse cell.w = SSF._general_num(cell.v);\r\n\t\t\t}\r\n\t\t\telse cell.w = SSF._general(cell.v);\r\n\t\t}\r\n\t\telse cell.w = xlml_format(nf||\"General\", cell.v);\r\n\t} catch(e) { if(o.WTF) throw e; }\r\n\ttry {\r\n\t\tvar z = XLMLFormatMap[nf]||nf||\"General\";\r\n\t\tif(o.cellNF) cell.z = z;\r\n\t\tif(o.cellDates && cell.t == 'n' && SSF.is_date(z)) {\r\n\t\t\tvar _d = SSF.parse_date_code(cell.v); if(_d) { cell.t = 'd'; cell.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\r\n\t\t}\r\n\t} catch(e) { if(o.WTF) throw e; }\r\n}\r\n\r\nfunction process_style_xlml(styles, stag, opts) {\r\n\tif(opts.cellStyles) {\r\n\t\tif(stag.Interior) {\r\n\t\t\tvar I = stag.Interior;\r\n\t\t\tif(I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\r\n\t\t}\r\n\t}\r\n\tstyles[stag.ID] = stag;\r\n}\r\n\r\n/* TODO: there must exist some form of OSP-blessed spec */\r\nfunction parse_xlml_data(xml, ss, data, cell, base, styles, csty, row, arrayf, o) {\r\n\tvar nf = \"General\", sid = cell.StyleID, S = {}; o = o || {};\r\n\tvar interiors = [];\r\n\tvar i = 0;\r\n\tif(sid === undefined && row) sid = row.StyleID;\r\n\tif(sid === undefined && csty) sid = csty.StyleID;\r\n\twhile(styles[sid] !== undefined) {\r\n\t\tif(styles[sid].nf) nf = styles[sid].nf;\r\n\t\tif(styles[sid].Interior) interiors.push(styles[sid].Interior);\r\n\t\tif(!styles[sid].Parent) break;\r\n\t\tsid = styles[sid].Parent;\r\n\t}\r\n\tswitch(data.Type) {\r\n\t\tcase 'Boolean':\r\n\t\t\tcell.t = 'b';\r\n\t\t\tcell.v = parsexmlbool(xml);\r\n\t\t\tbreak;\r\n\t\tcase 'String':\r\n\t\t\tcell.t = 's'; cell.r = xlml_fixstr(unescapexml(xml));\r\n\t\t\tcell.v = xml.indexOf(\"<\") > -1 ? unescapexml(ss) : cell.r;\r\n\t\t\tbreak;\r\n\t\tcase 'DateTime':\r\n\t\t\tif(xml.slice(-1) != \"Z\") xml += \"Z\";\r\n\t\t\tcell.v = (parseDate(xml) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\r\n\t\t\tif(cell.v !== cell.v) cell.v = unescapexml(xml);\r\n\t\t\telse if(cell.v<60) cell.v = cell.v -1;\r\n\t\t\tif(!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\r\n\t\t\t/* falls through */\r\n\t\tcase 'Number':\r\n\t\t\tif(cell.v === undefined) cell.v=+xml;\r\n\t\t\tif(!cell.t) cell.t = 'n';\r\n\t\t\tbreak;\r\n\t\tcase 'Error': cell.t = 'e'; cell.v = RBErr[xml]; if(o.cellText !== false) cell.w = xml; break;\r\n\t\tdefault: cell.t = 's'; cell.v = xlml_fixstr(ss||xml); break;\r\n\t}\r\n\tsafe_format_xlml(cell, nf, o);\r\n\tif(o.cellFormula !== false) {\r\n\t\tif(cell.Formula) {\r\n\t\t\tvar fstr = unescapexml(cell.Formula);\r\n\t\t\t/* strictly speaking, the leading = is required but some writers omit */\r\n\t\t\tif(fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\r\n\t\t\tcell.f = rc_to_a1(fstr, base);\r\n\t\t\tdelete cell.Formula;\r\n\t\t\tif(cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);\r\n\t\t\telse if(cell.ArrayRange) {\r\n\t\t\t\tcell.F = rc_to_a1(cell.ArrayRange, base);\r\n\t\t\t\tarrayf.push([safe_decode_range(cell.F), cell.F]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor(i = 0; i < arrayf.length; ++i)\r\n\t\t\t\tif(base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r)\r\n\t\t\t\t\tif(base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c)\r\n\t\t\t\t\t\tcell.F = arrayf[i][1];\r\n\t\t}\r\n\t}\r\n\tif(o.cellStyles) {\r\n\t\tinteriors.forEach(function(x) {\r\n\t\t\tif(!S.patternType && x.patternType) S.patternType = x.patternType;\r\n\t\t});\r\n\t\tcell.s = S;\r\n\t}\r\n\tif(cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\r\n}\r\n\r\nfunction xlml_clean_comment(comment) {\r\n\tcomment.t = comment.v || \"\";\r\n\tcomment.t = comment.t.replace(/\\r\\n/g,\"\\n\").replace(/\\r/g,\"\\n\");\r\n\tcomment.v = comment.w = comment.ixfe = undefined;\r\n}\r\n\r\nfunction xlml_normalize(d) {\r\n\tif(has_buf && Buffer.isBuffer(d)) return d.toString('utf8');\r\n\tif(typeof d === 'string') return d;\r\n\t/* duktape */\r\n\tif(typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\r\n\tthrow new Error(\"Bad input format: expected Buffer or string\");\r\n}\r\n\r\n/* TODO: Everything */\r\n/* UOS uses CJK in tags */\r\nvar xlmlregex = /<(\\/?)([^\\s?>!\\/:]*:|)([^\\s?>:\\/]+)[^>]*>/mg;\r\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\r\nfunction parse_xlml_xml(d, _opts) {\r\n\tvar opts = _opts || {};\r\n\tmake_ssf(SSF);\r\n\tvar str = debom(xlml_normalize(d));\r\n\tif(opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\r\n\t\tif(typeof cptable !== 'undefined') str = cptable.utils.decode(65001, char_codes(str));\r\n\t\telse str = utf8read(str);\r\n\t}\r\n\tvar opening = str.slice(0, 1024).toLowerCase(), ishtml = false;\r\n\tif(opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function(tag) { if(opening.indexOf(\"<\" + tag) >= 0) ishtml = true; });\r\n\tif(ishtml) return HTML_.to_workbook(str, opts);\r\n\tvar Rn;\r\n\tvar state = [], tmp;\r\n\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\r\n\tvar sheets = {}, sheetnames = [], cursheet = (opts.dense ? [] : {}), sheetname = \"\";\r\n\tvar table = {}, cell = ({}), row = {};// eslint-disable-line no-unused-vars\r\n\tvar dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'), didx = 0;\r\n\tvar c = 0, r = 0;\r\n\tvar refguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\r\n\tvar styles = {}, stag = {};\r\n\tvar ss = \"\", fidx = 0;\r\n\tvar merges = [];\r\n\tvar Props = {}, Custprops = {}, pidx = 0, cp = [];\r\n\tvar comments = [], comment = ({});\r\n\tvar cstys = [], csty, seencol = false;\r\n\tvar arrayf = [];\r\n\tvar rowinfo = [], rowobj = {}, cc = 0, rr = 0;\r\n\tvar Workbook = ({ Sheets:[], WBProps:{date1904:false} }), wsprops = {};\r\n\txlmlregex.lastIndex = 0;\r\n\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\");\r\n\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\r\n\t\tcase 'Data':\r\n\t\t\tif(state[state.length-1][1]) break;\r\n\t\t\tif(Rn[1]==='/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length-1][0]==\"Comment\"?comment:cell, {c:c,r:r}, styles, cstys[c], row, arrayf, opts);\r\n\t\t\telse { ss = \"\"; dtag = xlml_parsexmltag(Rn[0]); didx = Rn.index + Rn[0].length; }\r\n\t\t\tbreak;\r\n\t\tcase 'Cell':\r\n\t\t\tif(Rn[1]==='/'){\r\n\t\t\t\tif(comments.length > 0) cell.c = comments;\r\n\t\t\t\tif((!opts.sheetRows || opts.sheetRows > r) && cell.v !== undefined) {\r\n\t\t\t\t\tif(opts.dense) {\r\n\t\t\t\t\t\tif(!cursheet[r]) cursheet[r] = [];\r\n\t\t\t\t\t\tcursheet[r][c] = cell;\r\n\t\t\t\t\t} else cursheet[encode_col(c) + encode_row(r)] = cell;\r\n\t\t\t\t}\r\n\t\t\t\tif(cell.HRef) {\r\n\t\t\t\t\tcell.l = ({Target:cell.HRef});\r\n\t\t\t\t\tif(cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\r\n\t\t\t\t\tdelete cell.HRef; delete cell.HRefScreenTip;\r\n\t\t\t\t}\r\n\t\t\t\tif(cell.MergeAcross || cell.MergeDown) {\r\n\t\t\t\t\tcc = c + (parseInt(cell.MergeAcross,10)|0);\r\n\t\t\t\t\trr = r + (parseInt(cell.MergeDown,10)|0);\r\n\t\t\t\t\tmerges.push({s:{c:c,r:r},e:{c:cc,r:rr}});\r\n\t\t\t\t}\r\n\t\t\t\tif(!opts.sheetStubs) { if(cell.MergeAcross) c = cc + 1; else ++c; }\r\n\t\t\t\telse if(cell.MergeAcross || cell.MergeDown) {\r\nfor(var cma = c; cma <= cc; ++cma) {\r\n\t\t\t\t\t\tfor(var cmd = r; cmd <= rr; ++cmd) {\r\n\t\t\t\t\t\t\tif(cma > c || cmd > r) {\r\n\t\t\t\t\t\t\t\tif(opts.dense) {\r\n\t\t\t\t\t\t\t\t\tif(!cursheet[cmd]) cursheet[cmd] = [];\r\n\t\t\t\t\t\t\t\t\tcursheet[cmd][cma] = {t:'z'};\r\n\t\t\t\t\t\t\t\t} else cursheet[encode_col(cma) + encode_row(cmd)] = {t:'z'};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc = cc + 1;\r\n\t\t\t\t}\r\n\t\t\t\telse ++c;\r\n\t\t\t} else {\r\n\t\t\t\tcell = xlml_parsexmltagobj(Rn[0]);\r\n\t\t\t\tif(cell.Index) c = +cell.Index - 1;\r\n\t\t\t\tif(c < refguess.s.c) refguess.s.c = c;\r\n\t\t\t\tif(c > refguess.e.c) refguess.e.c = c;\r\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") ++c;\r\n\t\t\t\tcomments = [];\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'Row':\r\n\t\t\tif(Rn[1]==='/' || Rn[0].slice(-2) === \"/>\") {\r\n\t\t\t\tif(r < refguess.s.r) refguess.s.r = r;\r\n\t\t\t\tif(r > refguess.e.r) refguess.e.r = r;\r\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") {\r\n\t\t\t\t\trow = xlml_parsexmltag(Rn[0]);\r\n\t\t\t\t\tif(row.Index) r = +row.Index - 1;\r\n\t\t\t\t}\r\n\t\t\t\tc = 0; ++r;\r\n\t\t\t} else {\r\n\t\t\t\trow = xlml_parsexmltag(Rn[0]);\r\n\t\t\t\tif(row.Index) r = +row.Index - 1;\r\n\t\t\t\trowobj = {};\r\n\t\t\t\tif(row.AutoFitHeight == \"0\" || row.Height) {\r\n\t\t\t\t\trowobj.hpx = parseInt(row.Height, 10); rowobj.hpt = px2pt(rowobj.hpx);\r\n\t\t\t\t\trowinfo[r] = rowobj;\r\n\t\t\t\t}\r\n\t\t\t\tif(row.Hidden == \"1\") { rowobj.hidden = true; rowinfo[r] = rowobj; }\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'Worksheet': /* TODO: read range from FullRows/FullColumns */\r\n\t\t\tif(Rn[1]==='/'){\r\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\r\n\t\t\t\tsheetnames.push(sheetname);\r\n\t\t\t\tif(refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\r\n\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\r\n\t\t\t\t\tif(opts.sheetRows && opts.sheetRows <= refguess.e.r) {\r\n\t\t\t\t\t\tcursheet[\"!fullref\"] = cursheet[\"!ref\"];\r\n\t\t\t\t\t\trefguess.e.r = opts.sheetRows - 1;\r\n\t\t\t\t\t\tcursheet[\"!ref\"] = encode_range(refguess);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(merges.length) cursheet[\"!merges\"] = merges;\r\n\t\t\t\tif(cstys.length > 0) cursheet[\"!cols\"] = cstys;\r\n\t\t\t\tif(rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\r\n\t\t\t\tsheets[sheetname] = cursheet;\r\n\t\t\t} else {\r\n\t\t\t\trefguess = {s: {r:2000000, c:2000000}, e: {r:0, c:0} };\r\n\t\t\t\tr = c = 0;\r\n\t\t\t\tstate.push([Rn[3], false]);\r\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\r\n\t\t\t\tsheetname = unescapexml(tmp.Name);\r\n\t\t\t\tcursheet = (opts.dense ? [] : {});\r\n\t\t\t\tmerges = [];\r\n\t\t\t\tarrayf = [];\r\n\t\t\t\trowinfo = [];\r\n\t\t\t\twsprops = {name:sheetname, Hidden:0};\r\n\t\t\t\tWorkbook.Sheets.push(wsprops);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'Table':\r\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\r\n\t\t\telse if(Rn[0].slice(-2) == \"/>\") break;\r\n\t\t\telse {\r\n\t\t\t\ttable = xlml_parsexmltag(Rn[0]);\r\n\t\t\t\tstate.push([Rn[3], false]);\r\n\t\t\t\tcstys = []; seencol = false;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'Style':\r\n\t\t\tif(Rn[1]==='/') process_style_xlml(styles, stag, opts);\r\n\t\t\telse stag = xlml_parsexmltag(Rn[0]);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'NumberFormat':\r\n\t\t\tstag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\r\n\t\t\tif(XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\r\n\t\t\tfor(var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if(SSF._table[ssfidx] == stag.nf) break;\r\n\t\t\tif(ssfidx == 0x188) for(ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if(SSF._table[ssfidx] == null) { SSF.load(stag.nf, ssfidx); break; }\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'Column':\r\n\t\t\tif(state[state.length-1][0] !== 'Table') break;\r\n\t\t\tcsty = xlml_parsexmltag(Rn[0]);\r\n\t\t\tif(csty.Hidden) { csty.hidden = true; delete csty.Hidden; }\r\n\t\t\tif(csty.Width) csty.wpx = parseInt(csty.Width, 10);\r\n\t\t\tif(!seencol && csty.wpx > 10) {\r\n\t\t\t\tseencol = true; MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\r\n\t\t\t\tfor(var _col = 0; _col < cstys.length; ++_col) if(cstys[_col]) process_col(cstys[_col]);\r\n\t\t\t}\r\n\t\t\tif(seencol) process_col(csty);\r\n\t\t\tcstys[(csty.Index-1||cstys.length)] = csty;\r\n\t\t\tfor(var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'NamedRange':\r\n\t\t\tif(!Workbook.Names) Workbook.Names = [];\r\n\t\t\tvar _NamedRange = parsexmltag(Rn[0]);\r\n\t\t\tvar _DefinedName = ({\r\n\t\t\t\tName: _NamedRange.Name,\r\n\t\t\t\tRef: rc_to_a1(_NamedRange.RefersTo.slice(1), {r:0, c:0})\r\n\t\t\t});\r\n\t\t\tif(Workbook.Sheets.length>0) _DefinedName.Sheet=Workbook.Sheets.length-1;\r\nWorkbook.Names.push(_DefinedName);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'NamedCell': break;\r\n\t\tcase 'B': break;\r\n\t\tcase 'I': break;\r\n\t\tcase 'U': break;\r\n\t\tcase 'S': break;\r\n\t\tcase 'Sub': break;\r\n\t\tcase 'Sup': break;\r\n\t\tcase 'Span': break;\r\n\t\tcase 'Border': break;\r\n\t\tcase 'Alignment': break;\r\n\t\tcase 'Borders': break;\r\n\t\tcase 'Font':\r\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\r\n\t\t\telse if(Rn[1]===\"/\") ss += str.slice(fidx, Rn.index);\r\n\t\t\telse fidx = Rn.index + Rn[0].length;\r\n\t\t\tbreak;\r\n\t\tcase 'Interior':\r\n\t\t\tif(!opts.cellStyles) break;\r\n\t\t\tstag.Interior = xlml_parsexmltag(Rn[0]);\r\n\t\t\tbreak;\r\n\t\tcase 'Protection': break;\r\n\r\n\t\tcase 'Author':\r\n\t\tcase 'Title':\r\n\t\tcase 'Description':\r\n\t\tcase 'Created':\r\n\t\tcase 'Keywords':\r\n\t\tcase 'Subject':\r\n\t\tcase 'Category':\r\n\t\tcase 'Company':\r\n\t\tcase 'LastAuthor':\r\n\t\tcase 'LastSaved':\r\n\t\tcase 'LastPrinted':\r\n\t\tcase 'Version':\r\n\t\tcase 'Revision':\r\n\t\tcase 'TotalTime':\r\n\t\tcase 'HyperlinkBase':\r\n\t\tcase 'Manager':\r\n\t\tcase 'ContentStatus':\r\n\t\tcase 'Identifier':\r\n\t\tcase 'Language':\r\n\t\tcase 'AppName':\r\n\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\r\n\t\t\telse if(Rn[1]===\"/\") xlml_set_prop(Props, Rn[3], str.slice(pidx, Rn.index));\r\n\t\t\telse pidx = Rn.index + Rn[0].length;\r\n\t\t\tbreak;\r\n\t\tcase 'Paragraphs': break;\r\n\r\n\t\tcase 'Styles':\r\n\t\tcase 'Workbook':\r\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\r\n\t\t\telse state.push([Rn[3], false]);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'Comment':\r\n\t\t\tif(Rn[1]==='/'){\r\n\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));\r\n\t\t\t\txlml_clean_comment(comment);\r\n\t\t\t\tcomments.push(comment);\r\n\t\t\t} else {\r\n\t\t\t\tstate.push([Rn[3], false]);\r\n\t\t\t\ttmp = xlml_parsexmltag(Rn[0]);\r\n\t\t\t\tcomment = ({a:tmp.Author});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'AutoFilter':\r\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\r\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\r\n\t\t\t\tvar AutoFilter = xlml_parsexmltag(Rn[0]);\r\n\t\t\t\tcursheet['!autofilter'] = { ref:rc_to_a1(AutoFilter.Range).replace(/\\$/g,\"\") };\r\n\t\t\t\tstate.push([Rn[3], true]);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'Name': break;\r\n\r\n\t\tcase 'ComponentOptions':\r\n\t\tcase 'DocumentProperties':\r\n\t\tcase 'CustomDocumentProperties':\r\n\t\tcase 'OfficeDocumentSettings':\r\n\t\tcase 'PivotTable':\r\n\t\tcase 'PivotCache':\r\n\t\tcase 'Names':\r\n\t\tcase 'MapInfo':\r\n\t\tcase 'PageBreaks':\r\n\t\tcase 'QueryTable':\r\n\t\tcase 'DataValidation':\r\n\t\tcase 'Sorting':\r\n\t\tcase 'Schema':\r\n\t\tcase 'data':\r\n\t\tcase 'ConditionalFormatting':\r\n\t\tcase 'SmartTagType':\r\n\t\tcase 'SmartTags':\r\n\t\tcase 'ExcelWorkbook':\r\n\t\tcase 'WorkbookOptions':\r\n\t\tcase 'WorksheetOptions':\r\n\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw new Error(\"Bad state: \"+tmp.join(\"|\"));}\r\n\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\t/* FODS file root is <office:document> */\r\n\t\t\tif(state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\r\n\t\t\t/* UOS file root is <uof:UOF> */\r\n\t\t\tif(state.length == 0 && Rn[3] == \"UOF\") return parse_fods(str, opts);\r\n\r\n\t\t\tvar seen = true;\r\n\t\t\tswitch(state[state.length-1][0]) {\r\n\t\t\t\t/* OfficeDocumentSettings */\r\n\t\t\t\tcase 'OfficeDocumentSettings': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'AllowPNG': break;\r\n\t\t\t\t\tcase 'RemovePersonalInformation': break;\r\n\t\t\t\t\tcase 'DownloadComponents': break;\r\n\t\t\t\t\tcase 'LocationOfComponents': break;\r\n\t\t\t\t\tcase 'Colors': break;\r\n\t\t\t\t\tcase 'Color': break;\r\n\t\t\t\t\tcase 'Index': break;\r\n\t\t\t\t\tcase 'RGB': break;\r\n\t\t\t\t\tcase 'PixelsPerInch': break; // TODO: set PPI\r\n\t\t\t\t\tcase 'TargetScreenSize': break;\r\n\t\t\t\t\tcase 'ReadOnlyRecommended': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* ComponentOptions */\r\n\t\t\t\tcase 'ComponentOptions': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'Toolbar': break;\r\n\t\t\t\t\tcase 'HideOfficeLogo': break;\r\n\t\t\t\t\tcase 'SpreadsheetAutoFit': break;\r\n\t\t\t\t\tcase 'Label': break;\r\n\t\t\t\t\tcase 'Caption': break;\r\n\t\t\t\t\tcase 'MaxHeight': break;\r\n\t\t\t\t\tcase 'MaxWidth': break;\r\n\t\t\t\t\tcase 'NextSheetNumber': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* ExcelWorkbook */\r\n\t\t\t\tcase 'ExcelWorkbook': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'Date1904':\r\nWorkbook.WBProps.date1904 = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'WindowHeight': break;\r\n\t\t\t\t\tcase 'WindowWidth': break;\r\n\t\t\t\t\tcase 'WindowTopX': break;\r\n\t\t\t\t\tcase 'WindowTopY': break;\r\n\t\t\t\t\tcase 'TabRatio': break;\r\n\t\t\t\t\tcase 'ProtectStructure': break;\r\n\t\t\t\t\tcase 'ProtectWindows': break;\r\n\t\t\t\t\tcase 'ActiveSheet': break;\r\n\t\t\t\t\tcase 'DisplayInkNotes': break;\r\n\t\t\t\t\tcase 'FirstVisibleSheet': break;\r\n\t\t\t\t\tcase 'SupBook': break;\r\n\t\t\t\t\tcase 'SheetName': break;\r\n\t\t\t\t\tcase 'SheetIndex': break;\r\n\t\t\t\t\tcase 'SheetIndexFirst': break;\r\n\t\t\t\t\tcase 'SheetIndexLast': break;\r\n\t\t\t\t\tcase 'Dll': break;\r\n\t\t\t\t\tcase 'AcceptLabelsInFormulas': break;\r\n\t\t\t\t\tcase 'DoNotSaveLinkValues': break;\r\n\t\t\t\t\tcase 'Iteration': break;\r\n\t\t\t\t\tcase 'MaxIterations': break;\r\n\t\t\t\t\tcase 'MaxChange': break;\r\n\t\t\t\t\tcase 'Path': break;\r\n\t\t\t\t\tcase 'Xct': break;\r\n\t\t\t\t\tcase 'Count': break;\r\n\t\t\t\t\tcase 'SelectedSheets': break;\r\n\t\t\t\t\tcase 'Calculation': break;\r\n\t\t\t\t\tcase 'Uncalced': break;\r\n\t\t\t\t\tcase 'StartupPrompt': break;\r\n\t\t\t\t\tcase 'Crn': break;\r\n\t\t\t\t\tcase 'ExternName': break;\r\n\t\t\t\t\tcase 'Formula': break;\r\n\t\t\t\t\tcase 'ColFirst': break;\r\n\t\t\t\t\tcase 'ColLast': break;\r\n\t\t\t\t\tcase 'WantAdvise': break;\r\n\t\t\t\t\tcase 'Boolean': break;\r\n\t\t\t\t\tcase 'Error': break;\r\n\t\t\t\t\tcase 'Text': break;\r\n\t\t\t\t\tcase 'OLE': break;\r\n\t\t\t\t\tcase 'NoAutoRecover': break;\r\n\t\t\t\t\tcase 'PublishObjects': break;\r\n\t\t\t\t\tcase 'DoNotCalculateBeforeSave': break;\r\n\t\t\t\t\tcase 'Number': break;\r\n\t\t\t\t\tcase 'RefModeR1C1': break;\r\n\t\t\t\t\tcase 'EmbedSaveSmartTags': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* WorkbookOptions */\r\n\t\t\t\tcase 'WorkbookOptions': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'OWCVersion': break;\r\n\t\t\t\t\tcase 'Height': break;\r\n\t\t\t\t\tcase 'Width': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* WorksheetOptions */\r\n\t\t\t\tcase 'WorksheetOptions': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'Visible':\r\n\t\t\t\t\t\tif(Rn[0].slice(-2) === \"/>\"){/* empty */}\r\n\t\t\t\t\t\telse if(Rn[1]===\"/\") switch(str.slice(pidx, Rn.index)) {\r\n\t\t\t\t\t\t\tcase \"SheetHidden\": wsprops.Hidden = 1; break;\r\n\t\t\t\t\t\t\tcase \"SheetVeryHidden\": wsprops.Hidden = 2; break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse pidx = Rn.index + Rn[0].length;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Header':\r\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\r\n\t\t\t\t\t\tcursheet['!margins'].header = parsexmltag(Rn[0]).Margin;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Footer':\r\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={}, 'xlml');\r\n\t\t\t\t\t\tcursheet['!margins'].footer = parsexmltag(Rn[0]).Margin;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'PageMargins':\r\n\t\t\t\t\t\tvar pagemargins = parsexmltag(Rn[0]);\r\n\t\t\t\t\t\tif(!cursheet['!margins']) default_margins(cursheet['!margins']={},'xlml');\r\n\t\t\t\t\t\tif(pagemargins.Top) cursheet['!margins'].top = pagemargins.Top;\r\n\t\t\t\t\t\tif(pagemargins.Left) cursheet['!margins'].left = pagemargins.Left;\r\n\t\t\t\t\t\tif(pagemargins.Right) cursheet['!margins'].right = pagemargins.Right;\r\n\t\t\t\t\t\tif(pagemargins.Bottom) cursheet['!margins'].bottom = pagemargins.Bottom;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'DisplayRightToLeft':\r\n\t\t\t\t\t\tif(!Workbook.Views) Workbook.Views = [];\r\n\t\t\t\t\t\tif(!Workbook.Views[0]) Workbook.Views[0] = {};\r\n\t\t\t\t\t\tWorkbook.Views[0].RTL = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Unsynced': break;\r\n\t\t\t\t\tcase 'Print': break;\r\n\t\t\t\t\tcase 'Panes': break;\r\n\t\t\t\t\tcase 'Scale': break;\r\n\t\t\t\t\tcase 'Pane': break;\r\n\t\t\t\t\tcase 'Number': break;\r\n\t\t\t\t\tcase 'Layout': break;\r\n\t\t\t\t\tcase 'PageSetup': break;\r\n\t\t\t\t\tcase 'Selected': break;\r\n\t\t\t\t\tcase 'ProtectObjects': break;\r\n\t\t\t\t\tcase 'EnableSelection': break;\r\n\t\t\t\t\tcase 'ProtectScenarios': break;\r\n\t\t\t\t\tcase 'ValidPrinterInfo': break;\r\n\t\t\t\t\tcase 'HorizontalResolution': break;\r\n\t\t\t\t\tcase 'VerticalResolution': break;\r\n\t\t\t\t\tcase 'NumberofCopies': break;\r\n\t\t\t\t\tcase 'ActiveRow': break;\r\n\t\t\t\t\tcase 'ActiveCol': break;\r\n\t\t\t\t\tcase 'ActivePane': break;\r\n\t\t\t\t\tcase 'TopRowVisible': break;\r\n\t\t\t\t\tcase 'TopRowBottomPane': break;\r\n\t\t\t\t\tcase 'LeftColumnVisible': break;\r\n\t\t\t\t\tcase 'LeftColumnRightPane': break;\r\n\t\t\t\t\tcase 'FitToPage': break;\r\n\t\t\t\t\tcase 'RangeSelection': break;\r\n\t\t\t\t\tcase 'PaperSizeIndex': break;\r\n\t\t\t\t\tcase 'PageLayoutZoom': break;\r\n\t\t\t\t\tcase 'PageBreakZoom': break;\r\n\t\t\t\t\tcase 'FilterOn': break;\r\n\t\t\t\t\tcase 'DoNotDisplayGridlines': break;\r\n\t\t\t\t\tcase 'SplitHorizontal': break;\r\n\t\t\t\t\tcase 'SplitVertical': break;\r\n\t\t\t\t\tcase 'FreezePanes': break;\r\n\t\t\t\t\tcase 'FrozenNoSplit': break;\r\n\t\t\t\t\tcase 'FitWidth': break;\r\n\t\t\t\t\tcase 'FitHeight': break;\r\n\t\t\t\t\tcase 'CommentsLayout': break;\r\n\t\t\t\t\tcase 'Zoom': break;\r\n\t\t\t\t\tcase 'LeftToRight': break;\r\n\t\t\t\t\tcase 'Gridlines': break;\r\n\t\t\t\t\tcase 'AllowSort': break;\r\n\t\t\t\t\tcase 'AllowFilter': break;\r\n\t\t\t\t\tcase 'AllowInsertRows': break;\r\n\t\t\t\t\tcase 'AllowDeleteRows': break;\r\n\t\t\t\t\tcase 'AllowInsertCols': break;\r\n\t\t\t\t\tcase 'AllowDeleteCols': break;\r\n\t\t\t\t\tcase 'AllowInsertHyperlinks': break;\r\n\t\t\t\t\tcase 'AllowFormatCells': break;\r\n\t\t\t\t\tcase 'AllowSizeCols': break;\r\n\t\t\t\t\tcase 'AllowSizeRows': break;\r\n\t\t\t\t\tcase 'NoSummaryRowsBelowDetail': break;\r\n\t\t\t\t\tcase 'TabColorIndex': break;\r\n\t\t\t\t\tcase 'DoNotDisplayHeadings': break;\r\n\t\t\t\t\tcase 'ShowPageLayoutZoom': break;\r\n\t\t\t\t\tcase 'NoSummaryColumnsRightDetail': break;\r\n\t\t\t\t\tcase 'BlackAndWhite': break;\r\n\t\t\t\t\tcase 'DoNotDisplayZeros': break;\r\n\t\t\t\t\tcase 'DisplayPageBreak': break;\r\n\t\t\t\t\tcase 'RowColHeadings': break;\r\n\t\t\t\t\tcase 'DoNotDisplayOutline': break;\r\n\t\t\t\t\tcase 'NoOrientation': break;\r\n\t\t\t\t\tcase 'AllowUsePivotTables': break;\r\n\t\t\t\t\tcase 'ZeroHeight': break;\r\n\t\t\t\t\tcase 'ViewableRange': break;\r\n\t\t\t\t\tcase 'Selection': break;\r\n\t\t\t\t\tcase 'ProtectContents': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* PivotTable */\r\n\t\t\t\tcase 'PivotTable': case 'PivotCache': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'ImmediateItemsOnDrop': break;\r\n\t\t\t\t\tcase 'ShowPageMultipleItemLabel': break;\r\n\t\t\t\t\tcase 'CompactRowIndent': break;\r\n\t\t\t\t\tcase 'Location': break;\r\n\t\t\t\t\tcase 'PivotField': break;\r\n\t\t\t\t\tcase 'Orientation': break;\r\n\t\t\t\t\tcase 'LayoutForm': break;\r\n\t\t\t\t\tcase 'LayoutSubtotalLocation': break;\r\n\t\t\t\t\tcase 'LayoutCompactRow': break;\r\n\t\t\t\t\tcase 'Position': break;\r\n\t\t\t\t\tcase 'PivotItem': break;\r\n\t\t\t\t\tcase 'DataType': break;\r\n\t\t\t\t\tcase 'DataField': break;\r\n\t\t\t\t\tcase 'SourceName': break;\r\n\t\t\t\t\tcase 'ParentField': break;\r\n\t\t\t\t\tcase 'PTLineItems': break;\r\n\t\t\t\t\tcase 'PTLineItem': break;\r\n\t\t\t\t\tcase 'CountOfSameItems': break;\r\n\t\t\t\t\tcase 'Item': break;\r\n\t\t\t\t\tcase 'ItemType': break;\r\n\t\t\t\t\tcase 'PTSource': break;\r\n\t\t\t\t\tcase 'CacheIndex': break;\r\n\t\t\t\t\tcase 'ConsolidationReference': break;\r\n\t\t\t\t\tcase 'FileName': break;\r\n\t\t\t\t\tcase 'Reference': break;\r\n\t\t\t\t\tcase 'NoColumnGrand': break;\r\n\t\t\t\t\tcase 'NoRowGrand': break;\r\n\t\t\t\t\tcase 'BlankLineAfterItems': break;\r\n\t\t\t\t\tcase 'Hidden': break;\r\n\t\t\t\t\tcase 'Subtotal': break;\r\n\t\t\t\t\tcase 'BaseField': break;\r\n\t\t\t\t\tcase 'MapChildItems': break;\r\n\t\t\t\t\tcase 'Function': break;\r\n\t\t\t\t\tcase 'RefreshOnFileOpen': break;\r\n\t\t\t\t\tcase 'PrintSetTitles': break;\r\n\t\t\t\t\tcase 'MergeLabels': break;\r\n\t\t\t\t\tcase 'DefaultVersion': break;\r\n\t\t\t\t\tcase 'RefreshName': break;\r\n\t\t\t\t\tcase 'RefreshDate': break;\r\n\t\t\t\t\tcase 'RefreshDateCopy': break;\r\n\t\t\t\t\tcase 'VersionLastRefresh': break;\r\n\t\t\t\t\tcase 'VersionLastUpdate': break;\r\n\t\t\t\t\tcase 'VersionUpdateableMin': break;\r\n\t\t\t\t\tcase 'VersionRefreshableMin': break;\r\n\t\t\t\t\tcase 'Calculation': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* PageBreaks */\r\n\t\t\t\tcase 'PageBreaks': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'ColBreaks': break;\r\n\t\t\t\t\tcase 'ColBreak': break;\r\n\t\t\t\t\tcase 'RowBreaks': break;\r\n\t\t\t\t\tcase 'RowBreak': break;\r\n\t\t\t\t\tcase 'ColStart': break;\r\n\t\t\t\t\tcase 'ColEnd': break;\r\n\t\t\t\t\tcase 'RowEnd': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* AutoFilter */\r\n\t\t\t\tcase 'AutoFilter': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'AutoFilterColumn': break;\r\n\t\t\t\t\tcase 'AutoFilterCondition': break;\r\n\t\t\t\t\tcase 'AutoFilterAnd': break;\r\n\t\t\t\t\tcase 'AutoFilterOr': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* QueryTable */\r\n\t\t\t\tcase 'QueryTable': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'Id': break;\r\n\t\t\t\t\tcase 'AutoFormatFont': break;\r\n\t\t\t\t\tcase 'AutoFormatPattern': break;\r\n\t\t\t\t\tcase 'QuerySource': break;\r\n\t\t\t\t\tcase 'QueryType': break;\r\n\t\t\t\t\tcase 'EnableRedirections': break;\r\n\t\t\t\t\tcase 'RefreshedInXl9': break;\r\n\t\t\t\t\tcase 'URLString': break;\r\n\t\t\t\t\tcase 'HTMLTables': break;\r\n\t\t\t\t\tcase 'Connection': break;\r\n\t\t\t\t\tcase 'CommandText': break;\r\n\t\t\t\t\tcase 'RefreshInfo': break;\r\n\t\t\t\t\tcase 'NoTitles': break;\r\n\t\t\t\t\tcase 'NextId': break;\r\n\t\t\t\t\tcase 'ColumnInfo': break;\r\n\t\t\t\t\tcase 'OverwriteCells': break;\r\n\t\t\t\t\tcase 'DoNotPromptForFile': break;\r\n\t\t\t\t\tcase 'TextWizardSettings': break;\r\n\t\t\t\t\tcase 'Source': break;\r\n\t\t\t\t\tcase 'Number': break;\r\n\t\t\t\t\tcase 'Decimal': break;\r\n\t\t\t\t\tcase 'ThousandSeparator': break;\r\n\t\t\t\t\tcase 'TrailingMinusNumbers': break;\r\n\t\t\t\t\tcase 'FormatSettings': break;\r\n\t\t\t\t\tcase 'FieldType': break;\r\n\t\t\t\t\tcase 'Delimiters': break;\r\n\t\t\t\t\tcase 'Tab': break;\r\n\t\t\t\t\tcase 'Comma': break;\r\n\t\t\t\t\tcase 'AutoFormatName': break;\r\n\t\t\t\t\tcase 'VersionLastEdit': break;\r\n\t\t\t\t\tcase 'VersionLastRefresh': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\tcase 'Sorting':\r\n\t\t\t\tcase 'ConditionalFormatting':\r\n\t\t\t\tcase 'DataValidation':\r\n\t\t\t\tswitch(Rn[3]) {\r\n\t\t\t\t\tcase 'Range': break;\r\n\t\t\t\t\tcase 'Type': break;\r\n\t\t\t\t\tcase 'Min': break;\r\n\t\t\t\t\tcase 'Max': break;\r\n\t\t\t\t\tcase 'Sort': break;\r\n\t\t\t\t\tcase 'Descending': break;\r\n\t\t\t\t\tcase 'Order': break;\r\n\t\t\t\t\tcase 'CaseSensitive': break;\r\n\t\t\t\t\tcase 'Value': break;\r\n\t\t\t\t\tcase 'ErrorStyle': break;\r\n\t\t\t\t\tcase 'ErrorMessage': break;\r\n\t\t\t\t\tcase 'ErrorTitle': break;\r\n\t\t\t\t\tcase 'CellRangeList': break;\r\n\t\t\t\t\tcase 'InputMessage': break;\r\n\t\t\t\t\tcase 'InputTitle': break;\r\n\t\t\t\t\tcase 'ComboHide': break;\r\n\t\t\t\t\tcase 'InputHide': break;\r\n\t\t\t\t\tcase 'Condition': break;\r\n\t\t\t\t\tcase 'Qualifier': break;\r\n\t\t\t\t\tcase 'UseBlank': break;\r\n\t\t\t\t\tcase 'Value1': break;\r\n\t\t\t\t\tcase 'Value2': break;\r\n\t\t\t\t\tcase 'Format': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* MapInfo (schema) */\r\n\t\t\t\tcase 'MapInfo': case 'Schema': case 'data': switch(Rn[3]) {\r\n\t\t\t\t\tcase 'Map': break;\r\n\t\t\t\t\tcase 'Entry': break;\r\n\t\t\t\t\tcase 'Range': break;\r\n\t\t\t\t\tcase 'XPath': break;\r\n\t\t\t\t\tcase 'Field': break;\r\n\t\t\t\t\tcase 'XSDType': break;\r\n\t\t\t\t\tcase 'FilterOn': break;\r\n\t\t\t\t\tcase 'Aggregate': break;\r\n\t\t\t\t\tcase 'ElementType': break;\r\n\t\t\t\t\tcase 'AttributeType': break;\r\n\t\t\t\t/* These are from xsd (XML Schema Definition) */\r\n\t\t\t\t\tcase 'schema':\r\n\t\t\t\t\tcase 'element':\r\n\t\t\t\t\tcase 'complexType':\r\n\t\t\t\t\tcase 'datatype':\r\n\t\t\t\t\tcase 'all':\r\n\t\t\t\t\tcase 'attribute':\r\n\t\t\t\t\tcase 'extends': break;\r\n\r\n\t\t\t\t\tcase 'row': break;\r\n\t\t\t\t\tdefault: seen = false;\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* SmartTags (can be anything) */\r\n\t\t\t\tcase 'SmartTags': break;\r\n\r\n\t\t\t\tdefault: seen = false; break;\r\n\t\t\t}\r\n\t\t\tif(seen) break;\r\n\t\t\t/* CustomDocumentProperties */\r\n\t\t\tif(!state[state.length-1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\r\n\t\t\tif(state[state.length-1][0]==='CustomDocumentProperties') {\r\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\r\n\t\t\t\telse if(Rn[1]===\"/\") xlml_set_custprop(Custprops, Rn[3], cp, str.slice(pidx, Rn.index));\r\n\t\t\t\telse { cp = Rn; pidx = Rn.index + Rn[0].length; }\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\r\n\t}\r\n\tvar out = ({});\r\n\tif(!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\r\n\tout.SheetNames = sheetnames;\r\n\tout.Workbook = Workbook;\r\n\tout.SSF = SSF.get_table();\r\n\tout.Props = Props;\r\n\tout.Custprops = Custprops;\r\n\treturn out;\r\n}\r\n\r\nfunction parse_xlml(data, opts) {\r\n\tfix_read_opts(opts=opts||{});\r\n\tswitch(opts.type||\"base64\") {\r\n\t\tcase \"base64\": return parse_xlml_xml(Base64.decode(data), opts);\r\n\t\tcase \"binary\": case \"buffer\": case \"file\": return parse_xlml_xml(data, opts);\r\n\t\tcase \"array\": return parse_xlml_xml(a2s(data), opts);\r\n\t}\r\n}\r\n\r\n/* TODO */\r\nfunction write_props_xlml(wb, opts) {\r\n\tvar o = [];\r\n\t/* DocumentProperties */\r\n\tif(wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\r\n\t/* CustomDocumentProperties */\r\n\tif(wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops, opts));\r\n\treturn o.join(\"\");\r\n}\r\n/* TODO */\r\nfunction write_wb_xlml() {\r\n\t/* OfficeDocumentSettings */\r\n\t/* ExcelWorkbook */\r\n\treturn \"\";\r\n}\r\n/* TODO */\r\nfunction write_sty_xlml(wb, opts) {\r\n\t/* Styles */\r\n\tvar styles = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\r\n\topts.cellXfs.forEach(function(xf, id) {\r\n\t\tvar payload = [];\r\n\t\tpayload.push(writextag('NumberFormat', null, {\"ss:Format\": escapexml(SSF._table[xf.numFmtId])}));\r\n\t\tstyles.push(writextag('Style', payload.join(\"\"), {\"ss:ID\": \"s\" + (21+id)}));\r\n\t});\r\n\treturn writextag(\"Styles\", styles.join(\"\"));\r\n}\r\nfunction write_name_xlml(n) { return writextag(\"NamedRange\", null, {\"ss:Name\": n.Name, \"ss:RefersTo\":\"=\" + a1_to_rc(n.Ref, {r:0,c:0})}); }\r\nfunction write_names_xlml(wb) {\r\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\r\nvar names = wb.Workbook.Names;\r\n\tvar out = [];\r\n\tfor(var i = 0; i < names.length; ++i) {\r\n\t\tvar n = names[i];\r\n\t\tif(n.Sheet != null) continue;\r\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\r\n\t\tout.push(write_name_xlml(n));\r\n\t}\r\n\treturn writextag(\"Names\", out.join(\"\"));\r\n}\r\nfunction write_ws_xlml_names(ws, opts, idx, wb) {\r\n\tif(!ws) return \"\";\r\n\tif(!((wb||{}).Workbook||{}).Names) return \"\";\r\nvar names = wb.Workbook.Names;\r\n\tvar out = [];\r\n\touter: for(var i = 0; i < names.length; ++i) {\r\n\t\tvar n = names[i];\r\n\t\tif(n.Sheet != idx) continue;\r\n\t\t/*switch(n.Name) {\r\n\t\t\tcase \"_\": continue;\r\n\t\t}*/\r\n\t\tif(n.Name.match(/^_xlfn\\./)) continue;\r\n\t\tout.push(write_name_xlml(n));\r\n\t}\r\n\treturn out.join(\"\");\r\n}\r\n/* WorksheetOptions */\r\nfunction write_ws_xlml_wsopts(ws, opts, idx, wb) {\r\n\tif(!ws) return \"\";\r\n\tvar o = [];\r\n\t/* NOTE: spec technically allows any order, but stick with implied order */\r\n\r\n\t/* FitToPage */\r\n\t/* DoNotDisplayColHeaders */\r\n\t/* DoNotDisplayRowHeaders */\r\n\t/* ViewableRange */\r\n\t/* Selection */\r\n\t/* GridlineColor */\r\n\t/* Name */\r\n\t/* ExcelWorksheetType */\r\n\t/* IntlMacro */\r\n\t/* Unsynced */\r\n\t/* Selected */\r\n\t/* CodeName */\r\n\r\n\tif(ws['!margins']) {\r\n\t\to.push(\"<PageSetup>\");\r\n\t\tif(ws['!margins'].header) o.push(writextag(\"Header\", null, {'x:Margin':ws['!margins'].header}));\r\n\t\tif(ws['!margins'].footer) o.push(writextag(\"Footer\", null, {'x:Margin':ws['!margins'].footer}));\r\n\t\to.push(writextag(\"PageMargins\", null, {\r\n\t\t\t'x:Bottom': ws['!margins'].bottom || \"0.75\",\r\n\t\t\t'x:Left': ws['!margins'].left || \"0.7\",\r\n\t\t\t'x:Right': ws['!margins'].right || \"0.7\",\r\n\t\t\t'x:Top': ws['!margins'].top || \"0.75\"\r\n\t\t}));\r\n\t\to.push(\"</PageSetup>\");\r\n\t}\r\n\r\n\t/* PageSetup */\r\n\t/* DisplayPageBreak */\r\n\t/* TransitionExpressionEvaluation */\r\n\t/* TransitionFormulaEntry */\r\n\t/* Print */\r\n\t/* Zoom */\r\n\t/* PageLayoutZoom */\r\n\t/* PageBreakZoom */\r\n\t/* ShowPageBreakZoom */\r\n\t/* DefaultRowHeight */\r\n\t/* DefaultColumnWidth */\r\n\t/* StandardWidth */\r\n\r\n\tif(wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\r\n\t\t/* Visible */\r\n\t\tif(wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", (wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\"), {}));\r\n\t\telse {\r\n\t\t\t/* Selected */\r\n\t\t\tfor(var i = 0; i < idx; ++i) if(wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\r\n\t\t\tif(i == idx) o.push(\"<Selected/>\");\r\n\t\t}\r\n\t}\r\n\r\n\t/* LeftColumnVisible */\r\n\r\n\tif(((((wb||{}).Workbook||{}).Views||[])[0]||{}).RTL) o.push(\"<DisplayRightToLeft/>\");\r\n\r\n\t/* GridlineColorIndex */\r\n\t/* DisplayFormulas */\r\n\t/* DoNotDisplayGridlines */\r\n\t/* DoNotDisplayHeadings */\r\n\t/* DoNotDisplayOutline */\r\n\t/* ApplyAutomaticOutlineStyles */\r\n\t/* NoSummaryRowsBelowDetail */\r\n\t/* NoSummaryColumnsRightDetail */\r\n\t/* DoNotDisplayZeros */\r\n\t/* ActiveRow */\r\n\t/* ActiveColumn */\r\n\t/* FilterOn */\r\n\t/* RangeSelection */\r\n\t/* TopRowVisible */\r\n\t/* TopRowBottomPane */\r\n\t/* LeftColumnRightPane */\r\n\t/* ActivePane */\r\n\t/* SplitHorizontal */\r\n\t/* SplitVertical */\r\n\t/* FreezePanes */\r\n\t/* FrozenNoSplit */\r\n\t/* TabColorIndex */\r\n\t/* Panes */\r\n\r\n\t/* NOTE: Password not supported in XLML Format */\r\n\tif(ws['!protect']) {\r\n\t\to.push(writetag(\"ProtectContents\", \"True\"));\r\n\t\tif(ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\r\n\t\tif(ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\r\n\t\tif(ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));\r\n\t\telse if(ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\r\n\t[\r\n\t\t[ \"formatCells\", \"AllowFormatCells\" ],\r\n\t\t[ \"formatColumns\", \"AllowSizeCols\" ],\r\n\t\t[ \"formatRows\", \"AllowSizeRows\" ],\r\n\t\t[ \"insertColumns\", \"AllowInsertCols\" ],\r\n\t\t[ \"insertRows\", \"AllowInsertRows\" ],\r\n\t\t[ \"insertHyperlinks\", \"AllowInsertHyperlinks\" ],\r\n\t\t[ \"deleteColumns\", \"AllowDeleteCols\" ],\r\n\t\t[ \"deleteRows\", \"AllowDeleteRows\" ],\r\n\t\t[ \"sort\", \"AllowSort\" ],\r\n\t\t[ \"autoFilter\", \"AllowFilter\" ],\r\n\t\t[ \"pivotTables\", \"AllowUsePivotTables\" ]\r\n\t].forEach(function(x) { if(ws['!protect'][x[0]]) o.push(\"<\"+x[1]+\"/>\"); });\r\n\t}\r\n\r\n\tif(o.length == 0) return \"\";\r\n\treturn writextag(\"WorksheetOptions\", o.join(\"\"), {xmlns:XLMLNS.x});\r\n}\r\nfunction write_ws_xlml_comment(comments) {\r\n\treturn comments.map(function(c) {\r\n\t\t// TODO: formatted text\r\n\t\tvar t = xlml_unfixstr(c.t||\"\");\r\n\t\tvar d =writextag(\"ss:Data\", t, {\"xmlns\":\"http://www.w3.org/TR/REC-html40\"});\r\n\t\treturn writextag(\"Comment\", d, {\"ss:Author\":c.a});\r\n\t}).join(\"\");\r\n}\r\nfunction write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr){\r\n\tif(!cell || (cell.v == undefined && cell.f == undefined)) return \"\";\r\n\r\n\tvar attr = {};\r\n\tif(cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\r\n\tif(cell.F && cell.F.slice(0, ref.length) == ref) {\r\n\t\tvar end = decode_cell(cell.F.slice(ref.length + 1));\r\n\t\tattr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\r\n\t}\r\n\r\n\tif(cell.l && cell.l.Target) {\r\n\t\tattr[\"ss:HRef\"] = escapexml(cell.l.Target);\r\n\t\tif(cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\r\n\t}\r\n\r\n\tif(ws['!merges']) {\r\n\t\tvar marr = ws['!merges'];\r\n\t\tfor(var mi = 0; mi != marr.length; ++mi) {\r\n\t\t\tif(marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\r\n\t\t\tif(marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\r\n\t\t\tif(marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\r\n\t\t}\r\n\t}\r\n\r\n\tvar t = \"\", p = \"\";\r\n\tswitch(cell.t) {\r\n\t\tcase 'z': return \"\";\r\n\t\tcase 'n': t = 'Number'; p = String(cell.v); break;\r\n\t\tcase 'b': t = 'Boolean'; p = (cell.v ? \"1\" : \"0\"); break;\r\n\t\tcase 'e': t = 'Error'; p = BErr[cell.v]; break;\r\n\t\tcase 'd': t = 'DateTime'; p = new Date(cell.v).toISOString(); if(cell.z == null) cell.z = cell.z || SSF._table[14]; break;\r\n\t\tcase 's': t = 'String'; p = escapexlml(cell.v||\"\"); break;\r\n\t}\r\n\t/* TODO: cell style */\r\n\tvar os = get_cell_style(opts.cellXfs, cell, opts);\r\n\tattr[\"ss:StyleID\"] = \"s\" + (21+os);\r\n\tattr[\"ss:Index\"] = addr.c + 1;\r\n\tvar _v = (cell.v != null ? p : \"\");\r\n\tvar m = '<Data ss:Type=\"' + t + '\">' + _v + '</Data>';\r\n\r\n\tif((cell.c||[]).length > 0) m += write_ws_xlml_comment(cell.c);\r\n\r\n\treturn writextag(\"Cell\", m, attr);\r\n}\r\nfunction write_ws_xlml_row(R, row) {\r\n\tvar o = '<Row ss:Index=\"' + (R+1) + '\"';\r\n\tif(row) {\r\n\t\tif(row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\r\n\t\tif(row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\r\n\t\tif(row.hidden) o += ' ss:Hidden=\"1\"';\r\n\t}\r\n\treturn o + '>';\r\n}\r\n/* TODO */\r\nfunction write_ws_xlml_table(ws, opts, idx, wb) {\r\n\tif(!ws['!ref']) return \"\";\r\n\tvar range = safe_decode_range(ws['!ref']);\r\n\tvar marr = ws['!merges'] || [], mi = 0;\r\n\tvar o = [];\r\n\tif(ws['!cols']) ws['!cols'].forEach(function(n, i) {\r\n\t\tprocess_col(n);\r\n\t\tvar w = !!n.width;\r\n\t\tvar p = col_obj_w(i, n);\r\n\t\tvar k = {\"ss:Index\":i+1};\r\n\t\tif(w) k['ss:Width'] = width2px(p.width);\r\n\t\tif(n.hidden) k['ss:Hidden']=\"1\";\r\n\t\to.push(writextag(\"Column\",null,k));\r\n\t});\r\n\tvar dense = Array.isArray(ws);\r\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\r\n\t\tvar row = [write_ws_xlml_row(R, (ws['!rows']||[])[R])];\r\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\r\n\t\t\tvar skip = false;\r\n\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\r\n\t\t\t\tif(marr[mi].s.c > C) continue;\r\n\t\t\t\tif(marr[mi].s.r > R) continue;\r\n\t\t\t\tif(marr[mi].e.c < C) continue;\r\n\t\t\t\tif(marr[mi].e.r < R) continue;\r\n\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(skip) continue;\r\n\t\t\tvar addr = {r:R,c:C};\r\n\t\t\tvar ref = encode_cell(addr), cell = dense ? (ws[R]||[])[C] : ws[ref];\r\n\t\t\trow.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\r\n\t\t}\r\n\t\trow.push(\"</Row>\");\r\n\t\tif(row.length > 2) o.push(row.join(\"\"));\r\n\t}\r\n\treturn o.join(\"\");\r\n}\r\nfunction write_ws_xlml(idx, opts, wb) {\r\n\tvar o = [];\r\n\tvar s = wb.SheetNames[idx];\r\n\tvar ws = wb.Sheets[s];\r\n\r\n\tvar t = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\r\n\tif(t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\r\n\r\n\t/* Table */\r\n\tt = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\r\n\tif(t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\r\n\r\n\t/* WorksheetOptions */\r\n\to.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\r\n\r\n\treturn o.join(\"\");\r\n}\r\nfunction write_xlml(wb, opts) {\r\n\tif(!opts) opts = {};\r\n\tif(!wb.SSF) wb.SSF = SSF.get_table();\r\n\tif(wb.SSF) {\r\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\r\n\t\t// $FlowIgnore\r\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\r\n\t\topts.ssf = wb.SSF;\r\n\t\topts.cellXfs = [];\r\n\t\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\r\n\t}\r\n\tvar d = [];\r\n\td.push(write_props_xlml(wb, opts));\r\n\td.push(write_wb_xlml(wb, opts));\r\n\td.push(\"\");\r\n\td.push(\"\");\r\n\tfor(var i = 0; i < wb.SheetNames.length; ++i)\r\n\t\td.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\"ss:Name\":escapexml(wb.SheetNames[i])}));\r\n\td[2] = write_sty_xlml(wb, opts);\r\n\td[3] = write_names_xlml(wb, opts);\r\n\treturn XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\r\n\t\t'xmlns':      XLMLNS.ss,\r\n\t\t'xmlns:o':    XLMLNS.o,\r\n\t\t'xmlns:x':    XLMLNS.x,\r\n\t\t'xmlns:ss':   XLMLNS.ss,\r\n\t\t'xmlns:dt':   XLMLNS.dt,\r\n\t\t'xmlns:html': XLMLNS.html\r\n\t});\r\n}\r\n/* [MS-OLEDS] 2.3.8 CompObjStream */\r\nfunction parse_compobj(obj) {\r\n\tvar v = {};\r\n\tvar o = obj.content;\r\n/* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\r\n\to.l = 28;\r\n\r\n\tv.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\r\n\tv.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\r\n\r\n\tif(o.length - o.l <= 4) return v;\r\n\r\n\tvar m = o.read_shift(4);\r\n\tif(m == 0 || m > 40) return v;\r\n\to.l-=4; v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\r\n\r\n\tif(o.length - o.l <= 4) return v;\r\n\tm = o.read_shift(4);\r\n\tif(m !== 0x71b239f4) return v;\r\n\tv.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\r\n\r\n\tm = o.read_shift(4);\r\n\tif(m == 0 || m > 40) return v;\r\n\to.l-=4; v.Reserved2 = o.read_shift(0, \"lpwstr\");\r\n}\r\n\r\n/*\r\n\tContinue logic for:\r\n\t- 2.4.58 Continue\r\n\t- 2.4.59 ContinueBigName\r\n\t- 2.4.60 ContinueFrt\r\n\t- 2.4.61 ContinueFrt11\r\n\t- 2.4.62 ContinueFrt12\r\n*/\r\nfunction slurp(R, blob, length, opts) {\r\n\tvar l = length;\r\n\tvar bufs = [];\r\n\tvar d = blob.slice(blob.l,blob.l+l);\r\n\tif(opts && opts.enc && opts.enc.insitu) switch(R.n) {\r\n\tcase 'BOF': case 'FilePass': case 'FileLock': case 'InterfaceHdr': case 'RRDInfo': case 'RRDHead': case 'UsrExcl': break;\r\n\tdefault:\r\n\t\tif(d.length === 0) break;\r\n\t\topts.enc.insitu(d);\r\n\t}\r\n\tbufs.push(d);\r\n\tblob.l += l;\r\n\tvar next = (XLSRecordEnum[__readUInt16LE(blob,blob.l)]);\r\n\tvar start = 0;\r\n\twhile(next != null && next.n.slice(0,8) === 'Continue') {\r\n\t\tl = __readUInt16LE(blob,blob.l+2);\r\n\t\tstart = blob.l + 4;\r\n\t\tif(next.n == 'ContinueFrt') start += 4;\r\n\t\telse if(next.n.slice(0,11) == 'ContinueFrt') start += 12;\r\n\t\tbufs.push(blob.slice(start,blob.l+4+l));\r\n\t\tblob.l += 4+l;\r\n\t\tnext = (XLSRecordEnum[__readUInt16LE(blob, blob.l)]);\r\n\t}\r\n\tvar b = (bconcat(bufs));\r\n\tprep_blob(b, 0);\r\n\tvar ll = 0; b.lens = [];\r\n\tfor(var j = 0; j < bufs.length; ++j) { b.lens.push(ll); ll += bufs[j].length; }\r\n\treturn R.f(b, b.length, opts);\r\n}\r\n\r\nfunction safe_format_xf(p, opts, date1904) {\r\n\tif(p.t === 'z') return;\r\n\tif(!p.XF) return;\r\n\tvar fmtid = 0;\r\n\ttry {\r\n\t\tfmtid = p.z || p.XF.numFmtId || 0;\r\n\t\tif(opts.cellNF) p.z = SSF._table[fmtid];\r\n\t} catch(e) { if(opts.WTF) throw e; }\r\n\tif(!opts || opts.cellText !== false) try {\r\n\t\tif(p.t === 'e') { p.w = p.w || BErr[p.v]; }\r\n\t\telse if(fmtid === 0 || fmtid == \"General\") {\r\n\t\t\tif(p.t === 'n') {\r\n\t\t\t\tif((p.v|0) === p.v) p.w = SSF._general_int(p.v);\r\n\t\t\t\telse p.w = SSF._general_num(p.v);\r\n\t\t\t}\r\n\t\t\telse p.w = SSF._general(p.v);\r\n\t\t}\r\n\t\telse p.w = SSF.format(fmtid,p.v, {date1904:!!date1904});\r\n\t} catch(e) { if(opts.WTF) throw e; }\r\n\tif(opts.cellDates && fmtid && p.t == 'n' && SSF.is_date(SSF._table[fmtid] || String(fmtid))) {\r\n\t\tvar _d = SSF.parse_date_code(p.v); if(_d) { p.t = 'd'; p.v = new Date(_d.y, _d.m-1,_d.d,_d.H,_d.M,_d.S,_d.u); }\r\n\t}\r\n}\r\n\r\nfunction make_cell(val, ixfe, t) {\r\n\treturn ({v:val, ixfe:ixfe, t:t});\r\n}\r\n\r\n// 2.3.2\r\nfunction parse_workbook(blob, options) {\r\n\tvar wb = ({opts:{}});\r\n\tvar Sheets = {};\r\n\tif(DENSE != null && options.dense == null) options.dense = DENSE;\r\n\tvar out = ((options.dense ? [] : {}));\r\n\tvar Directory = {};\r\n\tvar range = ({});\r\n\tvar last_formula = null;\r\n\tvar sst = ([]);\r\n\tvar cur_sheet = \"\";\r\n\tvar Preamble = {};\r\n\tvar lastcell, last_cell = \"\", cc, cmnt, rngC, rngR;\r\n\tvar sharedf = {};\r\n\tvar arrayf = [];\r\n\tvar temp_val;\r\n\tvar country;\r\n\tvar cell_valid = true;\r\n\tvar XFs = []; /* XF records */\r\n\tvar palette = [];\r\n\tvar Workbook = ({ Sheets:[], WBProps:{date1904:false}, Views:[{}] }), wsprops = {};\r\n\tvar get_rgb = function getrgb(icv) {\r\n\t\tif(icv < 8) return XLSIcv[icv];\r\n\t\tif(icv < 64) return palette[icv-8] || XLSIcv[icv];\r\n\t\treturn XLSIcv[icv];\r\n\t};\r\n\tvar process_cell_style = function pcs(cell, line, options) {\r\n\t\tvar xfd = line.XF.data;\r\n\t\tif(!xfd || !xfd.patternType || !options || !options.cellStyles) return;\r\n\t\tline.s = ({});\r\n\t\tline.s.patternType = xfd.patternType;\r\n\t\tvar t;\r\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvFore)))) { line.s.fgColor = {rgb:t}; }\r\n\t\tif((t = rgb2Hex(get_rgb(xfd.icvBack)))) { line.s.bgColor = {rgb:t}; }\r\n\t};\r\n\tvar addcell = function addcell(cell, line, options) {\r\n\t\tif(file_depth > 1) return;\r\n\t\tif(options.sheetRows && cell.r >= options.sheetRows) cell_valid = false;\r\n\t\tif(!cell_valid) return;\r\n\t\tif(options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\r\n\t\tdelete line.ixfe; delete line.XF;\r\n\t\tlastcell = cell;\r\n\t\tlast_cell = encode_cell(cell);\r\n\t\tif(range.s) {\r\n\t\t\tif(cell.r < range.s.r) range.s.r = cell.r;\r\n\t\t\tif(cell.c < range.s.c) range.s.c = cell.c;\r\n\t\t}\r\n\t\tif(range.e) {\r\n\t\t\tif(cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\r\n\t\t\tif(cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\r\n\t\t}\r\n\t\tif(options.cellFormula && line.f) {\r\n\t\t\tfor(var afi = 0; afi < arrayf.length; ++afi) {\r\n\t\t\t\tif(arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\r\n\t\t\t\tif(arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\r\n\t\t\t\tline.F = encode_range(arrayf[afi][0]);\r\n\t\t\t\tif(arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\r\n\t\t\t\tif(line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t{\r\n\t\t\tif(options.dense) {\r\n\t\t\t\tif(!out[cell.r]) out[cell.r] = [];\r\n\t\t\t\tout[cell.r][cell.c] = line;\r\n\t\t\t} else out[last_cell] = line;\r\n\t\t}\r\n\t};\r\n\tvar opts = ({\r\n\t\tenc: false, // encrypted\r\n\t\tsbcch: 0, // cch in the preceding SupBook\r\n\t\tsnames: [], // sheetnames\r\n\t\tsharedf: sharedf, // shared formulae by address\r\n\t\tarrayf: arrayf, // array formulae array\r\n\t\trrtabid: [], // RRTabId\r\n\t\tlastuser: \"\", // Last User from WriteAccess\r\n\t\tbiff: 8, // BIFF version\r\n\t\tcodepage: 0, // CP from CodePage record\r\n\t\twinlocked: 0, // fLockWn from WinProtect\r\n\t\tcellStyles: !!options && !!options.cellStyles,\r\n\t\tWTF: !!options && !!options.wtf\r\n\t});\r\n\tif(options.password) opts.password = options.password;\r\n\tvar themes;\r\n\tvar merges = [];\r\n\tvar objects = [];\r\n\tvar colinfo = [], rowinfo = [];\r\n\t// eslint-disable-next-line no-unused-vars\r\n\tvar defwidth = 0, defheight = 0; // twips / MDW respectively\r\n\tvar seencol = false;\r\n\tvar supbooks = ([]); // 1-indexed, will hold extern names\r\n\tsupbooks.SheetNames = opts.snames;\r\n\tsupbooks.sharedf = opts.sharedf;\r\n\tsupbooks.arrayf = opts.arrayf;\r\n\tsupbooks.names = [];\r\n\tsupbooks.XTI = [];\r\n\tvar last_Rn = '';\r\n\tvar file_depth = 0; /* TODO: make a real stack */\r\n\tvar BIFF2Fmt = 0, BIFF2FmtTable = [];\r\n\tvar FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\r\n\tvar last_lbl;\r\n\r\n\t/* explicit override for some broken writers */\r\n\topts.codepage = 1200;\r\n\tset_cp(1200);\r\n\tvar seen_codepage = false;\r\n\twhile(blob.l < blob.length - 1) {\r\n\t\tvar s = blob.l;\r\n\t\tvar RecordType = blob.read_shift(2);\r\n\t\tif(RecordType === 0 && last_Rn === 'EOF') break;\r\n\t\tvar length = (blob.l === blob.length ? 0 : blob.read_shift(2));\r\n\t\tvar R = XLSRecordEnum[RecordType];\r\n\t\t//console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\r\n\t\t//if(!R) console.log(blob.slice(blob.l, blob.l + length));\r\n\t\tif(R && R.f) {\r\n\t\t\tif(options.bookSheets) {\r\n\t\t\t\tif(last_Rn === 'BoundSheet8' && R.n !== 'BoundSheet8') break;\r\n\t\t\t}\r\n\t\t\tlast_Rn = R.n;\r\n\t\t\tif(R.r === 2 || R.r == 12) {\r\n\t\t\t\tvar rt = blob.read_shift(2); length -= 2;\r\n\t\t\t\tif(!opts.enc && rt !== RecordType && (((rt&0xFF)<<8)|(rt>>8)) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\r\n\t\t\t\tif(R.r == 12){ blob.l += 10; length -= 10; } // skip FRT\r\n\t\t\t}\r\n\t\t\t//console.error(R,blob.l,length,blob.length);\r\n\t\t\tvar val;\r\n\t\t\tif(R.n === 'EOF') val = R.f(blob, length, opts);\r\n\t\t\telse val = slurp(R, blob, length, opts);\r\n\t\t\tvar Rn = R.n;\r\n\t\t\tif(file_depth == 0 && Rn != 'BOF') continue;\r\n\t\t\t/* nested switch statements to workaround V8 128 limit */\r\n\t\t\tswitch(Rn) {\r\n\t\t\t\t/* Workbook Options */\r\n\t\t\t\tcase 'Date1904':\r\nwb.opts.Date1904 = Workbook.WBProps.date1904 = val; break;\r\n\t\t\t\tcase 'WriteProtect': wb.opts.WriteProtect = true; break;\r\n\t\t\t\tcase 'FilePass':\r\n\t\t\t\t\tif(!opts.enc) blob.l = 0;\r\n\t\t\t\t\topts.enc = val;\r\n\t\t\t\t\tif(!options.password) throw new Error(\"File is password-protected\");\r\n\t\t\t\t\tif(val.valid == null) throw new Error(\"Encryption scheme unsupported\");\r\n\t\t\t\t\tif(!val.valid) throw new Error(\"Password is incorrect\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'WriteAccess': opts.lastuser = val; break;\r\n\t\t\t\tcase 'FileSharing': break; //TODO\r\n\t\t\t\tcase 'CodePage':\r\n\t\t\t\t\t/* overrides based on test cases */\r\n\t\t\t\t\tswitch(val) {\r\n\t\t\t\t\t\tcase 0x5212: val =  1200; break;\r\n\t\t\t\t\t\tcase 0x8000: val = 10000; break;\r\n\t\t\t\t\t\tcase 0x8001: val =  1252; break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tset_cp(opts.codepage = val);\r\n\t\t\t\t\tseen_codepage = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'RRTabId': opts.rrtabid = val; break;\r\n\t\t\t\tcase 'WinProtect': opts.winlocked = val; break;\r\n\t\t\t\tcase 'Template': break; // TODO\r\n\t\t\t\tcase 'BookBool': break; // TODO\r\n\t\t\t\tcase 'UsesELFs': break;\r\n\t\t\t\tcase 'MTRSettings': break;\r\n\t\t\t\tcase 'RefreshAll':\r\n\t\t\t\tcase 'CalcCount':\r\n\t\t\t\tcase 'CalcDelta':\r\n\t\t\t\tcase 'CalcIter':\r\n\t\t\t\tcase 'CalcMode':\r\n\t\t\t\tcase 'CalcPrecision':\r\n\t\t\t\tcase 'CalcSaveRecalc':\r\n\t\t\t\t\twb.opts[Rn] = val; break;\r\n\t\t\t\tcase 'CalcRefMode': opts.CalcRefMode = val; break; // TODO: implement R1C1\r\n\t\t\t\tcase 'Uncalced': break;\r\n\t\t\t\tcase 'ForceFullCalculation': wb.opts.FullCalc = val; break;\r\n\t\t\t\tcase 'WsBool':\r\n\t\t\t\t\tif(val.fDialog) out[\"!type\"] = \"dialog\";\r\n\t\t\t\t\tbreak; // TODO\r\n\t\t\t\tcase 'XF': XFs.push(val); break;\r\n\t\t\t\tcase 'ExtSST': break; // TODO\r\n\t\t\t\tcase 'BookExt': break; // TODO\r\n\t\t\t\tcase 'RichTextStream': break;\r\n\t\t\t\tcase 'BkHim': break;\r\n\r\n\t\t\t\tcase 'SupBook':\r\n\t\t\t\t\tsupbooks.push([val]);\r\n\t\t\t\t\tsupbooks[supbooks.length-1].XTI = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ExternName':\r\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Index': break; // TODO\r\n\t\t\t\tcase 'Lbl':\r\n\t\t\t\t\tlast_lbl = ({\r\n\t\t\t\t\t\tName: val.Name,\r\n\t\t\t\t\t\tRef: stringify_formula(val.rgce,range,null,supbooks,opts)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif(val.itab > 0) last_lbl.Sheet = val.itab - 1;\r\n\t\t\t\t\tsupbooks.names.push(last_lbl);\r\n\t\t\t\t\tif(!supbooks[0]) { supbooks[0] = []; supbooks[0].XTI = []; }\r\n\t\t\t\t\tsupbooks[supbooks.length-1].push(val);\r\n\t\t\t\t\tif(val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0)\r\n\t\t\t\t\t\tif(val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d')\r\n\t\t\t\t\t\t\tFilterDatabases[val.itab - 1] = { ref: encode_range(val.rgce[0][0][1][2]) };\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ExternCount': opts.ExternCount = val; break;\r\n\t\t\t\tcase 'ExternSheet':\r\n\t\t\t\t\tif(supbooks.length == 0) { supbooks[0] = []; supbooks[0].XTI = []; }\r\n\t\t\t\t\tsupbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val); supbooks.XTI = supbooks.XTI.concat(val); break;\r\n\t\t\t\tcase 'NameCmt':\r\n\t\t\t\t\t/* TODO: search for correct name */\r\n\t\t\t\t\tif(opts.biff < 8) break;\r\n\t\t\t\t\tif(last_lbl != null) last_lbl.Comment = val[1];\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Protect': out[\"!protect\"] = val; break; /* for sheet or book */\r\n\t\t\t\tcase 'Password': if(val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val); break;\r\n\t\t\t\tcase 'Prot4Rev': case 'Prot4RevPass': break; /*TODO: Revision Control*/\r\n\r\n\t\t\t\tcase 'BoundSheet8': {\r\n\t\t\t\t\tDirectory[val.pos] = val;\r\n\t\t\t\t\topts.snames.push(val.name);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'EOF': {\r\n\t\t\t\t\tif(--file_depth) break;\r\n\t\t\t\t\tif(range.e) {\r\n\t\t\t\t\t\tif(range.e.r > 0 && range.e.c > 0) {\r\n\t\t\t\t\t\t\trange.e.r--; range.e.c--;\r\n\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\r\n\t\t\t\t\t\t\tif(options.sheetRows && options.sheetRows <= range.e.r) {\r\n\t\t\t\t\t\t\t\tvar tmpri = range.e.r;\r\n\t\t\t\t\t\t\t\trange.e.r = options.sheetRows - 1;\r\n\t\t\t\t\t\t\t\tout[\"!fullref\"] = out[\"!ref\"];\r\n\t\t\t\t\t\t\t\tout[\"!ref\"] = encode_range(range);\r\n\t\t\t\t\t\t\t\trange.e.r = tmpri;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trange.e.r++; range.e.c++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(merges.length > 0) out[\"!merges\"] = merges;\r\n\t\t\t\t\t\tif(objects.length > 0) out[\"!objects\"] = objects;\r\n\t\t\t\t\t\tif(colinfo.length > 0) out[\"!cols\"] = colinfo;\r\n\t\t\t\t\t\tif(rowinfo.length > 0) out[\"!rows\"] = rowinfo;\r\n\t\t\t\t\t\tWorkbook.Sheets.push(wsprops);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(cur_sheet === \"\") Preamble = out; else Sheets[cur_sheet] = out;\r\n\t\t\t\t\tout = ((options.dense ? [] : {}));\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'BOF': {\r\n\t\t\t\t\tif(opts.biff === 8) opts.biff = {\r\n0x0009:2,\r\n0x0209:3,\r\n0x0409:4\r\n\t\t\t\t\t}[RecordType] || {\r\n0x0200:2,\r\n0x0300:3,\r\n0x0400:4,\r\n0x0500:5,\r\n0x0600:8,\r\n0x0002:2,\r\n0x0007:2\r\n\t\t\t\t\t}[val.BIFFVer] || 8;\r\n\t\t\t\t\tif(file_depth++) break;\r\n\t\t\t\t\tcell_valid = true;\r\n\t\t\t\t\tout = ((options.dense ? [] : {}));\r\n\r\n\t\t\t\t\tif(opts.biff < 8 && !seen_codepage) { seen_codepage = true; set_cp(opts.codepage = options.codepage || 1252); }\r\n\t\t\t\t\tif(opts.biff < 5) {\r\n\t\t\t\t\t\tif(cur_sheet === \"\") cur_sheet = \"Sheet1\";\r\n\t\t\t\t\t\trange = {s:{r:0,c:0},e:{r:0,c:0}};\r\n\t\t\t\t\t\t/* fake BoundSheet8 */\r\n\t\t\t\t\t\tvar fakebs8 = {pos: blob.l - length, name:cur_sheet};\r\n\t\t\t\t\t\tDirectory[fakebs8.pos] = fakebs8;\r\n\t\t\t\t\t\topts.snames.push(cur_sheet);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse cur_sheet = (Directory[s] || {name:\"\"}).name;\r\n\t\t\t\t\tif(val.dt == 0x20) out[\"!type\"] = \"chart\";\r\n\t\t\t\t\tif(val.dt == 0x40) out[\"!type\"] = \"macro\";\r\n\t\t\t\t\tmerges = [];\r\n\t\t\t\t\tobjects = [];\r\n\t\t\t\t\topts.arrayf = arrayf = [];\r\n\t\t\t\t\tcolinfo = []; rowinfo = [];\r\n\t\t\t\t\tdefwidth = defheight = 0;\r\n\t\t\t\t\tseencol = false;\r\n\t\t\t\t\twsprops = {Hidden:(Directory[s]||{hs:0}).hs, name:cur_sheet };\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\tcase 'Number': case 'BIFF2NUM': case 'BIFF2INT': {\r\n\t\t\t\t\tif(out[\"!type\"] == \"chart\") if(options.dense ? (out[val.r]||[])[val.c]: out[encode_cell({c:val.c, r:val.r})]) ++val.c;\r\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe]||{}, v:val.val, t:'n'});\r\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'BoolErr': {\r\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.val, t:val.t});\r\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'RK': {\r\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], v:val.rknum, t:'n'});\r\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'MulRk': {\r\n\t\t\t\t\tfor(var j = val.c; j <= val.C; ++j) {\r\n\t\t\t\t\t\tvar ixfe = val.rkrec[j-val.c][0];\r\n\t\t\t\t\t\ttemp_val= ({ixfe:ixfe, XF:XFs[ixfe], v:val.rkrec[j-val.c][1], t:'n'});\r\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\t\taddcell({c:j, r:val.r}, temp_val, options);\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'Formula': {\r\n\t\t\t\t\tif(val.val == 'String') { last_formula = val; break; }\r\n\t\t\t\t\ttemp_val = make_cell(val.val, val.cell.ixfe, val.tt);\r\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\r\n\t\t\t\t\tif(options.cellFormula) {\r\n\t\t\t\t\t\tvar _f = val.formula;\r\n\t\t\t\t\t\tif(_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\r\n\t\t\t\t\t\t\tvar _fr = _f[0][0][1][0], _fc = _f[0][0][1][1];\r\n\t\t\t\t\t\t\tvar _fe = encode_cell({r:_fr, c:_fc});\r\n\t\t\t\t\t\t\tif(sharedf[_fe]) temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\r\n\t\t\t\t\t\t\telse temp_val.F = ((options.dense ? (out[_fr]||[])[_fc]: out[_fe]) || {}).F;\r\n\t\t\t\t\t\t} else temp_val.f = \"\"+stringify_formula(val.formula,range,val.cell,supbooks, opts);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\taddcell(val.cell, temp_val, options);\r\n\t\t\t\t\tlast_formula = val;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'String': {\r\n\t\t\t\t\tif(last_formula) { /* technically always true */\r\n\t\t\t\t\t\tlast_formula.val = val;\r\n\t\t\t\t\t\ttemp_val = make_cell(val, last_formula.cell.ixfe, 's');\r\n\t\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\r\n\t\t\t\t\t\tif(options.cellFormula) {\r\n\t\t\t\t\t\t\ttemp_val.f = \"\"+stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\t\taddcell(last_formula.cell, temp_val, options);\r\n\t\t\t\t\t\tlast_formula = null;\r\n\t\t\t\t\t} else throw new Error(\"String record expects Formula\");\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'Array': {\r\n\t\t\t\t\tarrayf.push(val);\r\n\t\t\t\t\tvar _arraystart = encode_cell(val[0].s);\r\n\t\t\t\t\tcc = options.dense ? (out[val[0].s.r]||[])[val[0].s.c] : out[_arraystart];\r\n\t\t\t\t\tif(options.cellFormula && cc) {\r\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\r\n\t\t\t\t\t\tif(!_arraystart || !cc) break;\r\n\t\t\t\t\t\tcc.f = \"\"+stringify_formula(val[1], range, val[0], supbooks, opts);\r\n\t\t\t\t\t\tcc.F = encode_range(val[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'ShrFmla': {\r\n\t\t\t\t\tif(!cell_valid) break;\r\n\t\t\t\t\tif(!options.cellFormula) break;\r\n\t\t\t\t\tif(last_cell) {\r\n\t\t\t\t\t\t/* TODO: capture range */\r\n\t\t\t\t\t\tif(!last_formula) break; /* technically unreachable */\r\n\t\t\t\t\t\tsharedf[encode_cell(last_formula.cell)]= val[0];\r\n\t\t\t\t\t\tcc = options.dense ? (out[last_formula.cell.r]||[])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\r\n\t\t\t\t\t\t(cc||{}).f = \"\"+stringify_formula(val[0], range, lastcell, supbooks, opts);\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'LabelSst':\r\n\t\t\t\t\ttemp_val=make_cell(sst[val.isst].t, val.ixfe, 's');\r\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\r\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Blank': if(options.sheetStubs) {\r\n\t\t\t\t\ttemp_val = ({ixfe: val.ixfe, XF: XFs[val.ixfe], t:'z'});\r\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'MulBlank': if(options.sheetStubs) {\r\n\t\t\t\t\tfor(var _j = val.c; _j <= val.C; ++_j) {\r\n\t\t\t\t\t\tvar _ixfe = val.ixfe[_j-val.c];\r\n\t\t\t\t\t\ttemp_val= ({ixfe:_ixfe, XF:XFs[_ixfe], t:'z'});\r\n\t\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\t\taddcell({c:_j, r:val.r}, temp_val, options);\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'RString':\r\n\t\t\t\tcase 'Label': case 'BIFF2STR':\r\n\t\t\t\t\ttemp_val=make_cell(val.val, val.ixfe, 's');\r\n\t\t\t\t\ttemp_val.XF = XFs[temp_val.ixfe];\r\n\t\t\t\t\tif(BIFF2Fmt > 0) temp_val.z = BIFF2FmtTable[(temp_val.ixfe>>8) & 0x1F];\r\n\t\t\t\t\tsafe_format_xf(temp_val, options, wb.opts.Date1904);\r\n\t\t\t\t\taddcell({c:val.c, r:val.r}, temp_val, options);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Dimensions': {\r\n\t\t\t\t\tif(file_depth === 1) range = val; /* TODO: stack */\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'SST': {\r\n\t\t\t\t\tsst = val;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'Format': { /* val = [id, fmt] */\r\n\t\t\t\t\tif(opts.biff == 4) {\r\n\t\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val[1];\r\n\t\t\t\t\t\tfor(var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if(SSF._table[b4idx] == val[1]) break;\r\n\t\t\t\t\t\tif(b4idx >= 163) SSF.load(val[1], BIFF2Fmt + 163);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse SSF.load(val[1], val[0]);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'BIFF2FORMAT': {\r\n\t\t\t\t\tBIFF2FmtTable[BIFF2Fmt++] = val;\r\n\t\t\t\t\tfor(var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if(SSF._table[b2idx] == val) break;\r\n\t\t\t\t\tif(b2idx >= 163) SSF.load(val, BIFF2Fmt + 163);\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\tcase 'MergeCells': merges = merges.concat(val); break;\r\n\r\n\t\t\t\tcase 'Obj': objects[val.cmo[0]] = opts.lastobj = val; break;\r\n\t\t\t\tcase 'TxO': opts.lastobj.TxO = val; break;\r\n\t\t\t\tcase 'ImData': opts.lastobj.ImData = val; break;\r\n\r\n\t\t\t\tcase 'HLink': {\r\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\r\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\r\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\r\n\t\t\t\t\t\t\tif(cc) cc.l = val[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'HLinkTooltip': {\r\n\t\t\t\t\tfor(rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR)\r\n\t\t\t\t\t\tfor(rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\r\n\t\t\t\t\t\t\tcc = options.dense ? (out[rngR]||[])[rngC] : out[encode_cell({c:rngC,r:rngR})];\r\n\t\t\t\t\t\t\tif(cc && cc.l) cc.l.Tooltip = val[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* Comments */\r\n\t\t\t\tcase 'Note': {\r\n\t\t\t\t\tif(opts.biff <= 5 && opts.biff >= 2) break; /* TODO: BIFF5 */\r\n\t\t\t\t\tcc = options.dense ? (out[val[0].r]||[])[val[0].c] : out[encode_cell(val[0])];\r\n\t\t\t\t\tvar noteobj = objects[val[2]];\r\n\t\t\t\t\tif(!cc) break;\r\n\t\t\t\t\tif(!cc.c) cc.c = [];\r\n\t\t\t\t\tcmnt = {a:val[1],t:noteobj.TxO.t};\r\n\t\t\t\t\tcc.c.push(cmnt);\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\tdefault: switch(R.n) { /* nested */\r\n\t\t\t\tcase 'ClrtClient': break;\r\n\t\t\t\tcase 'XFExt': update_xfext(XFs[val.ixfe], val.ext); break;\r\n\r\n\t\t\t\tcase 'DefColWidth': defwidth = val; break;\r\n\t\t\t\tcase 'DefaultRowHeight': defheight = val[1]; break; // TODO: flags\r\n\r\n\t\t\t\tcase 'ColInfo': {\r\n\t\t\t\t\tif(!opts.cellStyles) break;\r\n\t\t\t\t\twhile(val.e >= val.s) {\r\n\t\t\t\t\t\tcolinfo[val.e--] = { width: val.w/256 };\r\n\t\t\t\t\t\tif(!seencol) { seencol = true; find_mdw_colw(val.w/256); }\r\n\t\t\t\t\t\tprocess_col(colinfo[val.e+1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'Row': {\r\n\t\t\t\t\tvar rowobj = {};\r\n\t\t\t\t\tif(val.level != null) { rowinfo[val.r] = rowobj; rowobj.level = val.level; }\r\n\t\t\t\t\tif(val.hidden) { rowinfo[val.r] = rowobj; rowobj.hidden = true; }\r\n\t\t\t\t\tif(val.hpt) {\r\n\t\t\t\t\t\trowinfo[val.r] = rowobj;\r\n\t\t\t\t\t\trowobj.hpt = val.hpt; rowobj.hpx = pt2px(val.hpt);\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\tcase 'LeftMargin':\r\n\t\t\t\tcase 'RightMargin':\r\n\t\t\t\tcase 'TopMargin':\r\n\t\t\t\tcase 'BottomMargin':\r\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\r\n\t\t\t\t\tout['!margins'][Rn.slice(0,-6).toLowerCase()] = val;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Setup': // TODO\r\n\t\t\t\t\tif(!out['!margins']) default_margins(out['!margins'] = {});\r\n\t\t\t\t\tout['!margins'].header = val.header;\r\n\t\t\t\t\tout['!margins'].footer = val.footer;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Window2': // TODO\r\n\t\t\t\t\t// $FlowIgnore\r\n\t\t\t\t\tif(val.RTL) Workbook.Views[0].RTL = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Header': break; // TODO\r\n\t\t\t\tcase 'Footer': break; // TODO\r\n\t\t\t\tcase 'HCenter': break; // TODO\r\n\t\t\t\tcase 'VCenter': break; // TODO\r\n\t\t\t\tcase 'Pls': break; // TODO\r\n\t\t\t\tcase 'GCW': break;\r\n\t\t\t\tcase 'LHRecord': break;\r\n\t\t\t\tcase 'DBCell': break; // TODO\r\n\t\t\t\tcase 'EntExU2': break; // TODO\r\n\t\t\t\tcase 'SxView': break; // TODO\r\n\t\t\t\tcase 'Sxvd': break; // TODO\r\n\t\t\t\tcase 'SXVI': break; // TODO\r\n\t\t\t\tcase 'SXVDEx': break; // TODO\r\n\t\t\t\tcase 'SxIvd': break; // TODO\r\n\t\t\t\tcase 'SXString': break; // TODO\r\n\t\t\t\tcase 'Sync': break;\r\n\t\t\t\tcase 'Addin': break;\r\n\t\t\t\tcase 'SXDI': break; // TODO\r\n\t\t\t\tcase 'SXLI': break; // TODO\r\n\t\t\t\tcase 'SXEx': break; // TODO\r\n\t\t\t\tcase 'QsiSXTag': break; // TODO\r\n\t\t\t\tcase 'Selection': break;\r\n\t\t\t\tcase 'Feat': break;\r\n\t\t\t\tcase 'FeatHdr': case 'FeatHdr11': break;\r\n\t\t\t\tcase 'Feature11': case 'Feature12': case 'List12': break;\r\n\t\t\t\tcase 'Country': country = val; break;\r\n\t\t\t\tcase 'RecalcId': break;\r\n\t\t\t\tcase 'DxGCol': break; // TODO: htmlify\r\n\t\t\t\tcase 'Fbi': case 'Fbi2': case 'GelFrame': break;\r\n\t\t\t\tcase 'Font': break; // TODO\r\n\t\t\t\tcase 'XFCRC': break; // TODO\r\n\t\t\t\tcase 'Style': break; // TODO\r\n\t\t\t\tcase 'StyleExt': break; // TODO\r\n\t\t\t\tcase 'Palette': palette = val; break;\r\n\t\t\t\tcase 'Theme': themes = val; break;\r\n\t\t\t\t/* Protection */\r\n\t\t\t\tcase 'ScenarioProtect': break;\r\n\t\t\t\tcase 'ObjProtect': break;\r\n\r\n\t\t\t\t/* Conditional Formatting */\r\n\t\t\t\tcase 'CondFmt12': break;\r\n\r\n\t\t\t\t/* Table */\r\n\t\t\t\tcase 'Table': break; // TODO\r\n\t\t\t\tcase 'TableStyles': break; // TODO\r\n\t\t\t\tcase 'TableStyle': break; // TODO\r\n\t\t\t\tcase 'TableStyleElement': break; // TODO\r\n\r\n\t\t\t\t/* PivotTable */\r\n\t\t\t\tcase 'SXStreamID': break; // TODO\r\n\t\t\t\tcase 'SXVS': break; // TODO\r\n\t\t\t\tcase 'DConRef': break; // TODO\r\n\t\t\t\tcase 'SXAddl': break; // TODO\r\n\t\t\t\tcase 'DConBin': break; // TODO\r\n\t\t\t\tcase 'DConName': break; // TODO\r\n\t\t\t\tcase 'SXPI': break; // TODO\r\n\t\t\t\tcase 'SxFormat': break; // TODO\r\n\t\t\t\tcase 'SxSelect': break; // TODO\r\n\t\t\t\tcase 'SxRule': break; // TODO\r\n\t\t\t\tcase 'SxFilt': break; // TODO\r\n\t\t\t\tcase 'SxItm': break; // TODO\r\n\t\t\t\tcase 'SxDXF': break; // TODO\r\n\r\n\t\t\t\t/* Scenario Manager */\r\n\t\t\t\tcase 'ScenMan': break;\r\n\r\n\t\t\t\t/* Data Consolidation */\r\n\t\t\t\tcase 'DCon': break;\r\n\r\n\t\t\t\t/* Watched Cell */\r\n\t\t\t\tcase 'CellWatch': break;\r\n\r\n\t\t\t\t/* Print Settings */\r\n\t\t\t\tcase 'PrintRowCol': break;\r\n\t\t\t\tcase 'PrintGrid': break;\r\n\t\t\t\tcase 'PrintSize': break;\r\n\r\n\t\t\t\tcase 'XCT': break;\r\n\t\t\t\tcase 'CRN': break;\r\n\r\n\t\t\t\tcase 'Scl': {\r\n\t\t\t\t\t//console.log(\"Zoom Level:\", val[0]/val[1],val);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'SheetExt': {\r\n\t\t\t\t\t/* empty */\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'SheetExtOptional': {\r\n\t\t\t\t\t/* empty */\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\t/* VBA */\r\n\t\t\t\tcase 'ObNoMacros': {\r\n\t\t\t\t\t/* empty */\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'ObProj': {\r\n\t\t\t\t\t/* empty */\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'CodeName': {\r\nif(!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";\r\n\t\t\t\t\telse wsprops.CodeName = val || wsprops.name;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase 'GUIDTypeLib': {\r\n\t\t\t\t\t/* empty */\r\n\t\t\t\t} break;\r\n\r\n\t\t\t\tcase 'WOpt': break; // TODO: WTF?\r\n\t\t\t\tcase 'PhoneticInfo': break;\r\n\r\n\t\t\t\tcase 'OleObjectSize': break;\r\n\r\n\t\t\t\t/* Differential Formatting */\r\n\t\t\t\tcase 'DXF': case 'DXFN': case 'DXFN12': case 'DXFN12List': case 'DXFN12NoCB': break;\r\n\r\n\t\t\t\t/* Data Validation */\r\n\t\t\t\tcase 'Dv': case 'DVal': break;\r\n\r\n\t\t\t\t/* Data Series */\r\n\t\t\t\tcase 'BRAI': case 'Series': case 'SeriesText': break;\r\n\r\n\t\t\t\t/* Data Connection */\r\n\t\t\t\tcase 'DConn': break;\r\n\t\t\t\tcase 'DbOrParamQry': break;\r\n\t\t\t\tcase 'DBQueryExt': break;\r\n\r\n\t\t\t\tcase 'OleDbConn': break;\r\n\t\t\t\tcase 'ExtString': break;\r\n\r\n\t\t\t\t/* Formatting */\r\n\t\t\t\tcase 'IFmtRecord': break;\r\n\t\t\t\tcase 'CondFmt': case 'CF': case 'CF12': case 'CFEx': break;\r\n\r\n\t\t\t\t/* Explicitly Ignored */\r\n\t\t\t\tcase 'Excel9File': break;\r\n\t\t\t\tcase 'Units': break;\r\n\t\t\t\tcase 'InterfaceHdr': case 'Mms': case 'InterfaceEnd': case 'DSF': break;\r\n\t\t\t\tcase 'BuiltInFnGroupCount': /* 2.4.30 0x0E or 0x10 but excel 2011 generates 0x11? */ break;\r\n\t\t\t\t/* View Stuff */\r\n\t\t\t\tcase 'Window1': case 'HideObj': case 'GridSet': case 'Guts':\r\n\t\t\t\tcase 'UserBView': case 'UserSViewBegin': case 'UserSViewEnd':\r\n\t\t\t\tcase 'Pane': break;\r\n\t\t\t\tdefault: switch(R.n) { /* nested */\r\n\t\t\t\t/* Chart */\r\n\t\t\t\tcase 'Dat':\r\n\t\t\t\tcase 'Begin': case 'End':\r\n\t\t\t\tcase 'StartBlock': case 'EndBlock':\r\n\t\t\t\tcase 'Frame': case 'Area':\r\n\t\t\t\tcase 'Axis': case 'AxisLine': case 'Tick': break;\r\n\t\t\t\tcase 'AxesUsed':\r\n\t\t\t\tcase 'CrtLayout12': case 'CrtLayout12A': case 'CrtLink': case 'CrtLine': case 'CrtMlFrt': case 'CrtMlFrtContinue': break;\r\n\t\t\t\tcase 'LineFormat': case 'AreaFormat':\r\n\t\t\t\tcase 'Chart': case 'Chart3d': case 'Chart3DBarShape': case 'ChartFormat': case 'ChartFrtInfo': break;\r\n\t\t\t\tcase 'PlotArea': case 'PlotGrowth': break;\r\n\t\t\t\tcase 'SeriesList': case 'SerParent': case 'SerAuxTrend': break;\r\n\t\t\t\tcase 'DataFormat': case 'SerToCrt': case 'FontX': break;\r\n\t\t\t\tcase 'CatSerRange': case 'AxcExt': case 'SerFmt': break;\r\n\t\t\t\tcase 'ShtProps': break;\r\n\t\t\t\tcase 'DefaultText': case 'Text': case 'CatLab': break;\r\n\t\t\t\tcase 'DataLabExtContents': break;\r\n\t\t\t\tcase 'Legend': case 'LegendException': break;\r\n\t\t\t\tcase 'Pie': case 'Scatter': break;\r\n\t\t\t\tcase 'PieFormat': case 'MarkerFormat': break;\r\n\t\t\t\tcase 'StartObject': case 'EndObject': break;\r\n\t\t\t\tcase 'AlRuns': case 'ObjectLink': break;\r\n\t\t\t\tcase 'SIIndex': break;\r\n\t\t\t\tcase 'AttachedLabel': case 'YMult': break;\r\n\r\n\t\t\t\t/* Chart Group */\r\n\t\t\t\tcase 'Line': case 'Bar': break;\r\n\t\t\t\tcase 'Surf': break;\r\n\r\n\t\t\t\t/* Axis Group */\r\n\t\t\t\tcase 'AxisParent': break;\r\n\t\t\t\tcase 'Pos': break;\r\n\t\t\t\tcase 'ValueRange': break;\r\n\r\n\t\t\t\t/* Pivot Chart */\r\n\t\t\t\tcase 'SXViewEx9': break; // TODO\r\n\t\t\t\tcase 'SXViewLink': break;\r\n\t\t\t\tcase 'PivotChartBits': break;\r\n\t\t\t\tcase 'SBaseRef': break;\r\n\t\t\t\tcase 'TextPropsStream': break;\r\n\r\n\t\t\t\t/* Chart Misc */\r\n\t\t\t\tcase 'LnExt': break;\r\n\t\t\t\tcase 'MkrExt': break;\r\n\t\t\t\tcase 'CrtCoopt': break;\r\n\r\n\t\t\t\t/* Query Table */\r\n\t\t\t\tcase 'Qsi': case 'Qsif': case 'Qsir': case 'QsiSXTag': break;\r\n\t\t\t\tcase 'TxtQry': break;\r\n\r\n\t\t\t\t/* Filter */\r\n\t\t\t\tcase 'FilterMode': break;\r\n\t\t\t\tcase 'AutoFilter': case 'AutoFilterInfo': break;\r\n\t\t\t\tcase 'AutoFilter12': break;\r\n\t\t\t\tcase 'DropDownObjIds': break;\r\n\t\t\t\tcase 'Sort': break;\r\n\t\t\t\tcase 'SortData': break;\r\n\r\n\t\t\t\t/* Drawing */\r\n\t\t\t\tcase 'ShapePropsStream': break;\r\n\t\t\t\tcase 'MsoDrawing': case 'MsoDrawingGroup': case 'MsoDrawingSelection': break;\r\n\t\t\t\t/* Pub Stuff */\r\n\t\t\t\tcase 'WebPub': case 'AutoWebPub': break;\r\n\r\n\t\t\t\t/* Print Stuff */\r\n\t\t\t\tcase 'HeaderFooter': case 'HFPicture': case 'PLV':\r\n\t\t\t\tcase 'HorizontalPageBreaks': case 'VerticalPageBreaks': break;\r\n\t\t\t\t/* Behavioral */\r\n\t\t\t\tcase 'Backup': case 'CompressPictures': case 'Compat12': break;\r\n\r\n\t\t\t\t/* Should not Happen */\r\n\t\t\t\tcase 'Continue': case 'ContinueFrt12': break;\r\n\r\n\t\t\t\t/* Future Records */\r\n\t\t\t\tcase 'FrtFontList': case 'FrtWrapper': break;\r\n\r\n\t\t\t\tdefault: switch(R.n) { /* nested */\r\n\t\t\t\t/* BIFF5 records */\r\n\t\t\t\tcase 'TabIdConf': case 'Radar': case 'RadarArea': case 'DropBar': case 'Intl': case 'CoordList': case 'SerAuxErrBar': break;\r\n\r\n\t\t\t\t/* BIFF2-4 records */\r\n\t\t\t\tcase 'BIFF2FONTCLR': case 'BIFF2FMTCNT': case 'BIFF2FONTXTRA': break;\r\n\t\t\t\tcase 'BIFF2XF': case 'BIFF3XF': case 'BIFF4XF': break;\r\n\t\t\t\tcase 'BIFF4FMTCNT': case 'BIFF2ROW': case 'BIFF2WINDOW2': break;\r\n\r\n\t\t\t\t/* Miscellaneous */\r\n\t\t\t\tcase 'SCENARIO': case 'DConBin': case 'PicF': case 'DataLabExt':\r\n\t\t\t\tcase 'Lel': case 'BopPop': case 'BopPopCustom': case 'RealTimeData':\r\n\t\t\t\tcase 'Name': break;\r\n\t\t\t\tcase 'LHNGraph': case 'FnGroupName': case 'AddMenu': case 'LPr': break;\r\n\t\t\t\tcase 'ListObj': case 'ListField': break;\r\n\t\t\t\tcase 'RRSort': break;\r\n\t\t\t\tcase 'BigName': break;\r\n\t\t\t\tcase 'ToolbarHdr': case 'ToolbarEnd': break;\r\n\t\t\t\tcase 'DDEObjName': break;\r\n\t\t\t\tcase 'FRTArchId$': break;\r\n\t\t\t\tdefault: if(options.WTF) throw 'Unrecognized Record ' + R.n;\r\n\t\t\t}}}}\r\n\t\t} else blob.l += length;\r\n\t}\r\n\twb.SheetNames=keys(Directory).sort(function(a,b) { return Number(a) - Number(b); }).map(function(x){return Directory[x].name;});\r\n\tif(!options.bookSheets) wb.Sheets=Sheets;\r\n\tif(wb.Sheets) FilterDatabases.forEach(function(r,i) { wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r; });\r\n\twb.Preamble=Preamble;\r\n\twb.Strings = sst;\r\n\twb.SSF = SSF.get_table();\r\n\tif(opts.enc) wb.Encryption = opts.enc;\r\n\tif(themes) wb.Themes = themes;\r\n\twb.Metadata = {};\r\n\tif(country !== undefined) wb.Metadata.Country = country;\r\n\tif(supbooks.names.length > 0) Workbook.Names = supbooks.names;\r\n\twb.Workbook = Workbook;\r\n\treturn wb;\r\n}\r\n\r\n/* TODO: WTF */\r\nfunction parse_props(cfb, props, o) {\r\n\t/* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\r\n\tvar DSI = CFB.find(cfb, '!DocumentSummaryInformation');\r\n\tif(DSI && DSI.size > 0) try {\r\n\t\tvar DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, \"02d5cdd59c2e1b10939708002b2cf9ae\");\r\n\t\tfor(var d in DocSummary) props[d] = DocSummary[d];\r\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\r\n\r\n\t/* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\r\n\tvar SI = CFB.find(cfb, '!SummaryInformation');\r\n\tif(SI && SI.size > 0) try {\r\n\t\tvar Summary = parse_PropertySetStream(SI, SummaryPIDSI, \"e0859ff2f94f6810ab9108002b27b3d9\");\r\n\t\tfor(var s in Summary) if(props[s] == null) props[s] = Summary[s];\r\n\t} catch(e) {if(o.WTF) throw e;/* empty */}\r\n}\r\n\r\nfunction parse_xlscfb(cfb, options) {\r\nif(!options) options = {};\r\nfix_read_opts(options);\r\nreset_cp();\r\nif(options.codepage) set_ansi(options.codepage);\r\nvar CompObj, WB;\r\nif(cfb.FullPaths) {\r\n\tif(CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\r\n\tCompObj = CFB.find(cfb, '!CompObj');\r\n\tWB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\r\n} else {\r\n\tswitch(options.type) {\r\n\t\tcase 'base64': cfb = s2a(Base64.decode(cfb)); break;\r\n\t\tcase 'binary': cfb = s2a(cfb); break;\r\n\t\tcase 'buffer': break;\r\n\t\tcase 'array': if(!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb); break;\r\n\t}\r\n\tprep_blob(cfb, 0);\r\n\tWB = ({content: cfb});\r\n}\r\nvar WorkbookP;\r\n\r\nvar _data;\r\nif(CompObj) parse_compobj(CompObj);\r\nif(options.bookProps && !options.bookSheets) WorkbookP = ({});\r\nelse {\r\n\tvar T = has_buf ? 'buffer' : 'array';\r\n\tif(WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\r\n\t/* Quattro Pro 7-8 */\r\n\telse if((_data=CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\r\n\t/* Quattro Pro 9 */\r\n\telse if((_data=CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\r\n\telse throw new Error(\"Cannot find Workbook stream\");\r\n\tif(options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\r\n}\r\n\r\nvar props = {};\r\nif(cfb.FullPaths) parse_props(cfb, props, options);\r\n\r\nWorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\r\nif(options.bookFiles) WorkbookP.cfb = cfb;\r\n/*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\r\nreturn WorkbookP;\r\n}\r\n\r\n\r\nfunction write_xlscfb(wb, opts) {\r\n\tvar o = opts || {};\r\n\tvar cfb = CFB.utils.cfb_new({root:\"R\"});\r\n\tvar wbpath = \"/Workbook\";\r\n\tswitch(o.bookType || \"xls\") {\r\n\t\tcase \"xls\": o.bookType = \"biff8\";\r\n\t\t/* falls through */\r\n\t\tcase \"xla\": if(!o.bookType) o.bookType = \"xla\";\r\n\t\t/* falls through */\r\n\t\tcase \"biff8\": wbpath = \"/Workbook\"; o.biff = 8; break;\r\n\t\tcase \"biff5\": wbpath = \"/Book\"; o.biff = 5; break;\r\n\t\tdefault: throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\r\n\t}\r\n\tCFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\r\n\t// TODO: SI, DSI, CO\r\n\tif(o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"}));\r\n\treturn cfb;\r\n}\r\n/* [MS-XLSB] 2.3 Record Enumeration */\r\nvar XLSBRecordEnum = {\r\n0x0000: { n:\"BrtRowHdr\", f:parse_BrtRowHdr },\r\n0x0001: { n:\"BrtCellBlank\", f:parse_BrtCellBlank },\r\n0x0002: { n:\"BrtCellRk\", f:parse_BrtCellRk },\r\n0x0003: { n:\"BrtCellError\", f:parse_BrtCellError },\r\n0x0004: { n:\"BrtCellBool\", f:parse_BrtCellBool },\r\n0x0005: { n:\"BrtCellReal\", f:parse_BrtCellReal },\r\n0x0006: { n:\"BrtCellSt\", f:parse_BrtCellSt },\r\n0x0007: { n:\"BrtCellIsst\", f:parse_BrtCellIsst },\r\n0x0008: { n:\"BrtFmlaString\", f:parse_BrtFmlaString },\r\n0x0009: { n:\"BrtFmlaNum\", f:parse_BrtFmlaNum },\r\n0x000A: { n:\"BrtFmlaBool\", f:parse_BrtFmlaBool },\r\n0x000B: { n:\"BrtFmlaError\", f:parse_BrtFmlaError },\r\n0x0010: { n:\"BrtFRTArchID$\", f:parse_BrtFRTArchID$ },\r\n0x0013: { n:\"BrtSSTItem\", f:parse_RichStr },\r\n0x0014: { n:\"BrtPCDIMissing\" },\r\n0x0015: { n:\"BrtPCDINumber\" },\r\n0x0016: { n:\"BrtPCDIBoolean\" },\r\n0x0017: { n:\"BrtPCDIError\" },\r\n0x0018: { n:\"BrtPCDIString\" },\r\n0x0019: { n:\"BrtPCDIDatetime\" },\r\n0x001A: { n:\"BrtPCDIIndex\" },\r\n0x001B: { n:\"BrtPCDIAMissing\" },\r\n0x001C: { n:\"BrtPCDIANumber\" },\r\n0x001D: { n:\"BrtPCDIABoolean\" },\r\n0x001E: { n:\"BrtPCDIAError\" },\r\n0x001F: { n:\"BrtPCDIAString\" },\r\n0x0020: { n:\"BrtPCDIADatetime\" },\r\n0x0021: { n:\"BrtPCRRecord\" },\r\n0x0022: { n:\"BrtPCRRecordDt\" },\r\n0x0023: { n:\"BrtFRTBegin\" },\r\n0x0024: { n:\"BrtFRTEnd\" },\r\n0x0025: { n:\"BrtACBegin\" },\r\n0x0026: { n:\"BrtACEnd\" },\r\n0x0027: { n:\"BrtName\", f:parse_BrtName },\r\n0x0028: { n:\"BrtIndexRowBlock\" },\r\n0x002A: { n:\"BrtIndexBlock\" },\r\n0x002B: { n:\"BrtFont\", f:parse_BrtFont },\r\n0x002C: { n:\"BrtFmt\", f:parse_BrtFmt },\r\n0x002D: { n:\"BrtFill\", f:parse_BrtFill },\r\n0x002E: { n:\"BrtBorder\", f:parse_BrtBorder },\r\n0x002F: { n:\"BrtXF\", f:parse_BrtXF },\r\n0x0030: { n:\"BrtStyle\" },\r\n0x0031: { n:\"BrtCellMeta\" },\r\n0x0032: { n:\"BrtValueMeta\" },\r\n0x0033: { n:\"BrtMdb\" },\r\n0x0034: { n:\"BrtBeginFmd\" },\r\n0x0035: { n:\"BrtEndFmd\" },\r\n0x0036: { n:\"BrtBeginMdx\" },\r\n0x0037: { n:\"BrtEndMdx\" },\r\n0x0038: { n:\"BrtBeginMdxTuple\" },\r\n0x0039: { n:\"BrtEndMdxTuple\" },\r\n0x003A: { n:\"BrtMdxMbrIstr\" },\r\n0x003B: { n:\"BrtStr\" },\r\n0x003C: { n:\"BrtColInfo\", f:parse_ColInfo },\r\n0x003E: { n:\"BrtCellRString\" },\r\n0x003F: { n:\"BrtCalcChainItem$\", f:parse_BrtCalcChainItem$ },\r\n0x0040: { n:\"BrtDVal\" },\r\n0x0041: { n:\"BrtSxvcellNum\" },\r\n0x0042: { n:\"BrtSxvcellStr\" },\r\n0x0043: { n:\"BrtSxvcellBool\" },\r\n0x0044: { n:\"BrtSxvcellErr\" },\r\n0x0045: { n:\"BrtSxvcellDate\" },\r\n0x0046: { n:\"BrtSxvcellNil\" },\r\n0x0080: { n:\"BrtFileVersion\" },\r\n0x0081: { n:\"BrtBeginSheet\" },\r\n0x0082: { n:\"BrtEndSheet\" },\r\n0x0083: { n:\"BrtBeginBook\", f:parsenoop, p:0 },\r\n0x0084: { n:\"BrtEndBook\" },\r\n0x0085: { n:\"BrtBeginWsViews\" },\r\n0x0086: { n:\"BrtEndWsViews\" },\r\n0x0087: { n:\"BrtBeginBookViews\" },\r\n0x0088: { n:\"BrtEndBookViews\" },\r\n0x0089: { n:\"BrtBeginWsView\", f:parse_BrtBeginWsView },\r\n0x008A: { n:\"BrtEndWsView\" },\r\n0x008B: { n:\"BrtBeginCsViews\" },\r\n0x008C: { n:\"BrtEndCsViews\" },\r\n0x008D: { n:\"BrtBeginCsView\" },\r\n0x008E: { n:\"BrtEndCsView\" },\r\n0x008F: { n:\"BrtBeginBundleShs\" },\r\n0x0090: { n:\"BrtEndBundleShs\" },\r\n0x0091: { n:\"BrtBeginSheetData\" },\r\n0x0092: { n:\"BrtEndSheetData\" },\r\n0x0093: { n:\"BrtWsProp\", f:parse_BrtWsProp },\r\n0x0094: { n:\"BrtWsDim\", f:parse_BrtWsDim, p:16 },\r\n0x0097: { n:\"BrtPane\" },\r\n0x0098: { n:\"BrtSel\" },\r\n0x0099: { n:\"BrtWbProp\", f:parse_BrtWbProp },\r\n0x009A: { n:\"BrtWbFactoid\" },\r\n0x009B: { n:\"BrtFileRecover\" },\r\n0x009C: { n:\"BrtBundleSh\", f:parse_BrtBundleSh },\r\n0x009D: { n:\"BrtCalcProp\" },\r\n0x009E: { n:\"BrtBookView\" },\r\n0x009F: { n:\"BrtBeginSst\", f:parse_BrtBeginSst },\r\n0x00A0: { n:\"BrtEndSst\" },\r\n0x00A1: { n:\"BrtBeginAFilter\", f:parse_UncheckedRfX },\r\n0x00A2: { n:\"BrtEndAFilter\" },\r\n0x00A3: { n:\"BrtBeginFilterColumn\" },\r\n0x00A4: { n:\"BrtEndFilterColumn\" },\r\n0x00A5: { n:\"BrtBeginFilters\" },\r\n0x00A6: { n:\"BrtEndFilters\" },\r\n0x00A7: { n:\"BrtFilter\" },\r\n0x00A8: { n:\"BrtColorFilter\" },\r\n0x00A9: { n:\"BrtIconFilter\" },\r\n0x00AA: { n:\"BrtTop10Filter\" },\r\n0x00AB: { n:\"BrtDynamicFilter\" },\r\n0x00AC: { n:\"BrtBeginCustomFilters\" },\r\n0x00AD: { n:\"BrtEndCustomFilters\" },\r\n0x00AE: { n:\"BrtCustomFilter\" },\r\n0x00AF: { n:\"BrtAFilterDateGroupItem\" },\r\n0x00B0: { n:\"BrtMergeCell\", f:parse_BrtMergeCell },\r\n0x00B1: { n:\"BrtBeginMergeCells\" },\r\n0x00B2: { n:\"BrtEndMergeCells\" },\r\n0x00B3: { n:\"BrtBeginPivotCacheDef\" },\r\n0x00B4: { n:\"BrtEndPivotCacheDef\" },\r\n0x00B5: { n:\"BrtBeginPCDFields\" },\r\n0x00B6: { n:\"BrtEndPCDFields\" },\r\n0x00B7: { n:\"BrtBeginPCDField\" },\r\n0x00B8: { n:\"BrtEndPCDField\" },\r\n0x00B9: { n:\"BrtBeginPCDSource\" },\r\n0x00BA: { n:\"BrtEndPCDSource\" },\r\n0x00BB: { n:\"BrtBeginPCDSRange\" },\r\n0x00BC: { n:\"BrtEndPCDSRange\" },\r\n0x00BD: { n:\"BrtBeginPCDFAtbl\" },\r\n0x00BE: { n:\"BrtEndPCDFAtbl\" },\r\n0x00BF: { n:\"BrtBeginPCDIRun\" },\r\n0x00C0: { n:\"BrtEndPCDIRun\" },\r\n0x00C1: { n:\"BrtBeginPivotCacheRecords\" },\r\n0x00C2: { n:\"BrtEndPivotCacheRecords\" },\r\n0x00C3: { n:\"BrtBeginPCDHierarchies\" },\r\n0x00C4: { n:\"BrtEndPCDHierarchies\" },\r\n0x00C5: { n:\"BrtBeginPCDHierarchy\" },\r\n0x00C6: { n:\"BrtEndPCDHierarchy\" },\r\n0x00C7: { n:\"BrtBeginPCDHFieldsUsage\" },\r\n0x00C8: { n:\"BrtEndPCDHFieldsUsage\" },\r\n0x00C9: { n:\"BrtBeginExtConnection\" },\r\n0x00CA: { n:\"BrtEndExtConnection\" },\r\n0x00CB: { n:\"BrtBeginECDbProps\" },\r\n0x00CC: { n:\"BrtEndECDbProps\" },\r\n0x00CD: { n:\"BrtBeginECOlapProps\" },\r\n0x00CE: { n:\"BrtEndECOlapProps\" },\r\n0x00CF: { n:\"BrtBeginPCDSConsol\" },\r\n0x00D0: { n:\"BrtEndPCDSConsol\" },\r\n0x00D1: { n:\"BrtBeginPCDSCPages\" },\r\n0x00D2: { n:\"BrtEndPCDSCPages\" },\r\n0x00D3: { n:\"BrtBeginPCDSCPage\" },\r\n0x00D4: { n:\"BrtEndPCDSCPage\" },\r\n0x00D5: { n:\"BrtBeginPCDSCPItem\" },\r\n0x00D6: { n:\"BrtEndPCDSCPItem\" },\r\n0x00D7: { n:\"BrtBeginPCDSCSets\" },\r\n0x00D8: { n:\"BrtEndPCDSCSets\" },\r\n0x00D9: { n:\"BrtBeginPCDSCSet\" },\r\n0x00DA: { n:\"BrtEndPCDSCSet\" },\r\n0x00DB: { n:\"BrtBeginPCDFGroup\" },\r\n0x00DC: { n:\"BrtEndPCDFGroup\" },\r\n0x00DD: { n:\"BrtBeginPCDFGItems\" },\r\n0x00DE: { n:\"BrtEndPCDFGItems\" },\r\n0x00DF: { n:\"BrtBeginPCDFGRange\" },\r\n0x00E0: { n:\"BrtEndPCDFGRange\" },\r\n0x00E1: { n:\"BrtBeginPCDFGDiscrete\" },\r\n0x00E2: { n:\"BrtEndPCDFGDiscrete\" },\r\n0x00E3: { n:\"BrtBeginPCDSDTupleCache\" },\r\n0x00E4: { n:\"BrtEndPCDSDTupleCache\" },\r\n0x00E5: { n:\"BrtBeginPCDSDTCEntries\" },\r\n0x00E6: { n:\"BrtEndPCDSDTCEntries\" },\r\n0x00E7: { n:\"BrtBeginPCDSDTCEMembers\" },\r\n0x00E8: { n:\"BrtEndPCDSDTCEMembers\" },\r\n0x00E9: { n:\"BrtBeginPCDSDTCEMember\" },\r\n0x00EA: { n:\"BrtEndPCDSDTCEMember\" },\r\n0x00EB: { n:\"BrtBeginPCDSDTCQueries\" },\r\n0x00EC: { n:\"BrtEndPCDSDTCQueries\" },\r\n0x00ED: { n:\"BrtBeginPCDSDTCQuery\" },\r\n0x00EE: { n:\"BrtEndPCDSDTCQuery\" },\r\n0x00EF: { n:\"BrtBeginPCDSDTCSets\" },\r\n0x00F0: { n:\"BrtEndPCDSDTCSets\" },\r\n0x00F1: { n:\"BrtBeginPCDSDTCSet\" },\r\n0x00F2: { n:\"BrtEndPCDSDTCSet\" },\r\n0x00F3: { n:\"BrtBeginPCDCalcItems\" },\r\n0x00F4: { n:\"BrtEndPCDCalcItems\" },\r\n0x00F5: { n:\"BrtBeginPCDCalcItem\" },\r\n0x00F6: { n:\"BrtEndPCDCalcItem\" },\r\n0x00F7: { n:\"BrtBeginPRule\" },\r\n0x00F8: { n:\"BrtEndPRule\" },\r\n0x00F9: { n:\"BrtBeginPRFilters\" },\r\n0x00FA: { n:\"BrtEndPRFilters\" },\r\n0x00FB: { n:\"BrtBeginPRFilter\" },\r\n0x00FC: { n:\"BrtEndPRFilter\" },\r\n0x00FD: { n:\"BrtBeginPNames\" },\r\n0x00FE: { n:\"BrtEndPNames\" },\r\n0x00FF: { n:\"BrtBeginPName\" },\r\n0x0100: { n:\"BrtEndPName\" },\r\n0x0101: { n:\"BrtBeginPNPairs\" },\r\n0x0102: { n:\"BrtEndPNPairs\" },\r\n0x0103: { n:\"BrtBeginPNPair\" },\r\n0x0104: { n:\"BrtEndPNPair\" },\r\n0x0105: { n:\"BrtBeginECWebProps\" },\r\n0x0106: { n:\"BrtEndECWebProps\" },\r\n0x0107: { n:\"BrtBeginEcWpTables\" },\r\n0x0108: { n:\"BrtEndECWPTables\" },\r\n0x0109: { n:\"BrtBeginECParams\" },\r\n0x010A: { n:\"BrtEndECParams\" },\r\n0x010B: { n:\"BrtBeginECParam\" },\r\n0x010C: { n:\"BrtEndECParam\" },\r\n0x010D: { n:\"BrtBeginPCDKPIs\" },\r\n0x010E: { n:\"BrtEndPCDKPIs\" },\r\n0x010F: { n:\"BrtBeginPCDKPI\" },\r\n0x0110: { n:\"BrtEndPCDKPI\" },\r\n0x0111: { n:\"BrtBeginDims\" },\r\n0x0112: { n:\"BrtEndDims\" },\r\n0x0113: { n:\"BrtBeginDim\" },\r\n0x0114: { n:\"BrtEndDim\" },\r\n0x0115: { n:\"BrtIndexPartEnd\" },\r\n0x0116: { n:\"BrtBeginStyleSheet\" },\r\n0x0117: { n:\"BrtEndStyleSheet\" },\r\n0x0118: { n:\"BrtBeginSXView\" },\r\n0x0119: { n:\"BrtEndSXVI\" },\r\n0x011A: { n:\"BrtBeginSXVI\" },\r\n0x011B: { n:\"BrtBeginSXVIs\" },\r\n0x011C: { n:\"BrtEndSXVIs\" },\r\n0x011D: { n:\"BrtBeginSXVD\" },\r\n0x011E: { n:\"BrtEndSXVD\" },\r\n0x011F: { n:\"BrtBeginSXVDs\" },\r\n0x0120: { n:\"BrtEndSXVDs\" },\r\n0x0121: { n:\"BrtBeginSXPI\" },\r\n0x0122: { n:\"BrtEndSXPI\" },\r\n0x0123: { n:\"BrtBeginSXPIs\" },\r\n0x0124: { n:\"BrtEndSXPIs\" },\r\n0x0125: { n:\"BrtBeginSXDI\" },\r\n0x0126: { n:\"BrtEndSXDI\" },\r\n0x0127: { n:\"BrtBeginSXDIs\" },\r\n0x0128: { n:\"BrtEndSXDIs\" },\r\n0x0129: { n:\"BrtBeginSXLI\" },\r\n0x012A: { n:\"BrtEndSXLI\" },\r\n0x012B: { n:\"BrtBeginSXLIRws\" },\r\n0x012C: { n:\"BrtEndSXLIRws\" },\r\n0x012D: { n:\"BrtBeginSXLICols\" },\r\n0x012E: { n:\"BrtEndSXLICols\" },\r\n0x012F: { n:\"BrtBeginSXFormat\" },\r\n0x0130: { n:\"BrtEndSXFormat\" },\r\n0x0131: { n:\"BrtBeginSXFormats\" },\r\n0x0132: { n:\"BrtEndSxFormats\" },\r\n0x0133: { n:\"BrtBeginSxSelect\" },\r\n0x0134: { n:\"BrtEndSxSelect\" },\r\n0x0135: { n:\"BrtBeginISXVDRws\" },\r\n0x0136: { n:\"BrtEndISXVDRws\" },\r\n0x0137: { n:\"BrtBeginISXVDCols\" },\r\n0x0138: { n:\"BrtEndISXVDCols\" },\r\n0x0139: { n:\"BrtEndSXLocation\" },\r\n0x013A: { n:\"BrtBeginSXLocation\" },\r\n0x013B: { n:\"BrtEndSXView\" },\r\n0x013C: { n:\"BrtBeginSXTHs\" },\r\n0x013D: { n:\"BrtEndSXTHs\" },\r\n0x013E: { n:\"BrtBeginSXTH\" },\r\n0x013F: { n:\"BrtEndSXTH\" },\r\n0x0140: { n:\"BrtBeginISXTHRws\" },\r\n0x0141: { n:\"BrtEndISXTHRws\" },\r\n0x0142: { n:\"BrtBeginISXTHCols\" },\r\n0x0143: { n:\"BrtEndISXTHCols\" },\r\n0x0144: { n:\"BrtBeginSXTDMPS\" },\r\n0x0145: { n:\"BrtEndSXTDMPs\" },\r\n0x0146: { n:\"BrtBeginSXTDMP\" },\r\n0x0147: { n:\"BrtEndSXTDMP\" },\r\n0x0148: { n:\"BrtBeginSXTHItems\" },\r\n0x0149: { n:\"BrtEndSXTHItems\" },\r\n0x014A: { n:\"BrtBeginSXTHItem\" },\r\n0x014B: { n:\"BrtEndSXTHItem\" },\r\n0x014C: { n:\"BrtBeginMetadata\" },\r\n0x014D: { n:\"BrtEndMetadata\" },\r\n0x014E: { n:\"BrtBeginEsmdtinfo\" },\r\n0x014F: { n:\"BrtMdtinfo\" },\r\n0x0150: { n:\"BrtEndEsmdtinfo\" },\r\n0x0151: { n:\"BrtBeginEsmdb\" },\r\n0x0152: { n:\"BrtEndEsmdb\" },\r\n0x0153: { n:\"BrtBeginEsfmd\" },\r\n0x0154: { n:\"BrtEndEsfmd\" },\r\n0x0155: { n:\"BrtBeginSingleCells\" },\r\n0x0156: { n:\"BrtEndSingleCells\" },\r\n0x0157: { n:\"BrtBeginList\" },\r\n0x0158: { n:\"BrtEndList\" },\r\n0x0159: { n:\"BrtBeginListCols\" },\r\n0x015A: { n:\"BrtEndListCols\" },\r\n0x015B: { n:\"BrtBeginListCol\" },\r\n0x015C: { n:\"BrtEndListCol\" },\r\n0x015D: { n:\"BrtBeginListXmlCPr\" },\r\n0x015E: { n:\"BrtEndListXmlCPr\" },\r\n0x015F: { n:\"BrtListCCFmla\" },\r\n0x0160: { n:\"BrtListTrFmla\" },\r\n0x0161: { n:\"BrtBeginExternals\" },\r\n0x0162: { n:\"BrtEndExternals\" },\r\n0x0163: { n:\"BrtSupBookSrc\", f:parse_RelID},\r\n0x0165: { n:\"BrtSupSelf\" },\r\n0x0166: { n:\"BrtSupSame\" },\r\n0x0167: { n:\"BrtSupTabs\" },\r\n0x0168: { n:\"BrtBeginSupBook\" },\r\n0x0169: { n:\"BrtPlaceholderName\" },\r\n0x016A: { n:\"BrtExternSheet\", f:parse_ExternSheet },\r\n0x016B: { n:\"BrtExternTableStart\" },\r\n0x016C: { n:\"BrtExternTableEnd\" },\r\n0x016E: { n:\"BrtExternRowHdr\" },\r\n0x016F: { n:\"BrtExternCellBlank\" },\r\n0x0170: { n:\"BrtExternCellReal\" },\r\n0x0171: { n:\"BrtExternCellBool\" },\r\n0x0172: { n:\"BrtExternCellError\" },\r\n0x0173: { n:\"BrtExternCellString\" },\r\n0x0174: { n:\"BrtBeginEsmdx\" },\r\n0x0175: { n:\"BrtEndEsmdx\" },\r\n0x0176: { n:\"BrtBeginMdxSet\" },\r\n0x0177: { n:\"BrtEndMdxSet\" },\r\n0x0178: { n:\"BrtBeginMdxMbrProp\" },\r\n0x0179: { n:\"BrtEndMdxMbrProp\" },\r\n0x017A: { n:\"BrtBeginMdxKPI\" },\r\n0x017B: { n:\"BrtEndMdxKPI\" },\r\n0x017C: { n:\"BrtBeginEsstr\" },\r\n0x017D: { n:\"BrtEndEsstr\" },\r\n0x017E: { n:\"BrtBeginPRFItem\" },\r\n0x017F: { n:\"BrtEndPRFItem\" },\r\n0x0180: { n:\"BrtBeginPivotCacheIDs\" },\r\n0x0181: { n:\"BrtEndPivotCacheIDs\" },\r\n0x0182: { n:\"BrtBeginPivotCacheID\" },\r\n0x0183: { n:\"BrtEndPivotCacheID\" },\r\n0x0184: { n:\"BrtBeginISXVIs\" },\r\n0x0185: { n:\"BrtEndISXVIs\" },\r\n0x0186: { n:\"BrtBeginColInfos\" },\r\n0x0187: { n:\"BrtEndColInfos\" },\r\n0x0188: { n:\"BrtBeginRwBrk\" },\r\n0x0189: { n:\"BrtEndRwBrk\" },\r\n0x018A: { n:\"BrtBeginColBrk\" },\r\n0x018B: { n:\"BrtEndColBrk\" },\r\n0x018C: { n:\"BrtBrk\" },\r\n0x018D: { n:\"BrtUserBookView\" },\r\n0x018E: { n:\"BrtInfo\" },\r\n0x018F: { n:\"BrtCUsr\" },\r\n0x0190: { n:\"BrtUsr\" },\r\n0x0191: { n:\"BrtBeginUsers\" },\r\n0x0193: { n:\"BrtEOF\" },\r\n0x0194: { n:\"BrtUCR\" },\r\n0x0195: { n:\"BrtRRInsDel\" },\r\n0x0196: { n:\"BrtRREndInsDel\" },\r\n0x0197: { n:\"BrtRRMove\" },\r\n0x0198: { n:\"BrtRREndMove\" },\r\n0x0199: { n:\"BrtRRChgCell\" },\r\n0x019A: { n:\"BrtRREndChgCell\" },\r\n0x019B: { n:\"BrtRRHeader\" },\r\n0x019C: { n:\"BrtRRUserView\" },\r\n0x019D: { n:\"BrtRRRenSheet\" },\r\n0x019E: { n:\"BrtRRInsertSh\" },\r\n0x019F: { n:\"BrtRRDefName\" },\r\n0x01A0: { n:\"BrtRRNote\" },\r\n0x01A1: { n:\"BrtRRConflict\" },\r\n0x01A2: { n:\"BrtRRTQSIF\" },\r\n0x01A3: { n:\"BrtRRFormat\" },\r\n0x01A4: { n:\"BrtRREndFormat\" },\r\n0x01A5: { n:\"BrtRRAutoFmt\" },\r\n0x01A6: { n:\"BrtBeginUserShViews\" },\r\n0x01A7: { n:\"BrtBeginUserShView\" },\r\n0x01A8: { n:\"BrtEndUserShView\" },\r\n0x01A9: { n:\"BrtEndUserShViews\" },\r\n0x01AA: { n:\"BrtArrFmla\", f:parse_BrtArrFmla },\r\n0x01AB: { n:\"BrtShrFmla\", f:parse_BrtShrFmla },\r\n0x01AC: { n:\"BrtTable\" },\r\n0x01AD: { n:\"BrtBeginExtConnections\" },\r\n0x01AE: { n:\"BrtEndExtConnections\" },\r\n0x01AF: { n:\"BrtBeginPCDCalcMems\" },\r\n0x01B0: { n:\"BrtEndPCDCalcMems\" },\r\n0x01B1: { n:\"BrtBeginPCDCalcMem\" },\r\n0x01B2: { n:\"BrtEndPCDCalcMem\" },\r\n0x01B3: { n:\"BrtBeginPCDHGLevels\" },\r\n0x01B4: { n:\"BrtEndPCDHGLevels\" },\r\n0x01B5: { n:\"BrtBeginPCDHGLevel\" },\r\n0x01B6: { n:\"BrtEndPCDHGLevel\" },\r\n0x01B7: { n:\"BrtBeginPCDHGLGroups\" },\r\n0x01B8: { n:\"BrtEndPCDHGLGroups\" },\r\n0x01B9: { n:\"BrtBeginPCDHGLGroup\" },\r\n0x01BA: { n:\"BrtEndPCDHGLGroup\" },\r\n0x01BB: { n:\"BrtBeginPCDHGLGMembers\" },\r\n0x01BC: { n:\"BrtEndPCDHGLGMembers\" },\r\n0x01BD: { n:\"BrtBeginPCDHGLGMember\" },\r\n0x01BE: { n:\"BrtEndPCDHGLGMember\" },\r\n0x01BF: { n:\"BrtBeginQSI\" },\r\n0x01C0: { n:\"BrtEndQSI\" },\r\n0x01C1: { n:\"BrtBeginQSIR\" },\r\n0x01C2: { n:\"BrtEndQSIR\" },\r\n0x01C3: { n:\"BrtBeginDeletedNames\" },\r\n0x01C4: { n:\"BrtEndDeletedNames\" },\r\n0x01C5: { n:\"BrtBeginDeletedName\" },\r\n0x01C6: { n:\"BrtEndDeletedName\" },\r\n0x01C7: { n:\"BrtBeginQSIFs\" },\r\n0x01C8: { n:\"BrtEndQSIFs\" },\r\n0x01C9: { n:\"BrtBeginQSIF\" },\r\n0x01CA: { n:\"BrtEndQSIF\" },\r\n0x01CB: { n:\"BrtBeginAutoSortScope\" },\r\n0x01CC: { n:\"BrtEndAutoSortScope\" },\r\n0x01CD: { n:\"BrtBeginConditionalFormatting\" },\r\n0x01CE: { n:\"BrtEndConditionalFormatting\" },\r\n0x01CF: { n:\"BrtBeginCFRule\" },\r\n0x01D0: { n:\"BrtEndCFRule\" },\r\n0x01D1: { n:\"BrtBeginIconSet\" },\r\n0x01D2: { n:\"BrtEndIconSet\" },\r\n0x01D3: { n:\"BrtBeginDatabar\" },\r\n0x01D4: { n:\"BrtEndDatabar\" },\r\n0x01D5: { n:\"BrtBeginColorScale\" },\r\n0x01D6: { n:\"BrtEndColorScale\" },\r\n0x01D7: { n:\"BrtCFVO\" },\r\n0x01D8: { n:\"BrtExternValueMeta\" },\r\n0x01D9: { n:\"BrtBeginColorPalette\" },\r\n0x01DA: { n:\"BrtEndColorPalette\" },\r\n0x01DB: { n:\"BrtIndexedColor\" },\r\n0x01DC: { n:\"BrtMargins\", f:parse_BrtMargins },\r\n0x01DD: { n:\"BrtPrintOptions\" },\r\n0x01DE: { n:\"BrtPageSetup\" },\r\n0x01DF: { n:\"BrtBeginHeaderFooter\" },\r\n0x01E0: { n:\"BrtEndHeaderFooter\" },\r\n0x01E1: { n:\"BrtBeginSXCrtFormat\" },\r\n0x01E2: { n:\"BrtEndSXCrtFormat\" },\r\n0x01E3: { n:\"BrtBeginSXCrtFormats\" },\r\n0x01E4: { n:\"BrtEndSXCrtFormats\" },\r\n0x01E5: { n:\"BrtWsFmtInfo\", f:parse_BrtWsFmtInfo },\r\n0x01E6: { n:\"BrtBeginMgs\" },\r\n0x01E7: { n:\"BrtEndMGs\" },\r\n0x01E8: { n:\"BrtBeginMGMaps\" },\r\n0x01E9: { n:\"BrtEndMGMaps\" },\r\n0x01EA: { n:\"BrtBeginMG\" },\r\n0x01EB: { n:\"BrtEndMG\" },\r\n0x01EC: { n:\"BrtBeginMap\" },\r\n0x01ED: { n:\"BrtEndMap\" },\r\n0x01EE: { n:\"BrtHLink\", f:parse_BrtHLink },\r\n0x01EF: { n:\"BrtBeginDCon\" },\r\n0x01F0: { n:\"BrtEndDCon\" },\r\n0x01F1: { n:\"BrtBeginDRefs\" },\r\n0x01F2: { n:\"BrtEndDRefs\" },\r\n0x01F3: { n:\"BrtDRef\" },\r\n0x01F4: { n:\"BrtBeginScenMan\" },\r\n0x01F5: { n:\"BrtEndScenMan\" },\r\n0x01F6: { n:\"BrtBeginSct\" },\r\n0x01F7: { n:\"BrtEndSct\" },\r\n0x01F8: { n:\"BrtSlc\" },\r\n0x01F9: { n:\"BrtBeginDXFs\" },\r\n0x01FA: { n:\"BrtEndDXFs\" },\r\n0x01FB: { n:\"BrtDXF\" },\r\n0x01FC: { n:\"BrtBeginTableStyles\" },\r\n0x01FD: { n:\"BrtEndTableStyles\" },\r\n0x01FE: { n:\"BrtBeginTableStyle\" },\r\n0x01FF: { n:\"BrtEndTableStyle\" },\r\n0x0200: { n:\"BrtTableStyleElement\" },\r\n0x0201: { n:\"BrtTableStyleClient\" },\r\n0x0202: { n:\"BrtBeginVolDeps\" },\r\n0x0203: { n:\"BrtEndVolDeps\" },\r\n0x0204: { n:\"BrtBeginVolType\" },\r\n0x0205: { n:\"BrtEndVolType\" },\r\n0x0206: { n:\"BrtBeginVolMain\" },\r\n0x0207: { n:\"BrtEndVolMain\" },\r\n0x0208: { n:\"BrtBeginVolTopic\" },\r\n0x0209: { n:\"BrtEndVolTopic\" },\r\n0x020A: { n:\"BrtVolSubtopic\" },\r\n0x020B: { n:\"BrtVolRef\" },\r\n0x020C: { n:\"BrtVolNum\" },\r\n0x020D: { n:\"BrtVolErr\" },\r\n0x020E: { n:\"BrtVolStr\" },\r\n0x020F: { n:\"BrtVolBool\" },\r\n0x0210: { n:\"BrtBeginCalcChain$\" },\r\n0x0211: { n:\"BrtEndCalcChain$\" },\r\n0x0212: { n:\"BrtBeginSortState\" },\r\n0x0213: { n:\"BrtEndSortState\" },\r\n0x0214: { n:\"BrtBeginSortCond\" },\r\n0x0215: { n:\"BrtEndSortCond\" },\r\n0x0216: { n:\"BrtBookProtection\" },\r\n0x0217: { n:\"BrtSheetProtection\" },\r\n0x0218: { n:\"BrtRangeProtection\" },\r\n0x0219: { n:\"BrtPhoneticInfo\" },\r\n0x021A: { n:\"BrtBeginECTxtWiz\" },\r\n0x021B: { n:\"BrtEndECTxtWiz\" },\r\n0x021C: { n:\"BrtBeginECTWFldInfoLst\" },\r\n0x021D: { n:\"BrtEndECTWFldInfoLst\" },\r\n0x021E: { n:\"BrtBeginECTwFldInfo\" },\r\n0x0224: { n:\"BrtFileSharing\" },\r\n0x0225: { n:\"BrtOleSize\" },\r\n0x0226: { n:\"BrtDrawing\", f:parse_RelID },\r\n0x0227: { n:\"BrtLegacyDrawing\" },\r\n0x0228: { n:\"BrtLegacyDrawingHF\" },\r\n0x0229: { n:\"BrtWebOpt\" },\r\n0x022A: { n:\"BrtBeginWebPubItems\" },\r\n0x022B: { n:\"BrtEndWebPubItems\" },\r\n0x022C: { n:\"BrtBeginWebPubItem\" },\r\n0x022D: { n:\"BrtEndWebPubItem\" },\r\n0x022E: { n:\"BrtBeginSXCondFmt\" },\r\n0x022F: { n:\"BrtEndSXCondFmt\" },\r\n0x0230: { n:\"BrtBeginSXCondFmts\" },\r\n0x0231: { n:\"BrtEndSXCondFmts\" },\r\n0x0232: { n:\"BrtBkHim\" },\r\n0x0234: { n:\"BrtColor\" },\r\n0x0235: { n:\"BrtBeginIndexedColors\" },\r\n0x0236: { n:\"BrtEndIndexedColors\" },\r\n0x0239: { n:\"BrtBeginMRUColors\" },\r\n0x023A: { n:\"BrtEndMRUColors\" },\r\n0x023C: { n:\"BrtMRUColor\" },\r\n0x023D: { n:\"BrtBeginDVals\" },\r\n0x023E: { n:\"BrtEndDVals\" },\r\n0x0241: { n:\"BrtSupNameStart\" },\r\n0x0242: { n:\"BrtSupNameValueStart\" },\r\n0x0243: { n:\"BrtSupNameValueEnd\" },\r\n0x0244: { n:\"BrtSupNameNum\" },\r\n0x0245: { n:\"BrtSupNameErr\" },\r\n0x0246: { n:\"BrtSupNameSt\" },\r\n0x0247: { n:\"BrtSupNameNil\" },\r\n0x0248: { n:\"BrtSupNameBool\" },\r\n0x0249: { n:\"BrtSupNameFmla\" },\r\n0x024A: { n:\"BrtSupNameBits\" },\r\n0x024B: { n:\"BrtSupNameEnd\" },\r\n0x024C: { n:\"BrtEndSupBook\" },\r\n0x024D: { n:\"BrtCellSmartTagProperty\" },\r\n0x024E: { n:\"BrtBeginCellSmartTag\" },\r\n0x024F: { n:\"BrtEndCellSmartTag\" },\r\n0x0250: { n:\"BrtBeginCellSmartTags\" },\r\n0x0251: { n:\"BrtEndCellSmartTags\" },\r\n0x0252: { n:\"BrtBeginSmartTags\" },\r\n0x0253: { n:\"BrtEndSmartTags\" },\r\n0x0254: { n:\"BrtSmartTagType\" },\r\n0x0255: { n:\"BrtBeginSmartTagTypes\" },\r\n0x0256: { n:\"BrtEndSmartTagTypes\" },\r\n0x0257: { n:\"BrtBeginSXFilters\" },\r\n0x0258: { n:\"BrtEndSXFilters\" },\r\n0x0259: { n:\"BrtBeginSXFILTER\" },\r\n0x025A: { n:\"BrtEndSXFilter\" },\r\n0x025B: { n:\"BrtBeginFills\" },\r\n0x025C: { n:\"BrtEndFills\" },\r\n0x025D: { n:\"BrtBeginCellWatches\" },\r\n0x025E: { n:\"BrtEndCellWatches\" },\r\n0x025F: { n:\"BrtCellWatch\" },\r\n0x0260: { n:\"BrtBeginCRErrs\" },\r\n0x0261: { n:\"BrtEndCRErrs\" },\r\n0x0262: { n:\"BrtCrashRecErr\" },\r\n0x0263: { n:\"BrtBeginFonts\" },\r\n0x0264: { n:\"BrtEndFonts\" },\r\n0x0265: { n:\"BrtBeginBorders\" },\r\n0x0266: { n:\"BrtEndBorders\" },\r\n0x0267: { n:\"BrtBeginFmts\" },\r\n0x0268: { n:\"BrtEndFmts\" },\r\n0x0269: { n:\"BrtBeginCellXFs\" },\r\n0x026A: { n:\"BrtEndCellXFs\" },\r\n0x026B: { n:\"BrtBeginStyles\" },\r\n0x026C: { n:\"BrtEndStyles\" },\r\n0x0271: { n:\"BrtBigName\" },\r\n0x0272: { n:\"BrtBeginCellStyleXFs\" },\r\n0x0273: { n:\"BrtEndCellStyleXFs\" },\r\n0x0274: { n:\"BrtBeginComments\" },\r\n0x0275: { n:\"BrtEndComments\" },\r\n0x0276: { n:\"BrtBeginCommentAuthors\" },\r\n0x0277: { n:\"BrtEndCommentAuthors\" },\r\n0x0278: { n:\"BrtCommentAuthor\", f:parse_BrtCommentAuthor },\r\n0x0279: { n:\"BrtBeginCommentList\" },\r\n0x027A: { n:\"BrtEndCommentList\" },\r\n0x027B: { n:\"BrtBeginComment\", f:parse_BrtBeginComment},\r\n0x027C: { n:\"BrtEndComment\" },\r\n0x027D: { n:\"BrtCommentText\", f:parse_BrtCommentText },\r\n0x027E: { n:\"BrtBeginOleObjects\" },\r\n0x027F: { n:\"BrtOleObject\" },\r\n0x0280: { n:\"BrtEndOleObjects\" },\r\n0x0281: { n:\"BrtBeginSxrules\" },\r\n0x0282: { n:\"BrtEndSxRules\" },\r\n0x0283: { n:\"BrtBeginActiveXControls\" },\r\n0x0284: { n:\"BrtActiveX\" },\r\n0x0285: { n:\"BrtEndActiveXControls\" },\r\n0x0286: { n:\"BrtBeginPCDSDTCEMembersSortBy\" },\r\n0x0288: { n:\"BrtBeginCellIgnoreECs\" },\r\n0x0289: { n:\"BrtCellIgnoreEC\" },\r\n0x028A: { n:\"BrtEndCellIgnoreECs\" },\r\n0x028B: { n:\"BrtCsProp\", f:parse_BrtCsProp },\r\n0x028C: { n:\"BrtCsPageSetup\" },\r\n0x028D: { n:\"BrtBeginUserCsViews\" },\r\n0x028E: { n:\"BrtEndUserCsViews\" },\r\n0x028F: { n:\"BrtBeginUserCsView\" },\r\n0x0290: { n:\"BrtEndUserCsView\" },\r\n0x0291: { n:\"BrtBeginPcdSFCIEntries\" },\r\n0x0292: { n:\"BrtEndPCDSFCIEntries\" },\r\n0x0293: { n:\"BrtPCDSFCIEntry\" },\r\n0x0294: { n:\"BrtBeginListParts\" },\r\n0x0295: { n:\"BrtListPart\" },\r\n0x0296: { n:\"BrtEndListParts\" },\r\n0x0297: { n:\"BrtSheetCalcProp\" },\r\n0x0298: { n:\"BrtBeginFnGroup\" },\r\n0x0299: { n:\"BrtFnGroup\" },\r\n0x029A: { n:\"BrtEndFnGroup\" },\r\n0x029B: { n:\"BrtSupAddin\" },\r\n0x029C: { n:\"BrtSXTDMPOrder\" },\r\n0x029D: { n:\"BrtCsProtection\" },\r\n0x029F: { n:\"BrtBeginWsSortMap\" },\r\n0x02A0: { n:\"BrtEndWsSortMap\" },\r\n0x02A1: { n:\"BrtBeginRRSort\" },\r\n0x02A2: { n:\"BrtEndRRSort\" },\r\n0x02A3: { n:\"BrtRRSortItem\" },\r\n0x02A4: { n:\"BrtFileSharingIso\" },\r\n0x02A5: { n:\"BrtBookProtectionIso\" },\r\n0x02A6: { n:\"BrtSheetProtectionIso\" },\r\n0x02A7: { n:\"BrtCsProtectionIso\" },\r\n0x02A8: { n:\"BrtRangeProtectionIso\" },\r\n0x0400: { n:\"BrtRwDescent\" },\r\n0x0401: { n:\"BrtKnownFonts\" },\r\n0x0402: { n:\"BrtBeginSXTupleSet\" },\r\n0x0403: { n:\"BrtEndSXTupleSet\" },\r\n0x0404: { n:\"BrtBeginSXTupleSetHeader\" },\r\n0x0405: { n:\"BrtEndSXTupleSetHeader\" },\r\n0x0406: { n:\"BrtSXTupleSetHeaderItem\" },\r\n0x0407: { n:\"BrtBeginSXTupleSetData\" },\r\n0x0408: { n:\"BrtEndSXTupleSetData\" },\r\n0x0409: { n:\"BrtBeginSXTupleSetRow\" },\r\n0x040A: { n:\"BrtEndSXTupleSetRow\" },\r\n0x040B: { n:\"BrtSXTupleSetRowItem\" },\r\n0x040C: { n:\"BrtNameExt\" },\r\n0x040D: { n:\"BrtPCDH14\" },\r\n0x040E: { n:\"BrtBeginPCDCalcMem14\" },\r\n0x040F: { n:\"BrtEndPCDCalcMem14\" },\r\n0x0410: { n:\"BrtSXTH14\" },\r\n0x0411: { n:\"BrtBeginSparklineGroup\" },\r\n0x0412: { n:\"BrtEndSparklineGroup\" },\r\n0x0413: { n:\"BrtSparkline\" },\r\n0x0414: { n:\"BrtSXDI14\" },\r\n0x0415: { n:\"BrtWsFmtInfoEx14\" },\r\n0x0416: { n:\"BrtBeginConditionalFormatting14\" },\r\n0x0417: { n:\"BrtEndConditionalFormatting14\" },\r\n0x0418: { n:\"BrtBeginCFRule14\" },\r\n0x0419: { n:\"BrtEndCFRule14\" },\r\n0x041A: { n:\"BrtCFVO14\" },\r\n0x041B: { n:\"BrtBeginDatabar14\" },\r\n0x041C: { n:\"BrtBeginIconSet14\" },\r\n0x041D: { n:\"BrtDVal14\" },\r\n0x041E: { n:\"BrtBeginDVals14\" },\r\n0x041F: { n:\"BrtColor14\" },\r\n0x0420: { n:\"BrtBeginSparklines\" },\r\n0x0421: { n:\"BrtEndSparklines\" },\r\n0x0422: { n:\"BrtBeginSparklineGroups\" },\r\n0x0423: { n:\"BrtEndSparklineGroups\" },\r\n0x0425: { n:\"BrtSXVD14\" },\r\n0x0426: { n:\"BrtBeginSXView14\" },\r\n0x0427: { n:\"BrtEndSXView14\" },\r\n0x0428: { n:\"BrtBeginSXView16\" },\r\n0x0429: { n:\"BrtEndSXView16\" },\r\n0x042A: { n:\"BrtBeginPCD14\" },\r\n0x042B: { n:\"BrtEndPCD14\" },\r\n0x042C: { n:\"BrtBeginExtConn14\" },\r\n0x042D: { n:\"BrtEndExtConn14\" },\r\n0x042E: { n:\"BrtBeginSlicerCacheIDs\" },\r\n0x042F: { n:\"BrtEndSlicerCacheIDs\" },\r\n0x0430: { n:\"BrtBeginSlicerCacheID\" },\r\n0x0431: { n:\"BrtEndSlicerCacheID\" },\r\n0x0433: { n:\"BrtBeginSlicerCache\" },\r\n0x0434: { n:\"BrtEndSlicerCache\" },\r\n0x0435: { n:\"BrtBeginSlicerCacheDef\" },\r\n0x0436: { n:\"BrtEndSlicerCacheDef\" },\r\n0x0437: { n:\"BrtBeginSlicersEx\" },\r\n0x0438: { n:\"BrtEndSlicersEx\" },\r\n0x0439: { n:\"BrtBeginSlicerEx\" },\r\n0x043A: { n:\"BrtEndSlicerEx\" },\r\n0x043B: { n:\"BrtBeginSlicer\" },\r\n0x043C: { n:\"BrtEndSlicer\" },\r\n0x043D: { n:\"BrtSlicerCachePivotTables\" },\r\n0x043E: { n:\"BrtBeginSlicerCacheOlapImpl\" },\r\n0x043F: { n:\"BrtEndSlicerCacheOlapImpl\" },\r\n0x0440: { n:\"BrtBeginSlicerCacheLevelsData\" },\r\n0x0441: { n:\"BrtEndSlicerCacheLevelsData\" },\r\n0x0442: { n:\"BrtBeginSlicerCacheLevelData\" },\r\n0x0443: { n:\"BrtEndSlicerCacheLevelData\" },\r\n0x0444: { n:\"BrtBeginSlicerCacheSiRanges\" },\r\n0x0445: { n:\"BrtEndSlicerCacheSiRanges\" },\r\n0x0446: { n:\"BrtBeginSlicerCacheSiRange\" },\r\n0x0447: { n:\"BrtEndSlicerCacheSiRange\" },\r\n0x0448: { n:\"BrtSlicerCacheOlapItem\" },\r\n0x0449: { n:\"BrtBeginSlicerCacheSelections\" },\r\n0x044A: { n:\"BrtSlicerCacheSelection\" },\r\n0x044B: { n:\"BrtEndSlicerCacheSelections\" },\r\n0x044C: { n:\"BrtBeginSlicerCacheNative\" },\r\n0x044D: { n:\"BrtEndSlicerCacheNative\" },\r\n0x044E: { n:\"BrtSlicerCacheNativeItem\" },\r\n0x044F: { n:\"BrtRangeProtection14\" },\r\n0x0450: { n:\"BrtRangeProtectionIso14\" },\r\n0x0451: { n:\"BrtCellIgnoreEC14\" },\r\n0x0457: { n:\"BrtList14\" },\r\n0x0458: { n:\"BrtCFIcon\" },\r\n0x0459: { n:\"BrtBeginSlicerCachesPivotCacheIDs\" },\r\n0x045A: { n:\"BrtEndSlicerCachesPivotCacheIDs\" },\r\n0x045B: { n:\"BrtBeginSlicers\" },\r\n0x045C: { n:\"BrtEndSlicers\" },\r\n0x045D: { n:\"BrtWbProp14\" },\r\n0x045E: { n:\"BrtBeginSXEdit\" },\r\n0x045F: { n:\"BrtEndSXEdit\" },\r\n0x0460: { n:\"BrtBeginSXEdits\" },\r\n0x0461: { n:\"BrtEndSXEdits\" },\r\n0x0462: { n:\"BrtBeginSXChange\" },\r\n0x0463: { n:\"BrtEndSXChange\" },\r\n0x0464: { n:\"BrtBeginSXChanges\" },\r\n0x0465: { n:\"BrtEndSXChanges\" },\r\n0x0466: { n:\"BrtSXTupleItems\" },\r\n0x0468: { n:\"BrtBeginSlicerStyle\" },\r\n0x0469: { n:\"BrtEndSlicerStyle\" },\r\n0x046A: { n:\"BrtSlicerStyleElement\" },\r\n0x046B: { n:\"BrtBeginStyleSheetExt14\" },\r\n0x046C: { n:\"BrtEndStyleSheetExt14\" },\r\n0x046D: { n:\"BrtBeginSlicerCachesPivotCacheID\" },\r\n0x046E: { n:\"BrtEndSlicerCachesPivotCacheID\" },\r\n0x046F: { n:\"BrtBeginConditionalFormattings\" },\r\n0x0470: { n:\"BrtEndConditionalFormattings\" },\r\n0x0471: { n:\"BrtBeginPCDCalcMemExt\" },\r\n0x0472: { n:\"BrtEndPCDCalcMemExt\" },\r\n0x0473: { n:\"BrtBeginPCDCalcMemsExt\" },\r\n0x0474: { n:\"BrtEndPCDCalcMemsExt\" },\r\n0x0475: { n:\"BrtPCDField14\" },\r\n0x0476: { n:\"BrtBeginSlicerStyles\" },\r\n0x0477: { n:\"BrtEndSlicerStyles\" },\r\n0x0478: { n:\"BrtBeginSlicerStyleElements\" },\r\n0x0479: { n:\"BrtEndSlicerStyleElements\" },\r\n0x047A: { n:\"BrtCFRuleExt\" },\r\n0x047B: { n:\"BrtBeginSXCondFmt14\" },\r\n0x047C: { n:\"BrtEndSXCondFmt14\" },\r\n0x047D: { n:\"BrtBeginSXCondFmts14\" },\r\n0x047E: { n:\"BrtEndSXCondFmts14\" },\r\n0x0480: { n:\"BrtBeginSortCond14\" },\r\n0x0481: { n:\"BrtEndSortCond14\" },\r\n0x0482: { n:\"BrtEndDVals14\" },\r\n0x0483: { n:\"BrtEndIconSet14\" },\r\n0x0484: { n:\"BrtEndDatabar14\" },\r\n0x0485: { n:\"BrtBeginColorScale14\" },\r\n0x0486: { n:\"BrtEndColorScale14\" },\r\n0x0487: { n:\"BrtBeginSxrules14\" },\r\n0x0488: { n:\"BrtEndSxrules14\" },\r\n0x0489: { n:\"BrtBeginPRule14\" },\r\n0x048A: { n:\"BrtEndPRule14\" },\r\n0x048B: { n:\"BrtBeginPRFilters14\" },\r\n0x048C: { n:\"BrtEndPRFilters14\" },\r\n0x048D: { n:\"BrtBeginPRFilter14\" },\r\n0x048E: { n:\"BrtEndPRFilter14\" },\r\n0x048F: { n:\"BrtBeginPRFItem14\" },\r\n0x0490: { n:\"BrtEndPRFItem14\" },\r\n0x0491: { n:\"BrtBeginCellIgnoreECs14\" },\r\n0x0492: { n:\"BrtEndCellIgnoreECs14\" },\r\n0x0493: { n:\"BrtDxf14\" },\r\n0x0494: { n:\"BrtBeginDxF14s\" },\r\n0x0495: { n:\"BrtEndDxf14s\" },\r\n0x0499: { n:\"BrtFilter14\" },\r\n0x049A: { n:\"BrtBeginCustomFilters14\" },\r\n0x049C: { n:\"BrtCustomFilter14\" },\r\n0x049D: { n:\"BrtIconFilter14\" },\r\n0x049E: { n:\"BrtPivotCacheConnectionName\" },\r\n0x0800: { n:\"BrtBeginDecoupledPivotCacheIDs\" },\r\n0x0801: { n:\"BrtEndDecoupledPivotCacheIDs\" },\r\n0x0802: { n:\"BrtDecoupledPivotCacheID\" },\r\n0x0803: { n:\"BrtBeginPivotTableRefs\" },\r\n0x0804: { n:\"BrtEndPivotTableRefs\" },\r\n0x0805: { n:\"BrtPivotTableRef\" },\r\n0x0806: { n:\"BrtSlicerCacheBookPivotTables\" },\r\n0x0807: { n:\"BrtBeginSxvcells\" },\r\n0x0808: { n:\"BrtEndSxvcells\" },\r\n0x0809: { n:\"BrtBeginSxRow\" },\r\n0x080A: { n:\"BrtEndSxRow\" },\r\n0x080C: { n:\"BrtPcdCalcMem15\" },\r\n0x0813: { n:\"BrtQsi15\" },\r\n0x0814: { n:\"BrtBeginWebExtensions\" },\r\n0x0815: { n:\"BrtEndWebExtensions\" },\r\n0x0816: { n:\"BrtWebExtension\" },\r\n0x0817: { n:\"BrtAbsPath15\" },\r\n0x0818: { n:\"BrtBeginPivotTableUISettings\" },\r\n0x0819: { n:\"BrtEndPivotTableUISettings\" },\r\n0x081B: { n:\"BrtTableSlicerCacheIDs\" },\r\n0x081C: { n:\"BrtTableSlicerCacheID\" },\r\n0x081D: { n:\"BrtBeginTableSlicerCache\" },\r\n0x081E: { n:\"BrtEndTableSlicerCache\" },\r\n0x081F: { n:\"BrtSxFilter15\" },\r\n0x0820: { n:\"BrtBeginTimelineCachePivotCacheIDs\" },\r\n0x0821: { n:\"BrtEndTimelineCachePivotCacheIDs\" },\r\n0x0822: { n:\"BrtTimelineCachePivotCacheID\" },\r\n0x0823: { n:\"BrtBeginTimelineCacheIDs\" },\r\n0x0824: { n:\"BrtEndTimelineCacheIDs\" },\r\n0x0825: { n:\"BrtBeginTimelineCacheID\" },\r\n0x0826: { n:\"BrtEndTimelineCacheID\" },\r\n0x0827: { n:\"BrtBeginTimelinesEx\" },\r\n0x0828: { n:\"BrtEndTimelinesEx\" },\r\n0x0829: { n:\"BrtBeginTimelineEx\" },\r\n0x082A: { n:\"BrtEndTimelineEx\" },\r\n0x082B: { n:\"BrtWorkBookPr15\" },\r\n0x082C: { n:\"BrtPCDH15\" },\r\n0x082D: { n:\"BrtBeginTimelineStyle\" },\r\n0x082E: { n:\"BrtEndTimelineStyle\" },\r\n0x082F: { n:\"BrtTimelineStyleElement\" },\r\n0x0830: { n:\"BrtBeginTimelineStylesheetExt15\" },\r\n0x0831: { n:\"BrtEndTimelineStylesheetExt15\" },\r\n0x0832: { n:\"BrtBeginTimelineStyles\" },\r\n0x0833: { n:\"BrtEndTimelineStyles\" },\r\n0x0834: { n:\"BrtBeginTimelineStyleElements\" },\r\n0x0835: { n:\"BrtEndTimelineStyleElements\" },\r\n0x0836: { n:\"BrtDxf15\" },\r\n0x0837: { n:\"BrtBeginDxfs15\" },\r\n0x0838: { n:\"brtEndDxfs15\" },\r\n0x0839: { n:\"BrtSlicerCacheHideItemsWithNoData\" },\r\n0x083A: { n:\"BrtBeginItemUniqueNames\" },\r\n0x083B: { n:\"BrtEndItemUniqueNames\" },\r\n0x083C: { n:\"BrtItemUniqueName\" },\r\n0x083D: { n:\"BrtBeginExtConn15\" },\r\n0x083E: { n:\"BrtEndExtConn15\" },\r\n0x083F: { n:\"BrtBeginOledbPr15\" },\r\n0x0840: { n:\"BrtEndOledbPr15\" },\r\n0x0841: { n:\"BrtBeginDataFeedPr15\" },\r\n0x0842: { n:\"BrtEndDataFeedPr15\" },\r\n0x0843: { n:\"BrtTextPr15\" },\r\n0x0844: { n:\"BrtRangePr15\" },\r\n0x0845: { n:\"BrtDbCommand15\" },\r\n0x0846: { n:\"BrtBeginDbTables15\" },\r\n0x0847: { n:\"BrtEndDbTables15\" },\r\n0x0848: { n:\"BrtDbTable15\" },\r\n0x0849: { n:\"BrtBeginDataModel\" },\r\n0x084A: { n:\"BrtEndDataModel\" },\r\n0x084B: { n:\"BrtBeginModelTables\" },\r\n0x084C: { n:\"BrtEndModelTables\" },\r\n0x084D: { n:\"BrtModelTable\" },\r\n0x084E: { n:\"BrtBeginModelRelationships\" },\r\n0x084F: { n:\"BrtEndModelRelationships\" },\r\n0x0850: { n:\"BrtModelRelationship\" },\r\n0x0851: { n:\"BrtBeginECTxtWiz15\" },\r\n0x0852: { n:\"BrtEndECTxtWiz15\" },\r\n0x0853: { n:\"BrtBeginECTWFldInfoLst15\" },\r\n0x0854: { n:\"BrtEndECTWFldInfoLst15\" },\r\n0x0855: { n:\"BrtBeginECTWFldInfo15\" },\r\n0x0856: { n:\"BrtFieldListActiveItem\" },\r\n0x0857: { n:\"BrtPivotCacheIdVersion\" },\r\n0x0858: { n:\"BrtSXDI15\" },\r\n0x0859: { n:\"BrtBeginModelTimeGroupings\" },\r\n0x085A: { n:\"BrtEndModelTimeGroupings\" },\r\n0x085B: { n:\"BrtBeginModelTimeGrouping\" },\r\n0x085C: { n:\"BrtEndModelTimeGrouping\" },\r\n0x085D: { n:\"BrtModelTimeGroupingCalcCol\" },\r\n0x0C00: { n:\"BrtUid\" },\r\n0x0C01: { n:\"BrtRevisionPtr\" },\r\n0xFFFF: { n:\"\" }\r\n};\r\n\r\nvar XLSBRE = evert_key(XLSBRecordEnum, 'n');\r\n\r\n/* [MS-XLS] 2.3 Record Enumeration */\r\nvar XLSRecordEnum = {\r\n0x0003: { n:\"BIFF2NUM\", f:parse_BIFF2NUM },\r\n0x0004: { n:\"BIFF2STR\", f:parse_BIFF2STR },\r\n0x0006: { n:\"Formula\", f:parse_Formula },\r\n0x0009: { n:'BOF', f:parse_BOF },\r\n0x000a: { n:'EOF', f:parsenoop2 },\r\n0x000c: { n:\"CalcCount\", f:parseuint16 },\r\n0x000d: { n:\"CalcMode\", f:parseuint16 },\r\n0x000e: { n:\"CalcPrecision\", f:parsebool },\r\n0x000f: { n:\"CalcRefMode\", f:parsebool },\r\n0x0010: { n:\"CalcDelta\", f:parse_Xnum },\r\n0x0011: { n:\"CalcIter\", f:parsebool },\r\n0x0012: { n:\"Protect\", f:parsebool },\r\n0x0013: { n:\"Password\", f:parseuint16 },\r\n0x0014: { n:\"Header\", f:parse_XLHeaderFooter },\r\n0x0015: { n:\"Footer\", f:parse_XLHeaderFooter },\r\n0x0017: { n:\"ExternSheet\", f:parse_ExternSheet },\r\n0x0018: { n:\"Lbl\", f:parse_Lbl },\r\n0x0019: { n:\"WinProtect\", f:parsebool },\r\n0x001a: { n:\"VerticalPageBreaks\" },\r\n0x001b: { n:\"HorizontalPageBreaks\" },\r\n0x001c: { n:\"Note\", f:parse_Note },\r\n0x001d: { n:\"Selection\" },\r\n0x0022: { n:\"Date1904\", f:parsebool },\r\n0x0023: { n:\"ExternName\", f:parse_ExternName },\r\n0x0026: { n:\"LeftMargin\", f:parse_Xnum },\r\n0x0027: { n:\"RightMargin\", f:parse_Xnum },\r\n0x0028: { n:\"TopMargin\", f:parse_Xnum },\r\n0x0029: { n:\"BottomMargin\", f:parse_Xnum },\r\n0x002a: { n:\"PrintRowCol\", f:parsebool },\r\n0x002b: { n:\"PrintGrid\", f:parsebool },\r\n0x002f: { n:\"FilePass\", f:parse_FilePass },\r\n0x0031: { n:\"Font\", f:parse_Font },\r\n0x0033: { n:\"PrintSize\", f:parseuint16 },\r\n0x003c: { n:\"Continue\" },\r\n0x003d: { n:\"Window1\", f:parse_Window1 },\r\n0x0040: { n:\"Backup\", f:parsebool },\r\n0x0041: { n:\"Pane\" },\r\n0x0042: { n:'CodePage', f:parseuint16 },\r\n0x004d: { n:\"Pls\" },\r\n0x0050: { n:\"DCon\" },\r\n0x0051: { n:\"DConRef\" },\r\n0x0052: { n:\"DConName\" },\r\n0x0055: { n:\"DefColWidth\", f:parseuint16 },\r\n0x0059: { n:\"XCT\" },\r\n0x005a: { n:\"CRN\" },\r\n0x005b: { n:\"FileSharing\" },\r\n0x005c: { n:'WriteAccess', f:parse_WriteAccess },\r\n0x005d: { n:\"Obj\", f:parse_Obj },\r\n0x005e: { n:\"Uncalced\" },\r\n0x005f: { n:\"CalcSaveRecalc\", f:parsebool },\r\n0x0060: { n:\"Template\" },\r\n0x0061: { n:\"Intl\" },\r\n0x0063: { n:\"ObjProtect\", f:parsebool },\r\n0x007d: { n:\"ColInfo\", f:parse_ColInfo },\r\n0x0080: { n:\"Guts\", f:parse_Guts },\r\n0x0081: { n:\"WsBool\", f:parse_WsBool },\r\n0x0082: { n:\"GridSet\", f:parseuint16 },\r\n0x0083: { n:\"HCenter\", f:parsebool },\r\n0x0084: { n:\"VCenter\", f:parsebool },\r\n0x0085: { n:'BoundSheet8', f:parse_BoundSheet8 },\r\n0x0086: { n:\"WriteProtect\" },\r\n0x008c: { n:\"Country\", f:parse_Country },\r\n0x008d: { n:\"HideObj\", f:parseuint16 },\r\n0x0090: { n:\"Sort\" },\r\n0x0092: { n:\"Palette\", f:parse_Palette },\r\n0x0097: { n:\"Sync\" },\r\n0x0098: { n:\"LPr\" },\r\n0x0099: { n:\"DxGCol\" },\r\n0x009a: { n:\"FnGroupName\" },\r\n0x009b: { n:\"FilterMode\" },\r\n0x009c: { n:\"BuiltInFnGroupCount\", f:parseuint16 },\r\n0x009d: { n:\"AutoFilterInfo\" },\r\n0x009e: { n:\"AutoFilter\" },\r\n0x00a0: { n:\"Scl\", f:parse_Scl },\r\n0x00a1: { n:\"Setup\", f:parse_Setup },\r\n0x00ae: { n:\"ScenMan\" },\r\n0x00af: { n:\"SCENARIO\" },\r\n0x00b0: { n:\"SxView\" },\r\n0x00b1: { n:\"Sxvd\" },\r\n0x00b2: { n:\"SXVI\" },\r\n0x00b4: { n:\"SxIvd\" },\r\n0x00b5: { n:\"SXLI\" },\r\n0x00b6: { n:\"SXPI\" },\r\n0x00b8: { n:\"DocRoute\" },\r\n0x00b9: { n:\"RecipName\" },\r\n0x00bd: { n:\"MulRk\", f:parse_MulRk },\r\n0x00be: { n:\"MulBlank\", f:parse_MulBlank },\r\n0x00c1: { n:'Mms', f:parsenoop2 },\r\n0x00c5: { n:\"SXDI\" },\r\n0x00c6: { n:\"SXDB\" },\r\n0x00c7: { n:\"SXFDB\" },\r\n0x00c8: { n:\"SXDBB\" },\r\n0x00c9: { n:\"SXNum\" },\r\n0x00ca: { n:\"SxBool\", f:parsebool },\r\n0x00cb: { n:\"SxErr\" },\r\n0x00cc: { n:\"SXInt\" },\r\n0x00cd: { n:\"SXString\" },\r\n0x00ce: { n:\"SXDtr\" },\r\n0x00cf: { n:\"SxNil\" },\r\n0x00d0: { n:\"SXTbl\" },\r\n0x00d1: { n:\"SXTBRGIITM\" },\r\n0x00d2: { n:\"SxTbpg\" },\r\n0x00d3: { n:\"ObProj\" },\r\n0x00d5: { n:\"SXStreamID\" },\r\n0x00d7: { n:\"DBCell\" },\r\n0x00d8: { n:\"SXRng\" },\r\n0x00d9: { n:\"SxIsxoper\" },\r\n0x00da: { n:\"BookBool\", f:parseuint16 },\r\n0x00dc: { n:\"DbOrParamQry\" },\r\n0x00dd: { n:\"ScenarioProtect\", f:parsebool },\r\n0x00de: { n:\"OleObjectSize\" },\r\n0x00e0: { n:\"XF\", f:parse_XF },\r\n0x00e1: { n:'InterfaceHdr', f:parse_InterfaceHdr },\r\n0x00e2: { n:'InterfaceEnd', f:parsenoop2 },\r\n0x00e3: { n:\"SXVS\" },\r\n0x00e5: { n:\"MergeCells\", f:parse_MergeCells },\r\n0x00e9: { n:\"BkHim\" },\r\n0x00eb: { n:\"MsoDrawingGroup\" },\r\n0x00ec: { n:\"MsoDrawing\" },\r\n0x00ed: { n:\"MsoDrawingSelection\" },\r\n0x00ef: { n:\"PhoneticInfo\" },\r\n0x00f0: { n:\"SxRule\" },\r\n0x00f1: { n:\"SXEx\" },\r\n0x00f2: { n:\"SxFilt\" },\r\n0x00f4: { n:\"SxDXF\" },\r\n0x00f5: { n:\"SxItm\" },\r\n0x00f6: { n:\"SxName\" },\r\n0x00f7: { n:\"SxSelect\" },\r\n0x00f8: { n:\"SXPair\" },\r\n0x00f9: { n:\"SxFmla\" },\r\n0x00fb: { n:\"SxFormat\" },\r\n0x00fc: { n:\"SST\", f:parse_SST },\r\n0x00fd: { n:\"LabelSst\", f:parse_LabelSst },\r\n0x00ff: { n:\"ExtSST\", f:parse_ExtSST },\r\n0x0100: { n:\"SXVDEx\" },\r\n0x0103: { n:\"SXFormula\" },\r\n0x0122: { n:\"SXDBEx\" },\r\n0x0137: { n:\"RRDInsDel\" },\r\n0x0138: { n:\"RRDHead\" },\r\n0x013b: { n:\"RRDChgCell\" },\r\n0x013d: { n:\"RRTabId\", f:parseuint16a },\r\n0x013e: { n:\"RRDRenSheet\" },\r\n0x013f: { n:\"RRSort\" },\r\n0x0140: { n:\"RRDMove\" },\r\n0x014a: { n:\"RRFormat\" },\r\n0x014b: { n:\"RRAutoFmt\" },\r\n0x014d: { n:\"RRInsertSh\" },\r\n0x014e: { n:\"RRDMoveBegin\" },\r\n0x014f: { n:\"RRDMoveEnd\" },\r\n0x0150: { n:\"RRDInsDelBegin\" },\r\n0x0151: { n:\"RRDInsDelEnd\" },\r\n0x0152: { n:\"RRDConflict\" },\r\n0x0153: { n:\"RRDDefName\" },\r\n0x0154: { n:\"RRDRstEtxp\" },\r\n0x015f: { n:\"LRng\" },\r\n0x0160: { n:\"UsesELFs\", f:parsebool },\r\n0x0161: { n:\"DSF\", f:parsenoop2 },\r\n0x0191: { n:\"CUsr\" },\r\n0x0192: { n:\"CbUsr\" },\r\n0x0193: { n:\"UsrInfo\" },\r\n0x0194: { n:\"UsrExcl\" },\r\n0x0195: { n:\"FileLock\" },\r\n0x0196: { n:\"RRDInfo\" },\r\n0x0197: { n:\"BCUsrs\" },\r\n0x0198: { n:\"UsrChk\" },\r\n0x01a9: { n:\"UserBView\" },\r\n0x01aa: { n:\"UserSViewBegin\" },\r\n0x01ab: { n:\"UserSViewEnd\" },\r\n0x01ac: { n:\"RRDUserView\" },\r\n0x01ad: { n:\"Qsi\" },\r\n0x01ae: { n:\"SupBook\", f:parse_SupBook },\r\n0x01af: { n:\"Prot4Rev\", f:parsebool },\r\n0x01b0: { n:\"CondFmt\" },\r\n0x01b1: { n:\"CF\" },\r\n0x01b2: { n:\"DVal\" },\r\n0x01b5: { n:\"DConBin\" },\r\n0x01b6: { n:\"TxO\", f:parse_TxO },\r\n0x01b7: { n:\"RefreshAll\", f:parsebool },\r\n0x01b8: { n:\"HLink\", f:parse_HLink },\r\n0x01b9: { n:\"Lel\" },\r\n0x01ba: { n:\"CodeName\", f:parse_XLUnicodeString },\r\n0x01bb: { n:\"SXFDBType\" },\r\n0x01bc: { n:\"Prot4RevPass\", f:parseuint16 },\r\n0x01bd: { n:\"ObNoMacros\" },\r\n0x01be: { n:\"Dv\" },\r\n0x01c0: { n:\"Excel9File\", f:parsenoop2 },\r\n0x01c1: { n:\"RecalcId\", f:parse_RecalcId, r:2},\r\n0x01c2: { n:\"EntExU2\", f:parsenoop2 },\r\n0x0200: { n:\"Dimensions\", f:parse_Dimensions },\r\n0x0201: { n:\"Blank\", f:parse_Blank },\r\n0x0203: { n:\"Number\", f:parse_Number },\r\n0x0204: { n:\"Label\", f:parse_Label },\r\n0x0205: { n:\"BoolErr\", f:parse_BoolErr },\r\n0x0206: { n:\"Formula\", f:parse_Formula },\r\n0x0207: { n:\"String\", f:parse_String },\r\n0x0208: { n:'Row', f:parse_Row },\r\n0x020b: { n:\"Index\" },\r\n0x0221: { n:\"Array\", f:parse_Array },\r\n0x0225: { n:\"DefaultRowHeight\", f:parse_DefaultRowHeight },\r\n0x0236: { n:\"Table\" },\r\n0x023e: { n:\"Window2\", f:parse_Window2 },\r\n0x027e: { n:\"RK\", f:parse_RK },\r\n0x0293: { n:\"Style\" },\r\n0x0406: { n:\"Formula\", f:parse_Formula },\r\n0x0418: { n:\"BigName\" },\r\n0x041e: { n:\"Format\", f:parse_Format },\r\n0x043c: { n:\"ContinueBigName\" },\r\n0x04bc: { n:\"ShrFmla\", f:parse_ShrFmla },\r\n0x0800: { n:\"HLinkTooltip\", f:parse_HLinkTooltip },\r\n0x0801: { n:\"WebPub\" },\r\n0x0802: { n:\"QsiSXTag\" },\r\n0x0803: { n:\"DBQueryExt\" },\r\n0x0804: { n:\"ExtString\" },\r\n0x0805: { n:\"TxtQry\" },\r\n0x0806: { n:\"Qsir\" },\r\n0x0807: { n:\"Qsif\" },\r\n0x0808: { n:\"RRDTQSIF\" },\r\n0x0809: { n:'BOF', f:parse_BOF },\r\n0x080a: { n:\"OleDbConn\" },\r\n0x080b: { n:\"WOpt\" },\r\n0x080c: { n:\"SXViewEx\" },\r\n0x080d: { n:\"SXTH\" },\r\n0x080e: { n:\"SXPIEx\" },\r\n0x080f: { n:\"SXVDTEx\" },\r\n0x0810: { n:\"SXViewEx9\" },\r\n0x0812: { n:\"ContinueFrt\" },\r\n0x0813: { n:\"RealTimeData\" },\r\n0x0850: { n:\"ChartFrtInfo\" },\r\n0x0851: { n:\"FrtWrapper\" },\r\n0x0852: { n:\"StartBlock\" },\r\n0x0853: { n:\"EndBlock\" },\r\n0x0854: { n:\"StartObject\" },\r\n0x0855: { n:\"EndObject\" },\r\n0x0856: { n:\"CatLab\" },\r\n0x0857: { n:\"YMult\" },\r\n0x0858: { n:\"SXViewLink\" },\r\n0x0859: { n:\"PivotChartBits\" },\r\n0x085a: { n:\"FrtFontList\" },\r\n0x0862: { n:\"SheetExt\" },\r\n0x0863: { n:\"BookExt\", r:12},\r\n0x0864: { n:\"SXAddl\" },\r\n0x0865: { n:\"CrErr\" },\r\n0x0866: { n:\"HFPicture\" },\r\n0x0867: { n:'FeatHdr', f:parsenoop2 },\r\n0x0868: { n:\"Feat\" },\r\n0x086a: { n:\"DataLabExt\" },\r\n0x086b: { n:\"DataLabExtContents\" },\r\n0x086c: { n:\"CellWatch\" },\r\n0x0871: { n:\"FeatHdr11\" },\r\n0x0872: { n:\"Feature11\" },\r\n0x0874: { n:\"DropDownObjIds\" },\r\n0x0875: { n:\"ContinueFrt11\" },\r\n0x0876: { n:\"DConn\" },\r\n0x0877: { n:\"List12\" },\r\n0x0878: { n:\"Feature12\" },\r\n0x0879: { n:\"CondFmt12\" },\r\n0x087a: { n:\"CF12\" },\r\n0x087b: { n:\"CFEx\" },\r\n0x087c: { n:\"XFCRC\", f:parse_XFCRC, r:12 },\r\n0x087d: { n:\"XFExt\", f:parse_XFExt, r:12 },\r\n0x087e: { n:\"AutoFilter12\" },\r\n0x087f: { n:\"ContinueFrt12\" },\r\n0x0884: { n:\"MDTInfo\" },\r\n0x0885: { n:\"MDXStr\" },\r\n0x0886: { n:\"MDXTuple\" },\r\n0x0887: { n:\"MDXSet\" },\r\n0x0888: { n:\"MDXProp\" },\r\n0x0889: { n:\"MDXKPI\" },\r\n0x088a: { n:\"MDB\" },\r\n0x088b: { n:\"PLV\" },\r\n0x088c: { n:\"Compat12\", f:parsebool, r:12 },\r\n0x088d: { n:\"DXF\" },\r\n0x088e: { n:\"TableStyles\", r:12 },\r\n0x088f: { n:\"TableStyle\" },\r\n0x0890: { n:\"TableStyleElement\" },\r\n0x0892: { n:\"StyleExt\" },\r\n0x0893: { n:\"NamePublish\" },\r\n0x0894: { n:\"NameCmt\", f:parse_NameCmt, r:12 },\r\n0x0895: { n:\"SortData\" },\r\n0x0896: { n:\"Theme\", f:parse_Theme, r:12 },\r\n0x0897: { n:\"GUIDTypeLib\" },\r\n0x0898: { n:\"FnGrp12\" },\r\n0x0899: { n:\"NameFnGrp12\" },\r\n0x089a: { n:\"MTRSettings\", f:parse_MTRSettings, r:12 },\r\n0x089b: { n:\"CompressPictures\", f:parsenoop2 },\r\n0x089c: { n:\"HeaderFooter\" },\r\n0x089d: { n:\"CrtLayout12\" },\r\n0x089e: { n:\"CrtMlFrt\" },\r\n0x089f: { n:\"CrtMlFrtContinue\" },\r\n0x08a3: { n:\"ForceFullCalculation\", f:parse_ForceFullCalculation },\r\n0x08a4: { n:\"ShapePropsStream\" },\r\n0x08a5: { n:\"TextPropsStream\" },\r\n0x08a6: { n:\"RichTextStream\" },\r\n0x08a7: { n:\"CrtLayout12A\" },\r\n0x1001: { n:\"Units\" },\r\n0x1002: { n:\"Chart\" },\r\n0x1003: { n:\"Series\" },\r\n0x1006: { n:\"DataFormat\" },\r\n0x1007: { n:\"LineFormat\" },\r\n0x1009: { n:\"MarkerFormat\" },\r\n0x100a: { n:\"AreaFormat\" },\r\n0x100b: { n:\"PieFormat\" },\r\n0x100c: { n:\"AttachedLabel\" },\r\n0x100d: { n:\"SeriesText\" },\r\n0x1014: { n:\"ChartFormat\" },\r\n0x1015: { n:\"Legend\" },\r\n0x1016: { n:\"SeriesList\" },\r\n0x1017: { n:\"Bar\" },\r\n0x1018: { n:\"Line\" },\r\n0x1019: { n:\"Pie\" },\r\n0x101a: { n:\"Area\" },\r\n0x101b: { n:\"Scatter\" },\r\n0x101c: { n:\"CrtLine\" },\r\n0x101d: { n:\"Axis\" },\r\n0x101e: { n:\"Tick\" },\r\n0x101f: { n:\"ValueRange\" },\r\n0x1020: { n:\"CatSerRange\" },\r\n0x1021: { n:\"AxisLine\" },\r\n0x1022: { n:\"CrtLink\" },\r\n0x1024: { n:\"DefaultText\" },\r\n0x1025: { n:\"Text\" },\r\n0x1026: { n:\"FontX\", f:parseuint16 },\r\n0x1027: { n:\"ObjectLink\" },\r\n0x1032: { n:\"Frame\" },\r\n0x1033: { n:\"Begin\" },\r\n0x1034: { n:\"End\" },\r\n0x1035: { n:\"PlotArea\" },\r\n0x103a: { n:\"Chart3d\" },\r\n0x103c: { n:\"PicF\" },\r\n0x103d: { n:\"DropBar\" },\r\n0x103e: { n:\"Radar\" },\r\n0x103f: { n:\"Surf\" },\r\n0x1040: { n:\"RadarArea\" },\r\n0x1041: { n:\"AxisParent\" },\r\n0x1043: { n:\"LegendException\" },\r\n0x1044: { n:\"ShtProps\", f:parse_ShtProps },\r\n0x1045: { n:\"SerToCrt\" },\r\n0x1046: { n:\"AxesUsed\" },\r\n0x1048: { n:\"SBaseRef\" },\r\n0x104a: { n:\"SerParent\" },\r\n0x104b: { n:\"SerAuxTrend\" },\r\n0x104e: { n:\"IFmtRecord\" },\r\n0x104f: { n:\"Pos\" },\r\n0x1050: { n:\"AlRuns\" },\r\n0x1051: { n:\"BRAI\" },\r\n0x105b: { n:\"SerAuxErrBar\" },\r\n0x105c: { n:\"ClrtClient\", f:parse_ClrtClient },\r\n0x105d: { n:\"SerFmt\" },\r\n0x105f: { n:\"Chart3DBarShape\" },\r\n0x1060: { n:\"Fbi\" },\r\n0x1061: { n:\"BopPop\" },\r\n0x1062: { n:\"AxcExt\" },\r\n0x1063: { n:\"Dat\" },\r\n0x1064: { n:\"PlotGrowth\" },\r\n0x1065: { n:\"SIIndex\" },\r\n0x1066: { n:\"GelFrame\" },\r\n0x1067: { n:\"BopPopCustom\" },\r\n0x1068: { n:\"Fbi2\" },\r\n\r\n0x0000: { n:\"Dimensions\", f:parse_Dimensions },\r\n0x0002: { n:\"BIFF2INT\", f:parse_BIFF2INT },\r\n0x0005: { n:\"BoolErr\", f:parse_BoolErr },\r\n0x0007: { n:\"String\", f:parse_BIFF2STRING },\r\n0x0008: { n:\"BIFF2ROW\" },\r\n0x000b: { n:\"Index\" },\r\n0x0016: { n:\"ExternCount\", f:parseuint16 },\r\n0x001e: { n:\"BIFF2FORMAT\", f:parse_BIFF2Format },\r\n0x001f: { n:\"BIFF2FMTCNT\" }, /* 16-bit cnt of BIFF2FORMAT records */\r\n0x0020: { n:\"BIFF2COLINFO\" },\r\n0x0021: { n:\"Array\", f:parse_Array },\r\n0x0025: { n:\"DefaultRowHeight\", f:parse_DefaultRowHeight },\r\n0x0032: { n:\"BIFF2FONTXTRA\", f:parse_BIFF2FONTXTRA },\r\n0x0034: { n:\"DDEObjName\" },\r\n0x003e: { n:\"BIFF2WINDOW2\" },\r\n0x0043: { n:\"BIFF2XF\" },\r\n0x0045: { n:\"BIFF2FONTCLR\" },\r\n0x0056: { n:\"BIFF4FMTCNT\" }, /* 16-bit cnt, similar to BIFF2 */\r\n0x007e: { n:\"RK\" }, /* Not necessarily same as 0x027e */\r\n0x007f: { n:\"ImData\", f:parse_ImData },\r\n0x0087: { n:\"Addin\" },\r\n0x0088: { n:\"Edg\" },\r\n0x0089: { n:\"Pub\" },\r\n0x0091: { n:\"Sub\" },\r\n0x0094: { n:\"LHRecord\" },\r\n0x0095: { n:\"LHNGraph\" },\r\n0x0096: { n:\"Sound\" },\r\n0x00a9: { n:\"CoordList\" },\r\n0x00ab: { n:\"GCW\" },\r\n0x00bc: { n:\"ShrFmla\" }, /* Not necessarily same as 0x04bc */\r\n0x00bf: { n:\"ToolbarHdr\" },\r\n0x00c0: { n:\"ToolbarEnd\" },\r\n0x00c2: { n:\"AddMenu\" },\r\n0x00c3: { n:\"DelMenu\" },\r\n0x00d6: { n:\"RString\", f:parse_RString },\r\n0x00df: { n:\"UDDesc\" },\r\n0x00ea: { n:\"TabIdConf\" },\r\n0x0162: { n:\"XL5Modify\" },\r\n0x01a5: { n:\"FileSharing2\" },\r\n0x0209: { n:'BOF', f:parse_BOF },\r\n0x0218: { n:\"Lbl\", f:parse_Lbl },\r\n0x0223: { n:\"ExternName\", f:parse_ExternName },\r\n0x0231: { n:\"Font\" },\r\n0x0243: { n:\"BIFF3XF\" },\r\n0x0409: { n:'BOF', f:parse_BOF },\r\n0x0443: { n:\"BIFF4XF\" },\r\n0x086d: { n:\"FeatInfo\" },\r\n0x0873: { n:\"FeatInfo11\" },\r\n0x0881: { n:\"SXAddl12\" },\r\n0x08c0: { n:\"AutoWebPub\" },\r\n0x08c1: { n:\"ListObj\" },\r\n0x08c2: { n:\"ListField\" },\r\n0x08c3: { n:\"ListDV\" },\r\n0x08c4: { n:\"ListCondFmt\" },\r\n0x08c5: { n:\"ListCF\" },\r\n0x08c6: { n:\"FMQry\" },\r\n0x08c7: { n:\"FMSQry\" },\r\n0x08c8: { n:\"PLV\" },\r\n0x08c9: { n:\"LnExt\" },\r\n0x08ca: { n:\"MkrExt\" },\r\n0x08cb: { n:\"CrtCoopt\" },\r\n0x08d6: { n:\"FRTArchId$\", r:12 },\r\n\r\n0x7262: {}\r\n};\r\n\r\nvar XLSRE = evert_key(XLSRecordEnum, 'n');\r\nfunction write_biff_rec(ba, type, payload, length) {\r\n\tvar t = +type || +XLSRE[type];\r\n\tif(isNaN(t)) return;\r\n\tvar len = length || (payload||[]).length || 0;\r\n\tvar o = ba.next(4);\r\n\to.write_shift(2, t);\r\n\to.write_shift(2, len);\r\n\tif(len > 0 && is_buf(payload)) ba.push(payload);\r\n}\r\n\r\nfunction write_BIFF2Cell(out, r, c) {\r\n\tif(!out) out = new_buf(7);\r\n\tout.write_shift(2, r);\r\n\tout.write_shift(2, c);\r\n\tout.write_shift(2, 0);\r\n\tout.write_shift(1, 0);\r\n\treturn out;\r\n}\r\n\r\nfunction write_BIFF2BERR(r, c, val, t) {\r\n\tvar out = new_buf(9);\r\n\twrite_BIFF2Cell(out, r, c);\r\n\tif(t == 'e') { out.write_shift(1, val); out.write_shift(1, 1); }\r\n\telse { out.write_shift(1, val?1:0); out.write_shift(1, 0); }\r\n\treturn out;\r\n}\r\n\r\n/* TODO: codepage, large strings */\r\nfunction write_BIFF2LABEL(r, c, val) {\r\n\tvar out = new_buf(8 + 2*val.length);\r\n\twrite_BIFF2Cell(out, r, c);\r\n\tout.write_shift(1, val.length);\r\n\tout.write_shift(val.length, val, 'sbcs');\r\n\treturn out.l < out.length ? out.slice(0, out.l) : out;\r\n}\r\n\r\nfunction write_ws_biff2_cell(ba, cell, R, C) {\r\n\tif(cell.v != null) switch(cell.t) {\r\n\t\tcase 'd': case 'n':\r\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\r\n\t\t\tif((v == (v|0)) && (v >= 0) && (v < 65536))\r\n\t\t\t\twrite_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v));\r\n\t\t\telse\r\n\t\t\t\twrite_biff_rec(ba, 0x0003, write_BIFF2NUM(R,C, v));\r\n\t\t\treturn;\r\n\t\tcase 'b': case 'e': write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t)); return;\r\n\t\t/* TODO: codepage, sst */\r\n\t\tcase 's': case 'str':\r\n\t\t\twrite_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, cell.v));\r\n\t\t\treturn;\r\n\t}\r\n\twrite_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\r\n}\r\n\r\nfunction write_ws_biff2(ba, ws, idx, opts) {\r\n\tvar dense = Array.isArray(ws);\r\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\"), ref, rr = \"\", cols = [];\r\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\r\n\t\trr = encode_row(R);\r\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\r\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\r\n\t\t\tref = cols[C] + rr;\r\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\r\n\t\t\tif(!cell) continue;\r\n\t\t\t/* write cell */\r\n\t\t\twrite_ws_biff2_cell(ba, cell, R, C, opts);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* Based on test files */\r\nfunction write_biff2_buf(wb, opts) {\r\n\tvar o = opts || {};\r\n\tif(DENSE != null && o.dense == null) o.dense = DENSE;\r\n\tvar ba = buf_array();\r\n\tvar idx = 0;\r\n\tfor(var i=0;i<wb.SheetNames.length;++i) if(wb.SheetNames[i] == o.sheet) idx=i;\r\n\tif(idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\r\n\twrite_biff_rec(ba, 0x0009, write_BOF(wb, 0x10, o));\r\n\t/* ... */\r\n\twrite_ws_biff2(ba, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\r\n\t/* ... */\r\n\twrite_biff_rec(ba, 0x000A);\r\n\treturn ba.end();\r\n}\r\n\r\nfunction write_FONTS_biff8(ba, data, opts) {\r\n\twrite_biff_rec(ba, \"Font\", write_Font({\r\n\t\tsz:12,\r\n\t\tcolor: {theme:1},\r\n\t\tname: \"Arial\",\r\n\t\tfamily: 2,\r\n\t\tscheme: \"minor\"\r\n\t}, opts));\r\n}\r\n\r\n\r\nfunction write_FMTS_biff8(ba, NF, opts) {\r\n\tif(!NF) return;\r\n\t[[5,8],[23,26],[41,44],[/*63*/50,/*66],[164,*/392]].forEach(function(r) {\r\nfor(var i = r[0]; i <= r[1]; ++i) if(NF[i] != null) write_biff_rec(ba, \"Format\", write_Format(i, NF[i], opts));\r\n\t});\r\n}\r\n\r\nfunction write_FEAT(ba, ws) {\r\n\t/* [MS-XLS] 2.4.112 */\r\n\tvar o = new_buf(19);\r\n\to.write_shift(4, 0x867); o.write_shift(4, 0); o.write_shift(4, 0);\r\n\to.write_shift(2, 3); o.write_shift(1, 1); o.write_shift(4, 0);\r\n\twrite_biff_rec(ba, \"FeatHdr\", o);\r\n\t/* [MS-XLS] 2.4.111 */\r\n\to = new_buf(39);\r\n\to.write_shift(4, 0x868); o.write_shift(4, 0); o.write_shift(4, 0);\r\n\to.write_shift(2, 3); o.write_shift(1, 0); o.write_shift(4, 0);\r\n\to.write_shift(2, 1); o.write_shift(4, 4); o.write_shift(2, 0);\r\n\twrite_Ref8U(safe_decode_range(ws['!ref']), o);\r\n\to.write_shift(4, 4);\r\n\twrite_biff_rec(ba, \"Feat\", o);\r\n}\r\n\r\nfunction write_CELLXFS_biff8(ba, opts) {\r\n\tfor(var i = 0; i < 16; ++i) write_biff_rec(ba, \"XF\", write_XF({numFmtId:0, style:true}, 0, opts));\r\n\topts.cellXfs.forEach(function(c) {\r\n\t\twrite_biff_rec(ba, \"XF\", write_XF(c, 0, opts));\r\n\t});\r\n}\r\n\r\nfunction write_ws_biff8_hlinks(ba, ws) {\r\n\tfor(var R=0; R<ws['!links'].length; ++R) {\r\n\t\tvar HL = ws['!links'][R];\r\n\t\twrite_biff_rec(ba, \"HLink\", write_HLink(HL));\r\n\t\tif(HL[1].Tooltip) write_biff_rec(ba, \"HLinkTooltip\", write_HLinkTooltip(HL));\r\n\t}\r\n\tdelete ws['!links'];\r\n}\r\n\r\nfunction write_ws_biff8_cell(ba, cell, R, C, opts) {\r\n\tvar os = 16 + get_cell_style(opts.cellXfs, cell, opts);\r\n\tif(cell.v != null) switch(cell.t) {\r\n\t\tcase 'd': case 'n':\r\n\t\t\tvar v = cell.t == 'd' ? datenum(parseDate(cell.v)) : cell.v;\r\n\t\t\t/* TODO: emit RK as appropriate */\r\n\t\t\twrite_biff_rec(ba, \"Number\", write_Number(R, C, v, os, opts));\r\n\t\t\treturn;\r\n\t\tcase 'b': case 'e': write_biff_rec(ba, 0x0205, write_BoolErr(R, C, cell.v, os, opts, cell.t)); return;\r\n\t\t/* TODO: codepage, sst */\r\n\t\tcase 's': case 'str':\r\n\t\t\twrite_biff_rec(ba, \"Label\", write_Label(R, C, cell.v, os, opts));\r\n\t\t\treturn;\r\n\t}\r\n\twrite_biff_rec(ba, \"Blank\", write_XLSCell(R, C, os));\r\n}\r\n\r\n/* [MS-XLS] 2.1.7.20.5 */\r\nfunction write_ws_biff8(idx, opts, wb) {\r\n\tvar ba = buf_array();\r\n\tvar s = wb.SheetNames[idx], ws = wb.Sheets[s] || {};\r\n\tvar _WB = ((wb||{}).Workbook||{});\r\n\tvar _sheet = ((_WB.Sheets||[])[idx]||{});\r\n\tvar dense = Array.isArray(ws);\r\n\tvar ref, rr = \"\", cols = [];\r\n\tvar range = safe_decode_range(ws['!ref'] || \"A1\");\r\n\tvar b8 = opts.biff == 8;\r\n\twrite_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\r\n\t/* ... */\r\n\twrite_biff_rec(ba, \"CalcMode\", writeuint16(1));\r\n\twrite_biff_rec(ba, \"CalcCount\", writeuint16(100));\r\n\twrite_biff_rec(ba, \"CalcRefMode\", writebool(true));\r\n\twrite_biff_rec(ba, \"CalcIter\", writebool(false));\r\n\twrite_biff_rec(ba, \"CalcDelta\", write_Xnum(0.001));\r\n\twrite_biff_rec(ba, \"CalcSaveRecalc\", writebool(true));\r\n\twrite_biff_rec(ba, \"PrintRowCol\", writebool(false));\r\n\twrite_biff_rec(ba, \"PrintGrid\", writebool(false));\r\n\twrite_biff_rec(ba, \"GridSet\", writeuint16(1));\r\n\twrite_biff_rec(ba, \"Guts\", write_Guts([0,0]));\r\n\t/* ... */\r\n\twrite_biff_rec(ba, \"HCenter\", writebool(false));\r\n\twrite_biff_rec(ba, \"VCenter\", writebool(false));\r\n\t/* ... */\r\n\twrite_biff_rec(ba, \"Dimensions\", write_Dimensions(range, opts));\r\n\t/* ... */\r\n\r\n\tif(b8) ws['!links'] = [];\r\n\tfor(var R = range.s.r; R <= range.e.r; ++R) {\r\n\t\trr = encode_row(R);\r\n\t\tfor(var C = range.s.c; C <= range.e.c; ++C) {\r\n\t\t\tif(R === range.s.r) cols[C] = encode_col(C);\r\n\t\t\tref = cols[C] + rr;\r\n\t\t\tvar cell = dense ? (ws[R]||[])[C] : ws[ref];\r\n\t\t\tif(!cell) continue;\r\n\t\t\t/* write cell */\r\n\t\t\twrite_ws_biff8_cell(ba, cell, R, C, opts);\r\n\t\t\tif(b8 && cell.l) ws['!links'].push([ref, cell.l]);\r\n\t\t}\r\n\t}\r\n\tvar cname = _sheet.CodeName || _sheet.name || s;\r\n\t/* ... */\r\n\tif(b8 && _WB.Views) write_biff_rec(ba, \"Window2\", write_Window2(_WB.Views[0]));\r\n\t/* ... */\r\n\tif(b8 && (ws['!merges']||[]).length) write_biff_rec(ba, \"MergeCells\", write_MergeCells(ws['!merges']));\r\n\t/* ... */\r\n\tif(b8) write_ws_biff8_hlinks(ba, ws);\r\n\t/* ... */\r\n\twrite_biff_rec(ba, \"CodeName\", write_XLUnicodeString(cname, opts));\r\n\t/* ... */\r\n\tif(b8) write_FEAT(ba, ws);\r\n\t/* ... */\r\n\twrite_biff_rec(ba, \"EOF\");\r\n\treturn ba.end();\r\n}\r\n\r\n/* [MS-XLS] 2.1.7.20.3 */\r\nfunction write_biff8_global(wb, bufs, opts) {\r\n\tvar A = buf_array();\r\n\tvar _WB = ((wb||{}).Workbook||{});\r\n\tvar _sheets = (_WB.Sheets||[]);\r\n\tvar _wb = _WB.WBProps||{};\r\n\tvar b8 = opts.biff == 8, b5 = opts.biff == 5;\r\n\twrite_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\r\n\tif(opts.bookType == \"xla\") write_biff_rec(A, \"Addin\");\r\n\twrite_biff_rec(A, \"InterfaceHdr\", b8 ? writeuint16(0x04b0) : null);\r\n\twrite_biff_rec(A, \"Mms\", writezeroes(2));\r\n\tif(b5) write_biff_rec(A, \"ToolbarHdr\");\r\n\tif(b5) write_biff_rec(A, \"ToolbarEnd\");\r\n\twrite_biff_rec(A, \"InterfaceEnd\");\r\n\twrite_biff_rec(A, \"WriteAccess\", write_WriteAccess(\"SheetJS\", opts));\r\n\twrite_biff_rec(A, \"CodePage\", writeuint16(b8 ? 0x04b0 : 0x04E4));\r\n\tif(b8) write_biff_rec(A, \"DSF\", writeuint16(0));\r\n\tif(b8) write_biff_rec(A, \"Excel9File\");\r\n\twrite_biff_rec(A, \"RRTabId\", write_RRTabId(wb.SheetNames.length));\r\n\tif(b8 && wb.vbaraw) {\r\n\t\twrite_biff_rec(A, \"ObProj\");\r\n\t\tvar cname = _wb.CodeName || \"ThisWorkbook\";\r\n\t\twrite_biff_rec(A, \"CodeName\", write_XLUnicodeString(cname, opts));\r\n\t}\r\n\twrite_biff_rec(A, \"BuiltInFnGroupCount\", writeuint16(0x11));\r\n\twrite_biff_rec(A, \"WinProtect\", writebool(false));\r\n\twrite_biff_rec(A, \"Protect\", writebool(false));\r\n\twrite_biff_rec(A, \"Password\", writeuint16(0));\r\n\tif(b8) write_biff_rec(A, \"Prot4Rev\", writebool(false));\r\n\tif(b8) write_biff_rec(A, \"Prot4RevPass\", writeuint16(0));\r\n\twrite_biff_rec(A, \"Window1\", write_Window1(opts));\r\n\twrite_biff_rec(A, \"Backup\", writebool(false));\r\n\twrite_biff_rec(A, \"HideObj\", writeuint16(0));\r\n\twrite_biff_rec(A, \"Date1904\", writebool(safe1904(wb)==\"true\"));\r\n\twrite_biff_rec(A, \"CalcPrecision\", writebool(true));\r\n\tif(b8) write_biff_rec(A, \"RefreshAll\", writebool(false));\r\n\twrite_biff_rec(A, \"BookBool\", writeuint16(0));\r\n\t/* ... */\r\n\twrite_FONTS_biff8(A, wb, opts);\r\n\twrite_FMTS_biff8(A, wb.SSF, opts);\r\n\twrite_CELLXFS_biff8(A, opts);\r\n\t/* ... */\r\n\tif(b8) write_biff_rec(A, \"UsesELFs\", writebool(false));\r\n\tvar a = A.end();\r\n\r\n\tvar C = buf_array();\r\n\tif(b8) write_biff_rec(C, \"Country\", write_Country());\r\n\t/* BIFF8: [SST *Continue] ExtSST */\r\n\twrite_biff_rec(C, \"EOF\");\r\n\tvar c = C.end();\r\n\r\n\tvar B = buf_array();\r\n\tvar blen = 0, j = 0;\r\n\tfor(j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\r\n\tvar start = a.length + blen + c.length;\r\n\tfor(j = 0; j < wb.SheetNames.length; ++j) {\r\n\t\tvar _sheet = _sheets[j] || ({});\r\n\t\twrite_biff_rec(B, \"BoundSheet8\", write_BoundSheet8({pos:start, hs:_sheet.Hidden||0, dt:0, name:wb.SheetNames[j]}, opts));\r\n\t\tstart += bufs[j].length;\r\n\t}\r\n\t/* 1*BoundSheet8 */\r\n\tvar b = B.end();\r\n\tif(blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\r\n\r\n\tvar out = [];\r\n\tif(a.length) out.push(a);\r\n\tif(b.length) out.push(b);\r\n\tif(c.length) out.push(c);\r\n\treturn __toBuffer([out]);\r\n}\r\n\r\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\r\nfunction write_biff8_buf(wb, opts) {\r\n\tvar o = opts || {};\r\n\tvar bufs = [];\r\n\r\n\tif(wb && !wb.SSF) {\r\n\t\twb.SSF = SSF.get_table();\r\n\t}\r\n\tif(wb && wb.SSF) {\r\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\r\n\t\t// $FlowIgnore\r\n\t\to.revssf = evert_num(wb.SSF); o.revssf[wb.SSF[65535]] = 0;\r\n\t\to.ssf = wb.SSF;\r\n\t}\r\n\to.cellXfs = [];\r\n\to.Strings = []; o.Strings.Count = 0; o.Strings.Unique = 0;\r\n\tget_cell_style(o.cellXfs, {}, {revssf:{\"General\":0}});\r\n\r\n\tfor(var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\r\n\tbufs.unshift(write_biff8_global(wb, bufs, o));\r\n\treturn __toBuffer([bufs]);\r\n}\r\n\r\nfunction write_biff_buf(wb, opts) {\r\n\tvar o = opts || {};\r\n\tswitch(o.biff || 2) {\r\n\t\tcase 8: case 5: return write_biff8_buf(wb, opts);\r\n\t\tcase 4: case 3: case 2: return write_biff2_buf(wb, opts);\r\n\t}\r\n\tthrow new Error(\"invalid type \" + o.bookType + \" for BIFF\");\r\n}\r\n/* note: browser DOM element cannot see mso- style attrs, must parse */\r\nvar HTML_ = (function() {\r\n\tfunction html_to_sheet(str, _opts) {\r\n\t\tvar opts = _opts || {};\r\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\r\n\t\tvar ws = opts.dense ? ([]) : ({});\r\n\t\tvar mtch = str.match(/<table/i);\r\n\t\tif(!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\r\n\t\tvar mtch2 = str.match(/<\\/table/i);\r\n\t\tvar i = mtch.index, j = mtch2 && mtch2.index || str.length;\r\n\t\tvar rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\r\n\t\tvar R = -1, C = 0, RS = 0, CS = 0;\r\n\t\tvar range = {s:{r:10000000, c:10000000},e:{r:0,c:0}};\r\n\t\tvar merges = [];\r\n\t\tfor(i = 0; i < rows.length; ++i) {\r\n\t\t\tvar row = rows[i].trim();\r\n\t\t\tvar hd = row.slice(0,3).toLowerCase();\r\n\t\t\tif(hd == \"<tr\") { ++R; if(opts.sheetRows && opts.sheetRows <= R) { --R; break; } C = 0; continue; }\r\n\t\t\tif(hd != \"<td\") continue;\r\n\t\t\tvar cells = row.split(/<\\/td>/i);\r\n\t\t\tfor(j = 0; j < cells.length; ++j) {\r\n\t\t\t\tvar cell = cells[j].trim();\r\n\t\t\t\tif(cell.slice(0,3).toLowerCase() != \"<td\") continue;\r\n\t\t\t\tvar m = cell, cc = 0;\r\n\t\t\t\t/* TODO: parse styles etc */\r\n\t\t\t\twhile(m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc+1);\r\n\t\t\t\tvar tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\r\n\t\t\t\tCS = tag.colspan ? +tag.colspan : 1;\r\n\t\t\t\tif((RS = +tag.rowspan)>0 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\r\n\t\t\t\tvar _t = tag.t || \"\";\r\n\t\t\t\t/* TODO: generate stub cells */\r\n\t\t\t\tif(!m.length) { C += CS; continue; }\r\n\t\t\t\tm = htmldecode(unescapexml(m));\r\n\t\t\t\tif(range.s.r > R) range.s.r = R; if(range.e.r < R) range.e.r = R;\r\n\t\t\t\tif(range.s.c > C) range.s.c = C; if(range.e.c < C) range.e.c = C;\r\n\t\t\t\tif(!m.length) continue;\r\n\t\t\t\tvar o = {t:'s', v:m};\r\n\t\t\t\tif(opts.raw || !m.trim().length || _t == 's'){}\r\n\t\t\t\telse if(m === 'TRUE') o = {t:'b', v:true};\r\n\t\t\t\telse if(m === 'FALSE') o = {t:'b', v:false};\r\n\t\t\t\telse if(!isNaN(fuzzynum(m))) o = {t:'n', v:fuzzynum(m)};\r\n\t\t\t\telse if(!isNaN(fuzzydate(m).getDate())) {\r\n\t\t\t\t\to = ({t:'d', v:parseDate(m)});\r\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)});\r\n\t\t\t\t\to.z = opts.dateNF || SSF._table[14];\r\n\t\t\t\t}\r\n\t\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\r\n\t\t\t\telse ws[encode_cell({r:R, c:C})] = o;\r\n\t\t\t\tC += CS;\r\n\t\t\t}\r\n\t\t}\r\n\t\tws['!ref'] = encode_range(range);\r\n\t\treturn ws;\r\n\t}\r\n\tfunction html_to_book(str, opts) {\r\n\t\treturn sheet_to_workbook(html_to_sheet(str, opts), opts);\r\n\t}\r\n\tfunction make_html_row(ws, r, R, o) {\r\n\t\tvar M = (ws['!merges'] ||[]);\r\n\t\tvar oo = [];\r\n\t\tvar nullcell = \"<td>\" + (o.editable ? '<span contenteditable=\"true\"></span>' : \"\" ) + \"</td>\";\r\n\t\tfor(var C = r.s.c; C <= r.e.c; ++C) {\r\n\t\t\tvar RS = 0, CS = 0;\r\n\t\t\tfor(var j = 0; j < M.length; ++j) {\r\n\t\t\t\tif(M[j].s.r > R || M[j].s.c > C) continue;\r\n\t\t\t\tif(M[j].e.r < R || M[j].e.c < C) continue;\r\n\t\t\t\tif(M[j].s.r < R || M[j].s.c < C) { RS = -1; break; }\r\n\t\t\t\tRS = M[j].e.r - M[j].s.r + 1; CS = M[j].e.c - M[j].s.c + 1; break;\r\n\t\t\t}\r\n\t\t\tif(RS < 0) continue;\r\n\t\t\tvar coord = encode_cell({r:R,c:C});\r\n\t\t\tvar cell = o.dense ? (ws[R]||[])[C] : ws[coord];\r\n\t\t\tif(!cell || cell.v == null) { oo.push(nullcell); continue; }\r\n\t\t\t/* TODO: html entities */\r\n\t\t\tvar w = cell.h || escapexml(cell.w || (format_cell(cell), cell.w) || \"\");\r\n\t\t\tvar sp = {};\r\n\t\t\tif(RS > 1) sp.rowspan = RS;\r\n\t\t\tif(CS > 1) sp.colspan = CS;\r\n\t\t\tsp.t = cell.t;\r\n\t\t\tif(o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';\r\n\t\t\tsp.id = \"sjs-\" + coord;\r\n\t\t\too.push(writextag('td', w, sp));\r\n\t\t}\r\n\t\tvar preamble = \"<tr>\";\r\n\t\treturn preamble + oo.join(\"\") + \"</tr>\";\r\n\t}\r\n\tfunction make_html_preamble(ws, R, o) {\r\n\t\tvar out = [];\r\n\t\treturn out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\r\n\t}\r\n\tvar _BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\r\n\tvar _END = '</body></html>';\r\n\tfunction sheet_to_html(ws, opts/*, wb:?Workbook*/) {\r\n\t\tvar o = opts || {};\r\n\t\tvar header = o.header != null ? o.header : _BEGIN;\r\n\t\tvar footer = o.footer != null ? o.footer : _END;\r\n\t\tvar out = [header];\r\n\t\tvar r = decode_range(ws['!ref']);\r\n\t\to.dense = Array.isArray(ws);\r\n\t\tout.push(make_html_preamble(ws, r, o));\r\n\t\tfor(var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\r\n\t\tout.push(\"</table>\" + footer);\r\n\t\treturn out.join(\"\");\r\n\t}\r\n\r\n\treturn {\r\n\t\tto_workbook: html_to_book,\r\n\t\tto_sheet: html_to_sheet,\r\n\t\t_row: make_html_row,\r\n\t\tBEGIN: _BEGIN,\r\n\t\tEND: _END,\r\n\t\t_preamble: make_html_preamble,\r\n\t\tfrom_sheet: sheet_to_html\r\n\t};\r\n})();\r\n\r\nfunction parse_dom_table(table, _opts) {\r\n\tvar opts = _opts || {};\r\n\tif(DENSE != null) opts.dense = DENSE;\r\n\tvar ws = opts.dense ? ([]) : ({});\r\n\tvar rows = table.getElementsByTagName('tr');\r\n\tvar sheetRows = Math.min(opts.sheetRows||10000000, rows.length);\r\n\tvar range = {s:{r:0,c:0},e:{r:sheetRows - 1,c:0}};\r\n\tvar merges = [], midx = 0;\r\n\tvar R = 0, _C = 0, C = 0, RS = 0, CS = 0;\r\n\tfor(; R < sheetRows; ++R) {\r\n\t\tvar row = rows[R];\r\n\t\tvar elts = (row.children);\r\n\t\tfor(_C = C = 0; _C < elts.length; ++_C) {\r\n\t\t\tvar elt = elts[_C], v = htmldecode(elts[_C].innerHTML);\r\n\t\t\tfor(midx = 0; midx < merges.length; ++midx) {\r\n\t\t\t\tvar m = merges[midx];\r\n\t\t\t\tif(m.s.c == C && m.s.r <= R && R <= m.e.r) { C = m.e.c+1; midx = -1; }\r\n\t\t\t}\r\n\t\t\t/* TODO: figure out how to extract nonstandard mso- style */\r\n\t\t\tCS = +elt.getAttribute(\"colspan\") || 1;\r\n\t\t\tif((RS = +elt.getAttribute(\"rowspan\"))>0 || CS>1) merges.push({s:{r:R,c:C},e:{r:R + (RS||1) - 1, c:C + CS - 1}});\r\n\t\t\tvar o = {t:'s', v:v};\r\n\t\t\tvar _t = elt.getAttribute(\"t\") || \"\";\r\n\t\t\tif(v != null) {\r\n\t\t\t\tif(v.length == 0) o.t = _t || 'z';\r\n\t\t\t\telse if(opts.raw || v.trim().length == 0 || _t == \"s\"){}\r\n\t\t\t\telse if(v === 'TRUE') o = {t:'b', v:true};\r\n\t\t\t\telse if(v === 'FALSE') o = {t:'b', v:false};\r\n\t\t\t\telse if(!isNaN(fuzzynum(v))) o = {t:'n', v:fuzzynum(v)};\r\n\t\t\t\telse if(!isNaN(fuzzydate(v).getDate())) {\r\n\t\t\t\t\to = ({t:'d', v:parseDate(v)});\r\n\t\t\t\t\tif(!opts.cellDates) o = ({t:'n', v:datenum(o.v)});\r\n\t\t\t\t\to.z = opts.dateNF || SSF._table[14];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = o; }\r\n\t\t\telse ws[encode_cell({c:C, r:R})] = o;\r\n\t\t\tif(range.e.c < C) range.e.c = C;\r\n\t\t\tC += CS;\r\n\t\t}\r\n\t}\r\n\tws['!merges'] = merges;\r\n\tws['!ref'] = encode_range(range);\r\n\tif(sheetRows < rows.length) ws['!fullref'] = encode_range((range.e.r = rows.length-1,range));\r\n\treturn ws;\r\n}\r\n\r\nfunction table_to_book(table, opts) {\r\n\treturn sheet_to_workbook(parse_dom_table(table, opts), opts);\r\n}\r\n/* OpenDocument */\r\nvar parse_content_xml = (function() {\r\n\r\n\t/* 6.1.2 White Space Characters */\r\n\tvar parse_text_p = function(text) {\r\n\t\treturn unescapexml(text\r\n\t\t\t.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \")\r\n\t\t\t.replace(/<text:s\\/>/g,\" \")\r\n\t\t\t.replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function($$,$1) { return Array(parseInt($1,10)+1).join(\" \"); })\r\n\t\t\t.replace(/<text:tab[^>]*\\/>/g,\"\\t\")\r\n\t\t\t.replace(/<text:line-break\\/>/g,\"\\n\")\r\n\t\t\t.replace(/<[^>]*>/g,\"\")\r\n\t\t);\r\n\t};\r\n\r\n\tvar number_formats = {\r\n\t\t/* ods name: [short ssf fmt, long ssf fmt] */\r\n\t\tday:           [\"d\",   \"dd\"],\r\n\t\tmonth:         [\"m\",   \"mm\"],\r\n\t\tyear:          [\"y\",   \"yy\"],\r\n\t\thours:         [\"h\",   \"hh\"],\r\n\t\tminutes:       [\"m\",   \"mm\"],\r\n\t\tseconds:       [\"s\",   \"ss\"],\r\n\t\t\"am-pm\":       [\"A/P\", \"AM/PM\"],\r\n\t\t\"day-of-week\": [\"ddd\", \"dddd\"],\r\n\t\tera:           [\"e\",   \"ee\"],\r\n\t\t/* there is no native representation of LO \"Q\" format */\r\n\t\tquarter:       [\"\\\\Qm\", \"m\\\\\\\"th quarter\\\"\"]\r\n\t};\r\n\r\n\treturn function pcx(d, _opts) {\r\n\t\tvar opts = _opts || {};\r\n\t\tif(DENSE != null && opts.dense == null) opts.dense = DENSE;\r\n\t\tvar str = xlml_normalize(d);\r\n\t\tvar state = [], tmp;\r\n\t\tvar tag;\r\n\t\tvar NFtag = {name:\"\"}, NF = \"\", pidx = 0;\r\n\t\tvar sheetag;\r\n\t\tvar rowtag;\r\n\t\tvar Sheets = {}, SheetNames = [];\r\n\t\tvar ws = opts.dense ? ([]) : ({});\r\n\t\tvar Rn, q;\r\n\t\tvar ctag = ({value:\"\"});\r\n\t\tvar textp = \"\", textpidx = 0, textptag;\r\n\t\tvar R = -1, C = -1, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\r\n\t\tvar row_ol = 0;\r\n\t\tvar number_format_map = {};\r\n\t\tvar merges = [], mrange = {}, mR = 0, mC = 0;\r\n\t\tvar rowinfo = [], rowpeat = 1, colpeat = 1;\r\n\t\tvar arrayf = [];\r\n\t\tvar WB = {Names:[]};\r\n\t\tvar atag = ({});\r\n\t\tvar _Ref = [\"\", \"\"];\r\n\t\tvar comments = [], comment = ({});\r\n\t\tvar creator = \"\", creatoridx = 0;\r\n\t\tvar isstub = false, intable = false;\r\n\t\tvar i = 0;\r\n\t\txlmlregex.lastIndex = 0;\r\n\t\tstr = str.replace(/<!--([\\s\\S]*?)-->/mg,\"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm,\"\");\r\n\t\twhile((Rn = xlmlregex.exec(str))) switch((Rn[3]=Rn[3].replace(/_.*$/,\"\"))) {\r\n\r\n\t\t\tcase 'table': case '工作表': // 9.1.2 <table:table>\r\n\t\t\t\tif(Rn[1]==='/') {\r\n\t\t\t\t\tif(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);\r\n\t\t\t\t\tif(opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\r\n\t\t\t\t\t\tws['!fullref'] = ws['!ref'];\r\n\t\t\t\t\t\trange.e.r = opts.sheetRows - 1;\r\n\t\t\t\t\t\tws['!ref'] = encode_range(range);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(merges.length) ws['!merges'] = merges;\r\n\t\t\t\t\tif(rowinfo.length) ws[\"!rows\"] = rowinfo;\r\n\t\t\t\t\tsheetag.name = utf8read(sheetag['名称'] || sheetag.name);\r\n\t\t\t\t\tif(typeof JSON !== 'undefined') JSON.stringify(sheetag);\r\n\t\t\t\t\tSheetNames.push(sheetag.name);\r\n\t\t\t\t\tSheets[sheetag.name] = ws;\r\n\t\t\t\t\tintable = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\r\n\t\t\t\t\tsheetag = parsexmltag(Rn[0], false);\r\n\t\t\t\t\tR = C = -1;\r\n\t\t\t\t\trange.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\r\n\t\t\t\t\tws = opts.dense ? ([]) : ({}); merges = [];\r\n\t\t\t\t\trowinfo = [];\r\n\t\t\t\t\tintable = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'table-row-group': // 9.1.9 <table:table-row-group>\r\n\t\t\t\tif(Rn[1] === \"/\") --row_ol; else ++row_ol;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'table-row': case '行': // 9.1.3 <table:table-row>\r\n\t\t\t\tif(Rn[1] === '/') { R+=rowpeat; rowpeat = 1; break; }\r\n\t\t\t\trowtag = parsexmltag(Rn[0], false);\r\n\t\t\t\tif(rowtag['行号']) R = rowtag['行号'] - 1; else if(R == -1) R = 0;\r\n\t\t\t\trowpeat = +rowtag['number-rows-repeated'] || 1;\r\n\t\t\t\t/* TODO: remove magic */\r\n\t\t\t\tif(rowpeat < 10) for(i = 0; i < rowpeat; ++i) if(row_ol > 0) rowinfo[R + i] = {level: row_ol};\r\n\t\t\t\tC = -1; break;\r\n\t\t\tcase 'covered-table-cell': // 9.1.5 <table:covered-table-cell>\r\n\t\t\t\t++C;\r\n\t\t\t\tif(opts.sheetStubs) {\r\n\t\t\t\t\tif(opts.dense) { if(!ws[R]) ws[R] = []; ws[R][C] = {t:'z'}; }\r\n\t\t\t\t\telse ws[encode_cell({r:R,c:C})] = {t:'z'};\r\n\t\t\t\t}\r\n\t\t\t\tbreak; /* stub */\r\n\t\t\tcase 'table-cell': case '数据':\r\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) === '/') {\r\n\t\t\t\t\t++C;\r\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\r\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\r\n\t\t\t\t\tq = ({t:'z', v:null});\r\n\t\t\t\t\tif(ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\r\n\t\t\t\t\tif((ctag['数据类型'] || ctag['value-type']) == \"string\") {\r\n\t\t\t\t\t\tq.t = \"s\"; q.v = unescapexml(ctag['string-value'] || \"\");\r\n\t\t\t\t\t\tif(opts.dense) {\r\n\t\t\t\t\t\t\tif(!ws[R]) ws[R] = [];\r\n\t\t\t\t\t\t\tws[R][C] = q;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tws[encode_cell({r:R,c:C})] = q;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tC+= colpeat-1;\r\n\t\t\t\t} else if(Rn[1]!=='/') {\r\n\t\t\t\t\t++C;\r\n\t\t\t\t\tcolpeat = 1;\r\n\t\t\t\t\tvar rptR = rowpeat ? R + rowpeat - 1 : R;\r\n\t\t\t\t\tif(C > range.e.c) range.e.c = C;\r\n\t\t\t\t\tif(C < range.s.c) range.s.c = C;\r\n\t\t\t\t\tif(R < range.s.r) range.s.r = R;\r\n\t\t\t\t\tif(rptR > range.e.r) range.e.r = rptR;\r\n\t\t\t\t\tctag = parsexmltag(Rn[0], false);\r\n\t\t\t\t\tcomments = []; comment = ({});\r\n\t\t\t\t\tq = ({t:ctag['数据类型'] || ctag['value-type'], v:null});\r\n\t\t\t\t\tif(opts.cellFormula) {\r\n\t\t\t\t\t\tif(ctag.formula) ctag.formula = unescapexml(ctag.formula);\r\n\t\t\t\t\t\tif(ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\r\n\t\t\t\t\t\t\tmR = parseInt(ctag['number-matrix-rows-spanned'],10) || 0;\r\n\t\t\t\t\t\t\tmC = parseInt(ctag['number-matrix-columns-spanned'],10) || 0;\r\n\t\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\r\n\t\t\t\t\t\t\tq.F = encode_range(mrange);\r\n\t\t\t\t\t\t\tarrayf.push([mrange, q.F]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(ctag.formula) q.f = ods_to_csf_formula(ctag.formula);\r\n\t\t\t\t\t\telse for(i = 0; i < arrayf.length; ++i)\r\n\t\t\t\t\t\t\tif(R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r)\r\n\t\t\t\t\t\t\t\tif(C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c)\r\n\t\t\t\t\t\t\t\t\tq.F = arrayf[i][1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\r\n\t\t\t\t\t\tmR = parseInt(ctag['number-rows-spanned'],10) || 0;\r\n\t\t\t\t\t\tmC = parseInt(ctag['number-columns-spanned'],10) || 0;\r\n\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\r\n\t\t\t\t\t\tmerges.push(mrange);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* 19.675.2 table:number-columns-repeated */\r\n\t\t\t\t\tif(ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\r\n\r\n\t\t\t\t\t/* 19.385 office:value-type */\r\n\t\t\t\t\tswitch(q.t) {\r\n\t\t\t\t\t\tcase 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']); break;\r\n\t\t\t\t\t\tcase 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;\r\n\t\t\t\t\t\tcase 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\r\n\t\t\t\t\t\tcase 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\r\n\t\t\t\t\t\tcase 'date': q.t = 'd'; q.v = parseDate(ctag['date-value']);\r\n\t\t\t\t\t\t\tif(!opts.cellDates) { q.t = 'n'; q.v = datenum(q.v); }\r\n\t\t\t\t\t\t\tq.z = 'm/d/yy'; break;\r\n\t\t\t\t\t\tcase 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400; break;\r\n\t\t\t\t\t\tcase 'number': q.t = 'n'; q.v = parseFloat(ctag['数据数值']); break;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif(q.t === 'string' || q.t === 'text' || !q.t) {\r\n\t\t\t\t\t\t\t\tq.t = 's';\r\n\t\t\t\t\t\t\t\tif(ctag['string-value'] != null) textp = unescapexml(ctag['string-value']);\r\n\t\t\t\t\t\t\t} else throw new Error('Unsupported value type ' + q.t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tisstub = false;\r\n\t\t\t\t\tif(q.t === 's') {\r\n\t\t\t\t\t\tq.v = textp || '';\r\n\t\t\t\t\t\tisstub = textpidx == 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(atag.Target) q.l = atag;\r\n\t\t\t\t\tif(comments.length > 0) { q.c = comments; comments = []; }\r\n\t\t\t\t\tif(textp && opts.cellText !== false) q.w = textp;\r\n\t\t\t\t\tif(!isstub || opts.sheetStubs) {\r\n\t\t\t\t\t\tif(!(opts.sheetRows && opts.sheetRows <= R)) {\r\n\t\t\t\t\t\t\tfor(var rpt = 0; rpt < rowpeat; ++rpt) {\r\n\t\t\t\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\r\n\t\t\t\t\t\t\t\tif(opts.dense) {\r\n\t\t\t\t\t\t\t\t\tif(!ws[R + rpt]) ws[R + rpt] = [];\r\n\t\t\t\t\t\t\t\t\tws[R + rpt][C] = rpt == 0 ? q : dup(q);\r\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[R + rpt][C + colpeat] = dup(q);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tws[encode_cell({r:R + rpt,c:C})] = q;\r\n\t\t\t\t\t\t\t\t\twhile(--colpeat > 0) ws[encode_cell({r:R + rpt,c:C + colpeat})] = dup(q);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(range.e.c <= C) range.e.c = C;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcolpeat = parseInt(ctag['number-columns-repeated']||\"1\", 10);\r\n\t\t\t\t\tC += colpeat-1; colpeat = 0;\r\n\t\t\t\t\tq = {};\r\n\t\t\t\t\ttextp = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tatag = ({});\r\n\t\t\t\tbreak; // 9.1.4 <table:table-cell>\r\n\r\n\t\t\t/* pure state */\r\n\t\t\tcase 'document': // TODO: <office:document> is the root for FODS\r\n\t\t\tcase 'document-content': case '电子表格文档': // 3.1.3.2 <office:document-content>\r\n\t\t\tcase 'spreadsheet': case '主体': // 3.7 <office:spreadsheet>\r\n\t\t\tcase 'scripts': // 3.12 <office:scripts>\r\n\t\t\tcase 'styles': // TODO <office:styles>\r\n\t\t\tcase 'font-face-decls': // 3.14 <office:font-face-decls>\r\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\r\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'annotation': // 14.1 <office:annotation>\r\n\t\t\t\tif(Rn[1]==='/'){\r\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\r\n\t\t\t\t\tcomment.t = textp;\r\n\t\t\t\t\tcomment.a = creator;\r\n\t\t\t\t\tcomments.push(comment);\r\n\t\t\t\t}\r\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {state.push([Rn[3], false]);}\r\n\t\t\t\tcreator = \"\"; creatoridx = 0;\r\n\t\t\t\ttextp = \"\"; textpidx = 0;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'creator': // 4.3.2.7 <dc:creator>\r\n\t\t\t\tif(Rn[1]==='/') { creator = str.slice(creatoridx,Rn.index); }\r\n\t\t\t\telse creatoridx = Rn.index + Rn[0].length;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* ignore state */\r\n\t\t\tcase 'meta': case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\r\n\t\t\tcase 'settings': // TODO: <office:settings>\r\n\t\t\tcase 'config-item-set': // TODO: <office:config-item-set>\r\n\t\t\tcase 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\r\n\t\t\tcase 'config-item-map-entry': // TODO: <office:config-item-map-entry>\r\n\t\t\tcase 'config-item-map-named': // TODO: <office:config-item-map-entry>\r\n\t\t\tcase 'shapes': // 9.2.8 <table:shapes>\r\n\t\t\tcase 'frame': // 10.4.2 <draw:frame>\r\n\t\t\tcase 'text-box': // 10.4.3 <draw:text-box>\r\n\t\t\tcase 'image': // 10.4.4 <draw:image>\r\n\t\t\tcase 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\r\n\t\t\tcase 'list-style': // 16.30 <text:list-style>\r\n\t\t\tcase 'form': // 13.13 <form:form>\r\n\t\t\tcase 'dde-links': // 9.8 <table:dde-links>\r\n\t\t\tcase 'event-listeners': // TODO\r\n\t\t\tcase 'chart': // TODO\r\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\r\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\r\n\t\t\t\ttextp = \"\"; textpidx = 0;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'scientific-number': // TODO: <number:scientific-number>\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'currency-symbol': // TODO: <number:currency-symbol>\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'currency-style': // TODO: <number:currency-style>\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'number-style': // 16.27.2 <number:number-style>\r\n\t\t\tcase 'percentage-style': // 16.27.9 <number:percentage-style>\r\n\t\t\tcase 'date-style': // 16.27.10 <number:date-style>\r\n\t\t\tcase 'time-style': // 16.27.18 <number:time-style>\r\n\t\t\t\tif(Rn[1]==='/'){\r\n\t\t\t\t\tnumber_format_map[NFtag.name] = NF;\r\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\r\n\t\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\r\n\t\t\t\t\tNF = \"\";\r\n\t\t\t\t\tNFtag = parsexmltag(Rn[0], false);\r\n\t\t\t\t\tstate.push([Rn[3], true]);\r\n\t\t\t\t} break;\r\n\r\n\t\t\tcase 'script': break; // 3.13 <office:script>\r\n\t\t\tcase 'libraries': break; // TODO: <ooo:libraries>\r\n\t\t\tcase 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\r\n\t\t\tcase 'master-styles': break; // TODO: <office:master-styles>\r\n\r\n\t\t\tcase 'default-style': // TODO: <style:default-style>\r\n\t\t\tcase 'page-layout': break; // TODO: <style:page-layout>\r\n\t\t\tcase 'style': break; // 16.2 <style:style>\r\n\t\t\tcase 'map': break; // 16.3 <style:map>\r\n\t\t\tcase 'font-face': break; // 16.21 <style:font-face>\r\n\r\n\t\t\tcase 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\r\n\t\t\tcase 'table-properties': break; // 17.15 <style:table-properties>\r\n\t\t\tcase 'table-column-properties': break; // 17.16 <style:table-column-properties>\r\n\t\t\tcase 'table-row-properties': break; // 17.17 <style:table-row-properties>\r\n\t\t\tcase 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\r\n\r\n\t\t\tcase 'number': // 16.27.3 <number:number>\r\n\t\t\t\tswitch(state[state.length-1][0]) {\r\n\t\t\t\t\tcase 'time-style':\r\n\t\t\t\t\tcase 'date-style':\r\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\r\n\t\t\t\t\t\tNF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\r\n\t\t\t\t} break;\r\n\r\n\t\t\tcase 'fraction': break; // TODO 16.27.6 <number:fraction>\r\n\r\n\t\t\tcase 'day': // 16.27.11 <number:day>\r\n\t\t\tcase 'month': // 16.27.12 <number:month>\r\n\t\t\tcase 'year': // 16.27.13 <number:year>\r\n\t\t\tcase 'era': // 16.27.14 <number:era>\r\n\t\t\tcase 'day-of-week': // 16.27.15 <number:day-of-week>\r\n\t\t\tcase 'week-of-year': // 16.27.16 <number:week-of-year>\r\n\t\t\tcase 'quarter': // 16.27.17 <number:quarter>\r\n\t\t\tcase 'hours': // 16.27.19 <number:hours>\r\n\t\t\tcase 'minutes': // 16.27.20 <number:minutes>\r\n\t\t\tcase 'seconds': // 16.27.21 <number:seconds>\r\n\t\t\tcase 'am-pm': // 16.27.22 <number:am-pm>\r\n\t\t\t\tswitch(state[state.length-1][0]) {\r\n\t\t\t\t\tcase 'time-style':\r\n\t\t\t\t\tcase 'date-style':\r\n\t\t\t\t\t\ttag = parsexmltag(Rn[0], false);\r\n\t\t\t\t\t\tNF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\r\n\t\t\t\t} break;\r\n\r\n\t\t\tcase 'boolean-style': break; // 16.27.23 <number:boolean-style>\r\n\t\t\tcase 'boolean': break; // 16.27.24 <number:boolean>\r\n\t\t\tcase 'text-style': break; // 16.27.25 <number:text-style>\r\n\t\t\tcase 'text': // 16.27.26 <number:text>\r\n\t\t\t\tif(Rn[0].slice(-2) === \"/>\") break;\r\n\t\t\t\telse if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\r\n\t\t\t\t\tcase 'number-style':\r\n\t\t\t\t\tcase 'date-style':\r\n\t\t\t\t\tcase 'time-style':\r\n\t\t\t\t\t\tNF += str.slice(pidx, Rn.index);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse pidx = Rn.index + Rn[0].length;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'named-range': // 9.4.12 <table:named-range>\r\n\t\t\t\ttag = parsexmltag(Rn[0], false);\r\n\t\t\t\t_Ref = ods_to_csf_3D(tag['cell-range-address']);\r\n\t\t\t\tvar nrange = ({Name:tag.name, Ref:_Ref[0] + '!' + _Ref[1]});\r\n\t\t\t\tif(intable) nrange.Sheet = SheetNames.length;\r\n\t\t\t\tWB.Names.push(nrange);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'text-content': break; // 16.27.27 <number:text-content>\r\n\t\t\tcase 'text-properties': break; // 16.27.27 <style:text-properties>\r\n\t\t\tcase 'embedded-text': break; // 16.27.4 <number:embedded-text>\r\n\r\n\t\t\tcase 'body': case '电子表格': break; // 3.3 16.9.6 19.726.3\r\n\r\n\t\t\tcase 'forms': break; // 12.25.2 13.2\r\n\t\t\tcase 'table-column': break; // 9.1.6 <table:table-column>\r\n\t\t\tcase 'table-header-rows': break; // 9.1.7 <table:table-header-rows>\r\n\t\t\tcase 'table-rows': break; // 9.1.12 <table:table-rows>\r\n\t\t\t/* TODO: outline levels */\r\n\t\t\tcase 'table-column-group': break; // 9.1.10 <table:table-column-group>\r\n\t\t\tcase 'table-header-columns': break; // 9.1.11 <table:table-header-columns>\r\n\t\t\tcase 'table-columns': break; // 9.1.12 <table:table-columns>\r\n\r\n\t\t\tcase 'null-date': break; // 9.4.2 <table:null-date> TODO: date1904\r\n\r\n\t\t\tcase 'graphic-properties': break; // 17.21 <style:graphic-properties>\r\n\t\t\tcase 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\r\n\t\t\tcase 'named-expressions': break; // 9.4.11 <table:named-expressions>\r\n\t\t\tcase 'label-range': break; // 9.4.9 <table:label-range>\r\n\t\t\tcase 'label-ranges': break; // 9.4.10 <table:label-ranges>\r\n\t\t\tcase 'named-expression': break; // 9.4.13 <table:named-expression>\r\n\t\t\tcase 'sort': break; // 9.4.19 <table:sort>\r\n\t\t\tcase 'sort-by': break; // 9.4.20 <table:sort-by>\r\n\t\t\tcase 'sort-groups': break; // 9.4.22 <table:sort-groups>\r\n\r\n\t\t\tcase 'tab': break; // 6.1.4 <text:tab>\r\n\t\t\tcase 'line-break': break; // 6.1.5 <text:line-break>\r\n\t\t\tcase 'span': break; // 6.1.7 <text:span>\r\n\t\t\tcase 'p': case '文本串': // 5.1.3 <text:p>\r\n\t\t\t\tif(Rn[1]==='/' && (!ctag || !ctag['string-value'])) textp = (textp.length > 0 ? textp + \"\\n\" : \"\") + parse_text_p(str.slice(textpidx,Rn.index), textptag);\r\n\t\t\t\telse { textptag = parsexmltag(Rn[0], false); textpidx = Rn.index + Rn[0].length; }\r\n\t\t\t\tbreak; // <text:p>\r\n\t\t\tcase 's': break; // <text:s>\r\n\r\n\t\t\tcase 'database-range': // 9.4.15 <table:database-range>\r\n\t\t\t\tif(Rn[1]==='/') break;\r\n\t\t\t\ttry {\r\n\t\t\t\t\t_Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\r\n\t\t\t\t\tSheets[_Ref[0]]['!autofilter'] = { ref:_Ref[1] };\r\n\t\t\t\t} catch(e) {/* empty */}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'date': break; // <*:date>\r\n\r\n\t\t\tcase 'object': break; // 10.4.6.2 <draw:object>\r\n\t\t\tcase 'title': case '标题': break; // <*:title> OR <uof:标题>\r\n\t\t\tcase 'desc': break; // <*:desc>\r\n\t\t\tcase 'binary-data': break; // 10.4.5 TODO: b64 blob\r\n\r\n\t\t\t/* 9.2 Advanced Tables */\r\n\t\t\tcase 'table-source': break; // 9.2.6\r\n\t\t\tcase 'scenario': break; // 9.2.6\r\n\r\n\t\t\tcase 'iteration': break; // 9.4.3 <table:iteration>\r\n\t\t\tcase 'content-validations': break; // 9.4.4 <table:\r\n\t\t\tcase 'content-validation': break; // 9.4.5 <table:\r\n\t\t\tcase 'help-message': break; // 9.4.6 <table:\r\n\t\t\tcase 'error-message': break; // 9.4.7 <table:\r\n\t\t\tcase 'database-ranges': break; // 9.4.14 <table:database-ranges>\r\n\t\t\tcase 'filter': break; // 9.5.2 <table:filter>\r\n\t\t\tcase 'filter-and': break; // 9.5.3 <table:filter-and>\r\n\t\t\tcase 'filter-or': break; // 9.5.4 <table:filter-or>\r\n\t\t\tcase 'filter-condition': break; // 9.5.5 <table:filter-condition>\r\n\r\n\t\t\tcase 'list-level-style-bullet': break; // 16.31 <text:\r\n\t\t\tcase 'list-level-style-number': break; // 16.32 <text:\r\n\t\t\tcase 'list-level-properties': break; // 17.19 <style:\r\n\r\n\t\t\t/* 7.3 Document Fields */\r\n\t\t\tcase 'sender-firstname': // 7.3.6.2\r\n\t\t\tcase 'sender-lastname': // 7.3.6.3\r\n\t\t\tcase 'sender-initials': // 7.3.6.4\r\n\t\t\tcase 'sender-title': // 7.3.6.5\r\n\t\t\tcase 'sender-position': // 7.3.6.6\r\n\t\t\tcase 'sender-email': // 7.3.6.7\r\n\t\t\tcase 'sender-phone-private': // 7.3.6.8\r\n\t\t\tcase 'sender-fax': // 7.3.6.9\r\n\t\t\tcase 'sender-company': // 7.3.6.10\r\n\t\t\tcase 'sender-phone-work': // 7.3.6.11\r\n\t\t\tcase 'sender-street': // 7.3.6.12\r\n\t\t\tcase 'sender-city': // 7.3.6.13\r\n\t\t\tcase 'sender-postal-code': // 7.3.6.14\r\n\t\t\tcase 'sender-country': // 7.3.6.15\r\n\t\t\tcase 'sender-state-or-province': // 7.3.6.16\r\n\t\t\tcase 'author-name': // 7.3.7.1\r\n\t\t\tcase 'author-initials': // 7.3.7.2\r\n\t\t\tcase 'chapter': // 7.3.8\r\n\t\t\tcase 'file-name': // 7.3.9\r\n\t\t\tcase 'template-name': // 7.3.9\r\n\t\t\tcase 'sheet-name': // 7.3.9\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'event-listener':\r\n\t\t\t\tbreak;\r\n\t\t\t/* TODO: FODS Properties */\r\n\t\t\tcase 'initial-creator':\r\n\t\t\tcase 'creation-date':\r\n\t\t\tcase 'print-date':\r\n\t\t\tcase 'generator':\r\n\t\t\tcase 'document-statistic':\r\n\t\t\tcase 'user-defined':\r\n\t\t\tcase 'editing-duration':\r\n\t\t\tcase 'editing-cycles':\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* TODO: FODS Config */\r\n\t\t\tcase 'config-item':\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* TODO: style tokens */\r\n\t\t\tcase 'page-number': break; // TODO <text:page-number>\r\n\t\t\tcase 'page-count': break; // TODO <text:page-count>\r\n\t\t\tcase 'time': break; // TODO <text:time>\r\n\r\n\t\t\t/* 9.3 Advanced Table Cells */\r\n\t\t\tcase 'cell-range-source': break; // 9.3.1 <table:\r\n\t\t\tcase 'detective': break; // 9.3.2 <table:\r\n\t\t\tcase 'operation': break; // 9.3.3 <table:\r\n\t\t\tcase 'highlighted-range': break; // 9.3.4 <table:\r\n\r\n\t\t\t/* 9.6 Data Pilot Tables <table: */\r\n\t\t\tcase 'data-pilot-table': // 9.6.3\r\n\t\t\tcase 'source-cell-range': // 9.6.5\r\n\t\t\tcase 'source-service': // 9.6.6\r\n\t\t\tcase 'data-pilot-field': // 9.6.7\r\n\t\t\tcase 'data-pilot-level': // 9.6.8\r\n\t\t\tcase 'data-pilot-subtotals': // 9.6.9\r\n\t\t\tcase 'data-pilot-subtotal': // 9.6.10\r\n\t\t\tcase 'data-pilot-members': // 9.6.11\r\n\t\t\tcase 'data-pilot-member': // 9.6.12\r\n\t\t\tcase 'data-pilot-display-info': // 9.6.13\r\n\t\t\tcase 'data-pilot-sort-info': // 9.6.14\r\n\t\t\tcase 'data-pilot-layout-info': // 9.6.15\r\n\t\t\tcase 'data-pilot-field-reference': // 9.6.16\r\n\t\t\tcase 'data-pilot-groups': // 9.6.17\r\n\t\t\tcase 'data-pilot-group': // 9.6.18\r\n\t\t\tcase 'data-pilot-group-member': // 9.6.19\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* 10.3 Drawing Shapes */\r\n\t\t\tcase 'rect': // 10.3.2\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* 14.6 DDE Connections */\r\n\t\t\tcase 'dde-connection-decls': // 14.6.2 <text:\r\n\t\t\tcase 'dde-connection-decl': // 14.6.3 <text:\r\n\t\t\tcase 'dde-link': // 14.6.4 <table:\r\n\t\t\tcase 'dde-source': // 14.6.5 <office:\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'properties': break; // 13.7 <form:properties>\r\n\t\t\tcase 'property': break; // 13.8 <form:property>\r\n\r\n\t\t\tcase 'a': // 6.1.8 hyperlink\r\n\t\t\t\tif(Rn[1]!== '/') {\r\n\t\t\t\t\tatag = parsexmltag(Rn[0], false);\r\n\t\t\t\t\tif(!atag.href) break;\r\n\t\t\t\t\tatag.Target = atag.href; delete atag.href;\r\n\t\t\t\t\tif(atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\r\n\t\t\t\t\t\t_Ref = ods_to_csf_3D(atag.Target.slice(1));\r\n\t\t\t\t\t\tatag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/* non-standard */\r\n\t\t\tcase 'table-protection': break;\r\n\t\t\tcase 'data-pilot-grand-total': break; // <table:\r\n\t\t\tcase 'office-document-common-attrs': break; // bare\r\n\t\t\tdefault: switch(Rn[2]) {\r\n\t\t\t\tcase 'dc:':       // TODO: properties\r\n\t\t\t\tcase 'calcext:':  // ignore undocumented extensions\r\n\t\t\t\tcase 'loext:':    // ignore undocumented extensions\r\n\t\t\t\tcase 'ooo:':      // ignore undocumented extensions\r\n\t\t\t\tcase 'chartooo:': // ignore undocumented extensions\r\n\t\t\t\tcase 'draw:':     // TODO: drawing\r\n\t\t\t\tcase 'style:':    // TODO: styles\r\n\t\t\t\tcase 'chart:':    // TODO: charts\r\n\t\t\t\tcase 'form:':     // TODO: forms\r\n\t\t\t\tcase 'uof:':      // TODO: uof\r\n\t\t\t\tcase '表:':       // TODO: uof\r\n\t\t\t\tcase '字:':       // TODO: uof\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: if(opts.WTF) throw new Error(Rn);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar out = ({\r\n\t\t\tSheets: Sheets,\r\n\t\t\tSheetNames: SheetNames,\r\n\t\t\tWorkbook: WB\r\n\t\t});\r\n\t\tif(opts.bookSheets) delete out.Sheets;\r\n\t\treturn out;\r\n\t};\r\n})();\r\n\r\nfunction parse_ods(zip, opts) {\r\n\topts = opts || ({});\r\n\tvar ods = !!safegetzipfile(zip, 'objectdata');\r\n\tif(ods) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\r\n\tvar content = getzipstr(zip, 'content.xml');\r\n\tif(!content) throw new Error(\"Missing content.xml in \" + (ods ? \"ODS\" : \"UOF\")+ \" file\");\r\n\tvar wb = parse_content_xml(ods ? content : utf8read(content), opts);\r\n\tif(safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\r\n\treturn wb;\r\n}\r\nfunction parse_fods(data, opts) {\r\n\treturn parse_content_xml(data, opts);\r\n}\r\n\r\n/* OpenDocument */\r\nvar write_styles_ods = (function() {\r\n\tvar payload = '<office:document-styles ' + wxt_helper({\r\n\t\t'xmlns:office':   \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\r\n\t\t'xmlns:table':    \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\r\n\t\t'xmlns:style':    \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\r\n\t\t'xmlns:text':     \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\r\n\t\t'xmlns:draw':     \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\r\n\t\t'xmlns:fo':       \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\r\n\t\t'xmlns:xlink':    \"http://www.w3.org/1999/xlink\",\r\n\t\t'xmlns:dc':       \"http://purl.org/dc/elements/1.1/\",\r\n\t\t'xmlns:number':   \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\r\n\t\t'xmlns:svg':      \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\r\n\t\t'xmlns:of':       \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\r\n\t\t'office:version': \"1.2\"\r\n\t}) + '></office:document-styles>';\r\n\treturn function wso() {\r\n\t\treturn XML_HEADER + payload;\r\n\t};\r\n})();\r\nvar write_content_ods = (function() {\r\n\t/* 6.1.2 White Space Characters */\r\n\tvar write_text_p = function(text) {\r\n\t\treturn escapexml(text)\r\n\t\t\t.replace(/  +/g, function($$){return '<text:s text:c=\"'+$$.length+'\"/>';})\r\n\t\t\t.replace(/\\t/g, \"<text:tab/>\")\r\n\t\t\t.replace(/\\n/g, \"<text:line-break/>\")\r\n\t\t\t.replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\r\n\t};\r\n\r\n\tvar null_cell_xml = '          <table:table-cell />\\n';\r\n\tvar covered_cell_xml = '          <table:covered-table-cell/>\\n';\r\n\tvar write_ws = function(ws, wb, i) {\r\n\t\t/* Section 9 Tables */\r\n\t\tvar o = [];\r\n\t\to.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\">\\n');\r\n\t\tvar R=0,C=0, range = decode_range(ws['!ref']);\r\n\t\tvar marr = ws['!merges'] || [], mi = 0;\r\n\t\tvar dense = Array.isArray(ws);\r\n\t\tfor(R = 0; R < range.s.r; ++R) o.push('        <table:table-row></table:table-row>\\n');\r\n\t\tfor(; R <= range.e.r; ++R) {\r\n\t\t\to.push('        <table:table-row>\\n');\r\n\t\t\tfor(C=0; C < range.s.c; ++C) o.push(null_cell_xml);\r\n\t\t\tfor(; C <= range.e.c; ++C) {\r\n\t\t\t\tvar skip = false, ct = {}, textp = \"\";\r\n\t\t\t\tfor(mi = 0; mi != marr.length; ++mi) {\r\n\t\t\t\t\tif(marr[mi].s.c > C) continue;\r\n\t\t\t\t\tif(marr[mi].s.r > R) continue;\r\n\t\t\t\t\tif(marr[mi].e.c < C) continue;\r\n\t\t\t\t\tif(marr[mi].e.r < R) continue;\r\n\t\t\t\t\tif(marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\r\n\t\t\t\t\tct['table:number-columns-spanned'] = (marr[mi].e.c - marr[mi].s.c + 1);\r\n\t\t\t\t\tct['table:number-rows-spanned'] =    (marr[mi].e.r - marr[mi].s.r + 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif(skip) { o.push(covered_cell_xml); continue; }\r\n\t\t\t\tvar ref = encode_cell({r:R, c:C}), cell = dense ? (ws[R]||[])[C]: ws[ref];\r\n\t\t\t\tif(cell && cell.f) {\r\n\t\t\t\t\tct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\r\n\t\t\t\t\tif(cell.F) {\r\n\t\t\t\t\t\tif(cell.F.slice(0, ref.length) == ref) {\r\n\t\t\t\t\t\t\tvar _Fref = decode_range(cell.F);\r\n\t\t\t\t\t\t\tct['table:number-matrix-columns-spanned'] = (_Fref.e.c - _Fref.s.c + 1);\r\n\t\t\t\t\t\t\tct['table:number-matrix-rows-spanned'] =    (_Fref.e.r - _Fref.s.r + 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!cell) { o.push(null_cell_xml); continue; }\r\n\t\t\t\tswitch(cell.t) {\r\n\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\ttextp = (cell.v ? 'TRUE' : 'FALSE');\r\n\t\t\t\t\t\tct['office:value-type'] = \"boolean\";\r\n\t\t\t\t\t\tct['office:boolean-value'] = (cell.v ? 'true' : 'false');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'n':\r\n\t\t\t\t\t\ttextp = (cell.w||String(cell.v||0));\r\n\t\t\t\t\t\tct['office:value-type'] = \"float\";\r\n\t\t\t\t\t\tct['office:value'] = (cell.v||0);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 's': case 'str':\r\n\t\t\t\t\t\ttextp = cell.v;\r\n\t\t\t\t\t\tct['office:value-type'] = \"string\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\ttextp = (cell.w||(parseDate(cell.v).toISOString()));\r\n\t\t\t\t\t\tct['office:value-type'] = \"date\";\r\n\t\t\t\t\t\tct['office:date-value'] = (parseDate(cell.v).toISOString());\r\n\t\t\t\t\t\tct['table:style-name'] = \"ce1\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t//case 'e':\r\n\t\t\t\t\tdefault: o.push(null_cell_xml); continue;\r\n\t\t\t\t}\r\n\t\t\t\tvar text_p = write_text_p(textp);\r\n\t\t\t\tif(cell.l && cell.l.Target) {\r\n\t\t\t\t\tvar _tgt = cell.l.Target; _tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\r\n\t\t\t\t\ttext_p = writextag('text:a', text_p, {'xlink:href': _tgt});\r\n\t\t\t\t}\r\n\t\t\t\to.push('          ' + writextag('table:table-cell', writextag('text:p', text_p, {}), ct) + '\\n');\r\n\t\t\t}\r\n\t\t\to.push('        </table:table-row>\\n');\r\n\t\t}\r\n\t\to.push('      </table:table>\\n');\r\n\t\treturn o.join(\"\");\r\n\t};\r\n\r\n\tvar write_automatic_styles_ods = function(o) {\r\n\t\to.push(' <office:automatic-styles>\\n');\r\n\t\to.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\r\n\t\to.push('   <number:month number:style=\"long\"/>\\n');\r\n\t\to.push('   <number:text>/</number:text>\\n');\r\n\t\to.push('   <number:day number:style=\"long\"/>\\n');\r\n\t\to.push('   <number:text>/</number:text>\\n');\r\n\t\to.push('   <number:year/>\\n');\r\n\t\to.push('  </number:date-style>\\n');\r\n\t\to.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\r\n\t\to.push(' </office:automatic-styles>\\n');\r\n\t};\r\n\r\n\treturn function wcx(wb, opts) {\r\n\t\tvar o = [XML_HEADER];\r\n\t\t/* 3.1.3.2 */\r\n\t\tvar attr = wxt_helper({\r\n\t\t\t'xmlns:office':       \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\r\n\t\t\t'xmlns:table':        \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\r\n\t\t\t'xmlns:style':        \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\r\n\t\t\t'xmlns:text':         \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\r\n\t\t\t'xmlns:draw':         \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\r\n\t\t\t'xmlns:fo':           \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\r\n\t\t\t'xmlns:xlink':        \"http://www.w3.org/1999/xlink\",\r\n\t\t\t'xmlns:dc':           \"http://purl.org/dc/elements/1.1/\",\r\n\t\t\t'xmlns:meta':         \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\r\n\t\t\t'xmlns:number':       \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\r\n\t\t\t'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\r\n\t\t\t'xmlns:svg':          \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\r\n\t\t\t'xmlns:chart':        \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\r\n\t\t\t'xmlns:dr3d':         \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\r\n\t\t\t'xmlns:math':         \"http://www.w3.org/1998/Math/MathML\",\r\n\t\t\t'xmlns:form':         \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\r\n\t\t\t'xmlns:script':       \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\r\n\t\t\t'xmlns:ooo':          \"http://openoffice.org/2004/office\",\r\n\t\t\t'xmlns:ooow':         \"http://openoffice.org/2004/writer\",\r\n\t\t\t'xmlns:oooc':         \"http://openoffice.org/2004/calc\",\r\n\t\t\t'xmlns:dom':          \"http://www.w3.org/2001/xml-events\",\r\n\t\t\t'xmlns:xforms':       \"http://www.w3.org/2002/xforms\",\r\n\t\t\t'xmlns:xsd':          \"http://www.w3.org/2001/XMLSchema\",\r\n\t\t\t'xmlns:xsi':          \"http://www.w3.org/2001/XMLSchema-instance\",\r\n\t\t\t'xmlns:sheet':        \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\r\n\t\t\t'xmlns:rpt':          \"http://openoffice.org/2005/report\",\r\n\t\t\t'xmlns:of':           \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\r\n\t\t\t'xmlns:xhtml':        \"http://www.w3.org/1999/xhtml\",\r\n\t\t\t'xmlns:grddl':        \"http://www.w3.org/2003/g/data-view#\",\r\n\t\t\t'xmlns:tableooo':     \"http://openoffice.org/2009/table\",\r\n\t\t\t'xmlns:drawooo':      \"http://openoffice.org/2010/draw\",\r\n\t\t\t'xmlns:calcext':      \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\r\n\t\t\t'xmlns:loext':        \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\r\n\t\t\t'xmlns:field':        \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\r\n\t\t\t'xmlns:formx':        \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\r\n\t\t\t'xmlns:css3t':        \"http://www.w3.org/TR/css3-text/\",\r\n\t\t\t'office:version':     \"1.2\"\r\n\t\t});\r\n\r\n\t\tvar fods = wxt_helper({\r\n\t\t\t'xmlns:config':    \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\r\n\t\t\t'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\r\n\t\t});\r\n\r\n\t\tif(opts.bookType == \"fods\") o.push('<office:document' + attr + fods + '>\\n');\r\n\t\telse o.push('<office:document-content' + attr  + '>\\n');\r\n\t\twrite_automatic_styles_ods(o);\r\n\t\to.push('  <office:body>\\n');\r\n\t\to.push('    <office:spreadsheet>\\n');\r\n\t\tfor(var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts));\r\n\t\to.push('    </office:spreadsheet>\\n');\r\n\t\to.push('  </office:body>\\n');\r\n\t\tif(opts.bookType == \"fods\") o.push('</office:document>');\r\n\t\telse o.push('</office:document-content>');\r\n\t\treturn o.join(\"\");\r\n\t};\r\n})();\r\n\r\nfunction write_ods(wb, opts) {\r\n\tif(opts.bookType == \"fods\") return write_content_ods(wb, opts);\r\n\r\nvar zip = new jszip();\r\n\tvar f = \"\";\r\n\r\n\tvar manifest = [];\r\n\tvar rdf = [];\r\n\r\n\t/* Part 3 Section 3.3 MIME Media Type */\r\n\tf = \"mimetype\";\r\n\tzip.file(f, \"application/vnd.oasis.opendocument.spreadsheet\");\r\n\r\n\t/* Part 1 Section 2.2 Documents */\r\n\tf = \"content.xml\";\r\n\tzip.file(f, write_content_ods(wb, opts));\r\n\tmanifest.push([f, \"text/xml\"]);\r\n\trdf.push([f, \"ContentFile\"]);\r\n\r\n\t/* TODO: these are hard-coded styles to satiate excel */\r\n\tf = \"styles.xml\";\r\n\tzip.file(f, write_styles_ods(wb, opts));\r\n\tmanifest.push([f, \"text/xml\"]);\r\n\trdf.push([f, \"StylesFile\"]);\r\n\r\n\t/* TODO: this is hard-coded to satiate excel */\r\n\tf = \"meta.xml\";\r\n\tzip.file(f, write_meta_ods());\r\n\tmanifest.push([f, \"text/xml\"]);\r\n\trdf.push([f, \"MetadataFile\"]);\r\n\r\n\t/* Part 3 Section 6 Metadata Manifest File */\r\n\tf = \"manifest.rdf\";\r\n\tzip.file(f, write_rdf(rdf/*, opts*/));\r\n\tmanifest.push([f, \"application/rdf+xml\"]);\r\n\r\n\t/* Part 3 Section 4 Manifest File */\r\n\tf = \"META-INF/manifest.xml\";\r\n\tzip.file(f, write_manifest(manifest/*, opts*/));\r\n\r\n\treturn zip;\r\n}\r\n\r\nfunction write_sheet_index(wb, sheet) {\r\n\tif(!sheet) return 0;\r\n\tvar idx = wb.SheetNames.indexOf(sheet);\r\n\tif(idx == -1) throw new Error(\"Sheet not found: \" + sheet);\r\n\treturn idx;\r\n}\r\n\r\nfunction write_obj_str(factory) {\r\n\treturn function write_str(wb, o) {\r\n\t\tvar idx = write_sheet_index(wb, o.sheet);\r\n\t\treturn factory.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb);\r\n\t};\r\n}\r\n\r\nvar write_htm_str = write_obj_str(HTML_);\r\nvar write_csv_str = write_obj_str({from_sheet:sheet_to_csv});\r\nvar write_slk_str = write_obj_str(SYLK);\r\nvar write_dif_str = write_obj_str(DIF);\r\nvar write_prn_str = write_obj_str(PRN);\r\nvar write_rtf_str = write_obj_str(RTF);\r\nvar write_txt_str = write_obj_str({from_sheet:sheet_to_txt});\r\nvar write_dbf_buf = write_obj_str(DBF);\r\nvar write_eth_str = write_obj_str(ETH);\r\n\r\nfunction fix_opts_func(defaults) {\r\n\treturn function fix_opts(opts) {\r\n\t\tfor(var i = 0; i != defaults.length; ++i) {\r\n\t\t\tvar d = defaults[i];\r\n\t\t\tif(opts[d[0]] === undefined) opts[d[0]] = d[1];\r\n\t\t\tif(d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar fix_read_opts = fix_opts_func([\r\n\t['cellNF', false], /* emit cell number format string as .z */\r\n\t['cellHTML', true], /* emit html string as .h */\r\n\t['cellFormula', true], /* emit formulae as .f */\r\n\t['cellStyles', false], /* emits style/theme as .s */\r\n\t['cellText', true], /* emit formatted text as .w */\r\n\t['cellDates', false], /* emit date cells with type `d` */\r\n\r\n\t['sheetStubs', false], /* emit empty cells */\r\n\t['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\r\n\r\n\t['bookDeps', false], /* parse calculation chains */\r\n\t['bookSheets', false], /* only try to get sheet names (no Sheets) */\r\n\t['bookProps', false], /* only try to get properties (no Sheets) */\r\n\t['bookFiles', false], /* include raw file structure (keys, files, cfb) */\r\n\t['bookVBA', false], /* include vba raw data (vbaraw) */\r\n\r\n\t['password',''], /* password */\r\n\t['WTF', false] /* WTF mode (throws errors) */\r\n]);\r\n\r\n\r\nvar fix_write_opts = fix_opts_func([\r\n\t['cellDates', false], /* write date cells with type `d` */\r\n\r\n\t['bookSST', false], /* Generate Shared String Table */\r\n\r\n\t['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\r\n\r\n\t['compression', false], /* Use file compression */\r\n\r\n\t['WTF', false] /* WTF mode (throws errors) */\r\n]);\r\nfunction get_sheet_type(n) {\r\n\tif(RELS.WS.indexOf(n) > -1) return \"sheet\";\r\n\tif(RELS.CS && n == RELS.CS) return \"chart\";\r\n\tif(RELS.DS && n == RELS.DS) return \"dialog\";\r\n\tif(RELS.MS && n == RELS.MS) return \"macro\";\r\n\treturn (n && n.length) ? n : \"sheet\";\r\n}\r\nfunction safe_parse_wbrels(wbrels, sheets) {\r\n\tif(!wbrels) return 0;\r\n\ttry {\r\n\t\twbrels = sheets.map(function pwbr(w) { if(!w.id) w.id = w.strRelID; return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)]; });\r\n\t} catch(e) { return null; }\r\n\treturn !wbrels || wbrels.length === 0 ? null : wbrels;\r\n}\r\n\r\nfunction safe_parse_sheet(zip, path, relsPath, sheet, idx, sheetRels, sheets, stype, opts, wb, themes, styles) {\r\n\ttry {\r\n\t\tsheetRels[sheet]=parse_rels(getzipstr(zip, relsPath, true), path);\r\n\t\tvar data = getzipdata(zip, path);\r\n\t\tswitch(stype) {\r\n\t\t\tcase 'sheet': sheets[sheet]=parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\r\n\t\t\tcase 'chart':\r\n\t\t\t\tvar cs = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\r\n\t\t\t\tsheets[sheet] = cs;\r\n\t\t\t\tif(!cs || !cs['!chart']) break;\r\n\t\t\t\tvar dfile = resolve_path(cs['!chart'].Target, path);\r\n\t\t\t\tvar drelsp = get_rels_path(dfile);\r\n\t\t\t\tvar draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\r\n\t\t\t\tvar chartp = resolve_path(draw, dfile);\r\n\t\t\t\tvar crelsp = get_rels_path(chartp);\r\n\t\t\t\tcs = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, cs);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'macro': sheets[sheet]=parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\r\n\t\t\tcase 'dialog': sheets[sheet]=parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles); break;\r\n\t\t}\r\n\t} catch(e) { if(opts.WTF) throw e; }\r\n}\r\n\r\nfunction strip_front_slash(x) { return x.charAt(0) == '/' ? x.slice(1) : x; }\r\n\r\nfunction parse_zip(zip, opts) {\r\n\tmake_ssf(SSF);\r\n\topts = opts || {};\r\n\tfix_read_opts(opts);\r\n\r\n\t/* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\r\n\tif(safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\r\n\t/* UOC */\r\n\tif(safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\r\n\t/* Numbers */\r\n\tif(safegetzipfile(zip, 'Index/Document.iwa')) throw new Error('Unsupported NUMBERS file');\r\n\r\n\tvar entries = zipentries(zip);\r\n\tvar dir = parse_ct((getzipstr(zip, '[Content_Types].xml')));\r\n\tvar xlsb = false;\r\n\tvar sheets, binname;\r\n\tif(dir.workbooks.length === 0) {\r\n\t\tbinname = \"xl/workbook.xml\";\r\n\t\tif(getzipdata(zip,binname, true)) dir.workbooks.push(binname);\r\n\t}\r\n\tif(dir.workbooks.length === 0) {\r\n\t\tbinname = \"xl/workbook.bin\";\r\n\t\tif(!getzipdata(zip,binname,true)) throw new Error(\"Could not find workbook\");\r\n\t\tdir.workbooks.push(binname);\r\n\t\txlsb = true;\r\n\t}\r\n\tif(dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\r\n\r\n\tvar themes = ({});\r\n\tvar styles = ({});\r\n\tif(!opts.bookSheets && !opts.bookProps) {\r\n\t\tstrs = [];\r\n\t\tif(dir.sst) strs=parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts);\r\n\r\n\t\tif(opts.cellStyles && dir.themes.length) themes = parse_theme(getzipstr(zip, dir.themes[0].replace(/^\\//,''), true)||\"\",dir.themes[0], opts);\r\n\r\n\t\tif(dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\r\n\t}\r\n\r\n\t/*var externbooks = */dir.links.map(function(link) {\r\n\t\treturn parse_xlink(getzipdata(zip, strip_front_slash(link)), link, opts);\r\n\t});\r\n\r\n\tvar wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\r\n\r\n\tvar props = {}, propdata = \"\";\r\n\r\n\tif(dir.coreprops.length) {\r\n\t\tpropdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\r\n\t\tif(propdata) props = parse_core_props(propdata);\r\n\t\tif(dir.extprops.length !== 0) {\r\n\t\t\tpropdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\r\n\t\t\tif(propdata) parse_ext_props(propdata, props, opts);\r\n\t\t}\r\n\t}\r\n\r\n\tvar custprops = {};\r\n\tif(!opts.bookSheets || opts.bookProps) {\r\n\t\tif (dir.custprops.length !== 0) {\r\n\t\t\tpropdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\r\n\t\t\tif(propdata) custprops = parse_cust_props(propdata, opts);\r\n\t\t}\r\n\t}\r\n\r\n\tvar out = ({});\r\n\tif(opts.bookSheets || opts.bookProps) {\r\n\t\tif(wb.Sheets) sheets = wb.Sheets.map(function pluck(x){ return x.name; });\r\n\t\telse if(props.Worksheets && props.SheetNames.length > 0) sheets=props.SheetNames;\r\n\t\tif(opts.bookProps) { out.Props = props; out.Custprops = custprops; }\r\n\t\tif(opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\r\n\t\tif(opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\r\n\t}\r\n\tsheets = {};\r\n\r\n\tvar deps = {};\r\n\tif(opts.bookDeps && dir.calcchain) deps=parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)),dir.calcchain,opts);\r\n\r\n\tvar i=0;\r\n\tvar sheetRels = ({});\r\n\tvar path, relsPath;\r\n\r\n\t{\r\n\t\tvar wbsheets = wb.Sheets;\r\n\t\tprops.Worksheets = wbsheets.length;\r\n\t\tprops.SheetNames = [];\r\n\t\tfor(var j = 0; j != wbsheets.length; ++j) {\r\n\t\t\tprops.SheetNames[j] = wbsheets[j].name;\r\n\t\t}\r\n\t}\r\n\r\n\tvar wbext = xlsb ? \"bin\" : \"xml\";\r\n\tvar wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\r\n\tvar wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile);\r\n\tif(wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\r\n\t/* Numbers iOS hack */\r\n\tvar nmode = (getzipdata(zip,\"xl/worksheets/sheet.xml\",true))?1:0;\r\n\tfor(i = 0; i != props.Worksheets; ++i) {\r\n\t\tvar stype = \"sheet\";\r\n\t\tif(wbrels && wbrels[i]) {\r\n\t\t\tpath = 'xl/' + (wbrels[i][1]).replace(/[\\/]?xl\\//, \"\");\r\n\t\t\tstype = wbrels[i][2];\r\n\t\t} else {\r\n\t\t\tpath = 'xl/worksheets/sheet'+(i+1-nmode)+\".\" + wbext;\r\n\t\t\tpath = path.replace(/sheet0\\./,\"sheet.\");\r\n\t\t}\r\n\t\trelsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\r\n\t\tsafe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\r\n\t}\r\n\r\n\tif(dir.comments) parse_comments(zip, dir.comments, sheets, sheetRels, opts);\r\n\r\n\tout = ({\r\n\t\tDirectory: dir,\r\n\t\tWorkbook: wb,\r\n\t\tProps: props,\r\n\t\tCustprops: custprops,\r\n\t\tDeps: deps,\r\n\t\tSheets: sheets,\r\n\t\tSheetNames: props.SheetNames,\r\n\t\tStrings: strs,\r\n\t\tStyles: styles,\r\n\t\tThemes: themes,\r\n\t\tSSF: SSF.get_table()\r\n\t});\r\n\tif(opts.bookFiles) {\r\n\t\tout.keys = entries;\r\n\t\tout.files = zip.files;\r\n\t}\r\n\tif(opts.bookVBA) {\r\n\t\tif(dir.vba.length > 0) out.vbaraw = getzipdata(zip,strip_front_slash(dir.vba[0]),true);\r\n\t\telse if(dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin',true);\r\n\t}\r\n\treturn out;\r\n}\r\n\r\n/* [MS-OFFCRYPTO] 2.1.1 */\r\nfunction parse_xlsxcfb(cfb, _opts) {\r\n\tvar opts = _opts || {};\r\n\tvar f = '/!DataSpaces/Version';\r\n\tvar data = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\r\n\t/*var version = */parse_DataSpaceVersionInfo(data.content);\r\n\r\n\t/* 2.3.4.1 */\r\n\tf = '/!DataSpaces/DataSpaceMap';\r\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\r\n\tvar dsm = parse_DataSpaceMap(data.content);\r\n\tif(dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\")\r\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\r\n\r\n\t/* 2.3.4.2 */\r\n\tf = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\r\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\r\n\tvar seds = parse_DataSpaceDefinition(data.content);\r\n\tif(seds.length != 1 || seds[0] != \"StrongEncryptionTransform\")\r\n\t\tthrow new Error(\"ECMA-376 Encrypted file bad \" + f);\r\n\r\n\t/* 2.3.4.3 */\r\n\tf = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\r\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\r\n\t/*var hdr = */parse_Primary(data.content);\r\n\r\n\tf = '/EncryptionInfo';\r\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\r\n\tvar einfo = parse_EncryptionInfo(data.content);\r\n\r\n\t/* 2.3.4.4 */\r\n\tf = '/EncryptedPackage';\r\n\tdata = CFB.find(cfb, f); if(!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\r\n\r\n/*global decrypt_agile */\r\nif(einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\r\n/*global decrypt_std76 */\r\nif(einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\r\n\tthrow new Error(\"File is password-protected\");\r\n}\r\n\r\nfunction write_zip(wb, opts) {\r\n\t_shapeid = 1024;\r\n\tif(opts.bookType == \"ods\") return write_ods(wb, opts);\r\n\tif(wb && !wb.SSF) {\r\n\t\twb.SSF = SSF.get_table();\r\n\t}\r\n\tif(wb && wb.SSF) {\r\n\t\tmake_ssf(SSF); SSF.load_table(wb.SSF);\r\n\t\t// $FlowIgnore\r\n\t\topts.revssf = evert_num(wb.SSF); opts.revssf[wb.SSF[65535]] = 0;\r\n\t\topts.ssf = wb.SSF;\r\n\t}\r\n\topts.rels = {}; opts.wbrels = {};\r\n\topts.Strings = []; opts.Strings.Count = 0; opts.Strings.Unique = 0;\r\n\tvar wbext = opts.bookType == \"xlsb\" ? \"bin\" : \"xml\";\r\n\tvar vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\r\n\tvar ct = new_ct();\r\n\tfix_write_opts(opts = opts || {});\r\nvar zip = new jszip();\r\n\tvar f = \"\", rId = 0;\r\n\r\n\topts.cellXfs = [];\r\n\tget_cell_style(opts.cellXfs, {}, {revssf:{\"General\":0}});\r\n\r\n\tif(!wb.Props) wb.Props = {};\r\n\r\n\tf = \"docProps/core.xml\";\r\n\tzip.file(f, write_core_props(wb.Props, opts));\r\n\tct.coreprops.push(f);\r\n\tadd_rels(opts.rels, 2, f, RELS.CORE_PROPS);\r\n\r\nf = \"docProps/app.xml\";\r\n\tif(wb.Props && wb.Props.SheetNames){/* empty */}\r\n\telse if(!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;\r\n\telse {\r\n\t\tvar _sn = [];\r\n\t\tfor(var _i = 0; _i < wb.SheetNames.length; ++_i)\r\n\t\t\tif((wb.Workbook.Sheets[_i]||{}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\r\n\t\twb.Props.SheetNames = _sn;\r\n\t}\r\n\twb.Props.Worksheets = wb.Props.SheetNames.length;\r\n\tzip.file(f, write_ext_props(wb.Props, opts));\r\n\tct.extprops.push(f);\r\n\tadd_rels(opts.rels, 3, f, RELS.EXT_PROPS);\r\n\r\n\tif(wb.Custprops !== wb.Props && keys(wb.Custprops||{}).length > 0) {\r\n\t\tf = \"docProps/custom.xml\";\r\n\t\tzip.file(f, write_cust_props(wb.Custprops, opts));\r\n\t\tct.custprops.push(f);\r\n\t\tadd_rels(opts.rels, 4, f, RELS.CUST_PROPS);\r\n\t}\r\n\r\n\tf = \"xl/workbook.\" + wbext;\r\n\tzip.file(f, write_wb(wb, f, opts));\r\n\tct.workbooks.push(f);\r\n\tadd_rels(opts.rels, 1, f, RELS.WB);\r\n\r\n\tfor(rId=1;rId <= wb.SheetNames.length; ++rId) {\r\n\t\tvar wsrels = {'!id':{}};\r\n\t\tvar ws = wb.Sheets[wb.SheetNames[rId-1]];\r\n\t\tvar _type = (ws || {})[\"!type\"] || \"sheet\";\r\n\t\tswitch(_type) {\r\n\t\tcase \"chart\": /*\r\n\t\t\tf = \"xl/chartsheets/sheet\" + rId + \".\" + wbext;\r\n\t\t\tzip.file(f, write_cs(rId-1, f, opts, wb, wsrels));\r\n\t\t\tct.charts.push(f);\r\n\t\t\tadd_rels(wsrels, -1, \"chartsheets/sheet\" + rId + \".\" + wbext, RELS.CS);\r\n\t\t\tbreak; */\r\n\t\t\t/* falls through */\r\n\t\tdefault:\r\n\t\t\tf = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\r\n\t\t\tzip.file(f, write_ws(rId-1, f, opts, wb, wsrels));\r\n\t\t\tct.sheets.push(f);\r\n\t\t\tadd_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\r\n\t\t}\r\n\r\n\t\tif(ws) {\r\n\t\t\tvar comments = ws['!comments'];\r\n\t\t\tif(comments && comments.length > 0) {\r\n\t\t\t\tvar cf = \"xl/comments\" + rId + \".\" + wbext;\r\n\t\t\t\tzip.file(cf, write_cmnt(comments, cf, opts));\r\n\t\t\t\tct.comments.push(cf);\r\n\t\t\t\tadd_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\r\n\t\t\t}\r\n\t\t\tif(ws['!legacy']) {\r\n\t\t\t\tzip.file(\"xl/drawings/vmlDrawing\" + (rId) + \".vml\", write_comments_vml(rId, ws['!comments']));\r\n\t\t\t}\r\n\t\t\tdelete ws['!comments'];\r\n\t\t\tdelete ws['!legacy'];\r\n\t\t}\r\n\r\n\t\tif(wsrels['!id'].rId1) zip.file(get_rels_path(f), write_rels(wsrels));\r\n\t}\r\n\r\n\tif(opts.Strings != null && opts.Strings.length > 0) {\r\n\t\tf = \"xl/sharedStrings.\" + wbext;\r\n\t\tzip.file(f, write_sst(opts.Strings, f, opts));\r\n\t\tct.strs.push(f);\r\n\t\tadd_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\r\n\t}\r\n\r\n\t/* TODO: something more intelligent with themes */\r\n\r\n\tf = \"xl/theme/theme1.xml\";\r\n\tzip.file(f, write_theme(wb.Themes, opts));\r\n\tct.themes.push(f);\r\n\tadd_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\r\n\r\n\t/* TODO: something more intelligent with styles */\r\n\r\n\tf = \"xl/styles.\" + wbext;\r\n\tzip.file(f, write_sty(wb, f, opts));\r\n\tct.styles.push(f);\r\n\tadd_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\r\n\r\n\tif(wb.vbaraw && vbafmt) {\r\n\t\tf = \"xl/vbaProject.bin\";\r\n\t\tzip.file(f, wb.vbaraw);\r\n\t\tct.vba.push(f);\r\n\t\tadd_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\r\n\t}\r\n\r\n\tzip.file(\"[Content_Types].xml\", write_ct(ct, opts));\r\n\tzip.file('_rels/.rels', write_rels(opts.rels));\r\n\tzip.file('xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\r\n\r\n\tdelete opts.revssf; delete opts.ssf;\r\n\treturn zip;\r\n}\r\nfunction firstbyte(f,o) {\r\n\tvar x = \"\";\r\n\tswitch((o||{}).type || \"base64\") {\r\n\t\tcase 'buffer': return [f[0], f[1], f[2], f[3]];\r\n\t\tcase 'base64': x = Base64.decode(f.slice(0,24)); break;\r\n\t\tcase 'binary': x = f; break;\r\n\t\tcase 'array':  return [f[0], f[1], f[2], f[3]];\r\n\t\tdefault: throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\r\n\t}\r\n\treturn [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3)];\r\n}\r\n\r\nfunction read_cfb(cfb, opts) {\r\n\tif(CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\r\n\treturn parse_xlscfb(cfb, opts);\r\n}\r\n\r\nfunction read_zip(data, opts) {\r\nvar zip, d = data;\r\n\tvar o = opts||{};\r\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\r\n\tswitch(o.type) {\r\n\t\tcase \"base64\": zip = new jszip(d, { base64:true }); break;\r\n\t\tcase \"binary\": case \"array\": zip = new jszip(d, { base64:false }); break;\r\n\t\tcase \"buffer\": zip = new jszip(d); break;\r\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\r\n\t}\r\n\treturn parse_zip(zip, o);\r\n}\r\n\r\nfunction read_plaintext(data, o) {\r\n\tvar i = 0;\r\n\tmain: while(i < data.length) switch(data.charCodeAt(i)) {\r\n\t\tcase 0x0A: case 0x0D: case 0x20: ++i; break;\r\n\t\tcase 0x3C: return parse_xlml(data.slice(i),o);\r\n\t\tdefault: break main;\r\n\t}\r\n\treturn PRN.to_workbook(data, o);\r\n}\r\n\r\nfunction read_plaintext_raw(data, o) {\r\n\tvar str = \"\", bytes = firstbyte(data, o);\r\n\tswitch(o.type) {\r\n\t\tcase 'base64': str = Base64.decode(data); break;\r\n\t\tcase 'binary': str = data; break;\r\n\t\tcase 'buffer': str = data.toString('binary'); break;\r\n\t\tcase 'array': str = cc2str(data); break;\r\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\r\n\t}\r\n\tif(bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\r\n\treturn read_plaintext(str, o);\r\n}\r\n\r\nfunction read_utf16(data, o) {\r\n\tvar d = data;\r\n\tif(o.type == 'base64') d = Base64.decode(d);\r\n\td = cptable.utils.decode(1200, d.slice(2), 'str');\r\n\to.type = \"binary\";\r\n\treturn read_plaintext(d, o);\r\n}\r\n\r\nfunction bstrify(data) {\r\n\treturn !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\r\n}\r\n\r\nfunction read_prn(data, d, o, str) {\r\n\tif(str) { o.type = \"string\"; return PRN.to_workbook(data, o); }\r\n\treturn PRN.to_workbook(d, o);\r\n}\r\n\r\nfunction readSync(data, opts) {\r\n\treset_cp();\r\n\tif(typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), opts);\r\n\tvar d = data, n = [0,0,0,0], str = false;\r\n\tvar o = opts||{};\r\n\t_ssfopts = {};\r\n\tif(o.dateNF) _ssfopts.dateNF = o.dateNF;\r\n\tif(!o.type) o.type = (has_buf && Buffer.isBuffer(data)) ? \"buffer\" : \"base64\";\r\n\tif(o.type == \"file\") { o.type = has_buf ? \"buffer\" : \"binary\"; d = read_binary(data); }\r\n\tif(o.type == \"string\") { str = true; o.type = \"binary\"; d = bstrify(data); }\r\n\tif(o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\r\n\t\t// $FlowIgnore\r\n\t\tvar ab=new ArrayBuffer(3), vu=new Uint8Array(ab); vu.foo=\"bar\";\r\n\t\t// $FlowIgnore\r\n\t\tif(!vu.foo) {o=dup(o); o.type='array'; return readSync(ab2a(d), o);}\r\n\t}\r\n\tswitch((n = firstbyte(d, o))[0]) {\r\n\t\tcase 0xD0: return read_cfb(CFB.read(d, o), o);\r\n\t\tcase 0x09: return parse_xlscfb(d, o);\r\n\t\tcase 0x3C: return parse_xlml(d, o);\r\n\t\tcase 0x49: if(n[1] === 0x44) return read_wb_ID(d, o); break;\r\n\t\tcase 0x54: if(n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o); break;\r\n\t\tcase 0x50: return (n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09) ? read_zip(d, o) : read_prn(data, d, o, str);\r\n\t\tcase 0xEF: return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\r\n\t\tcase 0xFF: if(n[1] === 0xFE) { return read_utf16(d, o); } break;\r\n\t\tcase 0x00: if(n[1] === 0x00 && n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o); break;\r\n\t\tcase 0x03: case 0x83: case 0x8B: case 0x8C: return DBF.to_workbook(d, o);\r\n\t\tcase 0x7B: if(n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return RTF.to_workbook(d, o); break;\r\n\t\tcase 0x0A: case 0x0D: case 0x20: return read_plaintext_raw(d, o);\r\n\t}\r\n\tif(n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\r\n\treturn read_prn(data, d, o, str);\r\n}\r\n\r\nfunction readFileSync(filename, opts) {\r\n\tvar o = opts||{}; o.type = 'file';\r\n\treturn readSync(filename, o);\r\n}\r\nfunction write_zip_type(wb, opts) {\r\n\tvar o = opts||{};\r\n\tvar z = write_zip(wb, o);\r\n\tvar oopts = {};\r\n\tif(o.compression) oopts.compression = 'DEFLATE';\r\n\tswitch(o.type) {\r\n\t\tcase \"base64\": oopts.type = \"base64\"; break;\r\n\t\tcase \"binary\": oopts.type = \"string\"; break;\r\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\r\n\t\tcase \"buffer\":\r\n\t\tcase \"file\": oopts.type = has_buf ? \"nodebuffer\" : \"string\"; break;\r\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\r\n\t}\r\n\tif(o.type === \"file\") return write_dl(o.file, z.generate(oopts));\r\n\tvar out = z.generate(oopts);\r\n\treturn o.type == \"string\" ? utf8read(out) : out;\r\n}\r\n\r\nfunction write_cfb_type(wb, opts) {\r\n\tvar o = opts||{};\r\n\tvar cfb = write_xlscfb(wb, o);\r\n\tswitch(o.type) {\r\n\t\tcase \"base64\": case \"binary\": break;\r\n\t\tcase \"buffer\": case \"array\": o.type = \"\"; break;\r\n\t\tcase \"file\": return write_dl(o.file, CFB.write(cfb, {type:has_buf ? 'buffer' : \"\"}));\r\n\t\tcase \"string\": throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\r\n\t\tdefault: throw new Error(\"Unrecognized type \" + o.type);\r\n\t}\r\n\treturn CFB.write(cfb, o);\r\n}\r\n\r\nfunction write_string_type(out, opts, bom) {\r\n\tif(!bom) bom = \"\";\r\n\tvar o = bom + out;\r\n\tswitch(opts.type) {\r\n\t\tcase \"base64\": return Base64.encode(utf8write(o));\r\n\t\tcase \"binary\": return utf8write(o);\r\n\t\tcase \"string\": return out;\r\n\t\tcase \"file\": return write_dl(opts.file, o, 'utf8');\r\n\t\tcase \"buffer\": {\r\n\t\t\tif(has_buf) return new Buffer(o, 'utf8');\r\n\t\t\telse return write_string_type(o, {type:'binary'}).split(\"\").map(function(c) { return c.charCodeAt(0); });\r\n\t\t}\r\n\t}\r\n\tthrow new Error(\"Unrecognized type \" + opts.type);\r\n}\r\n\r\nfunction write_stxt_type(out, opts) {\r\n\tswitch(opts.type) {\r\n\t\tcase \"base64\": return Base64.encode(out);\r\n\t\tcase \"binary\": return out;\r\n\t\tcase \"string\": return out; /* override in sheet_to_txt */\r\n\t\tcase \"file\": return write_dl(opts.file, out, 'binary');\r\n\t\tcase \"buffer\": {\r\n\t\t\tif(has_buf) return new Buffer(out, 'binary');\r\n\t\t\telse return out.split(\"\").map(function(c) { return c.charCodeAt(0); });\r\n\t\t}\r\n\t}\r\n\tthrow new Error(\"Unrecognized type \" + opts.type);\r\n}\r\n\r\n/* TODO: test consistency */\r\nfunction write_binary_type(out, opts) {\r\n\tswitch(opts.type) {\r\n\t\tcase \"string\":\r\n\t\tcase \"base64\":\r\n\t\tcase \"binary\":\r\n\t\t\tvar bstr = \"\";\r\n\t\t\t// $FlowIgnore\r\n\t\t\tfor(var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\r\n\t\t\treturn opts.type == 'base64' ? Base64.encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\r\n\t\tcase \"file\": return write_dl(opts.file, out);\r\n\t\tcase \"buffer\": return out;\r\n\t\tdefault: throw new Error(\"Unrecognized type \" + opts.type);\r\n\t}\r\n}\r\n\r\nfunction writeSync(wb, opts) {\r\n\tcheck_wb(wb);\r\n\tvar o = opts||{};\r\n\tif(o.type == \"array\") { o.type = \"binary\"; var out = (writeSync(wb, o)); o.type = \"array\"; return s2ab(out); }\r\n\tswitch(o.bookType || 'xlsb') {\r\n\t\tcase 'xml':\r\n\t\tcase 'xlml': return write_string_type(write_xlml(wb, o), o);\r\n\t\tcase 'slk':\r\n\t\tcase 'sylk': return write_string_type(write_slk_str(wb, o), o);\r\n\t\tcase 'htm':\r\n\t\tcase 'html': return write_string_type(write_htm_str(wb, o), o);\r\n\t\tcase 'txt': return write_stxt_type(write_txt_str(wb, o), o);\r\n\t\tcase 'csv': return write_string_type(write_csv_str(wb, o), o, \"\\ufeff\");\r\n\t\tcase 'dif': return write_string_type(write_dif_str(wb, o), o);\r\n\t\tcase 'dbf': return write_binary_type(write_dbf_buf(wb, o), o);\r\n\t\tcase 'prn': return write_string_type(write_prn_str(wb, o), o);\r\n\t\tcase 'rtf': return write_string_type(write_rtf_str(wb, o), o);\r\n\t\tcase 'eth': return write_string_type(write_eth_str(wb, o), o);\r\n\t\tcase 'fods': return write_string_type(write_ods(wb, o), o);\r\n\t\tcase 'biff2': if(!o.biff) o.biff = 2; /* falls through */\r\n\t\tcase 'biff3': if(!o.biff) o.biff = 3; /* falls through */\r\n\t\tcase 'biff4': if(!o.biff) o.biff = 4; return write_binary_type(write_biff_buf(wb, o), o);\r\n\t\tcase 'biff5': if(!o.biff) o.biff = 5; /* falls through */\r\n\t\tcase 'biff8':\r\n\t\tcase 'xla':\r\n\t\tcase 'xls': if(!o.biff) o.biff = 8; return write_cfb_type(wb, o);\r\n\t\tcase 'xlsx':\r\n\t\tcase 'xlsm':\r\n\t\tcase 'xlam':\r\n\t\tcase 'xlsb':\r\n\t\tcase 'ods': return write_zip_type(wb, o);\r\n\t\tdefault: throw new Error (\"Unrecognized bookType |\" + o.bookType + \"|\");\r\n\t}\r\n}\r\n\r\nfunction resolve_book_type(o) {\r\n\tif(o.bookType) return;\r\n\tvar _BT = {\r\n\t\t\"xls\": \"biff8\",\r\n\t\t\"htm\": \"html\",\r\n\t\t\"slk\": \"sylk\",\r\n\t\t\"socialcalc\": \"eth\",\r\n\t\t\"Sh33tJS\": \"WTF\"\r\n\t};\r\n\tvar ext = o.file.slice(o.file.lastIndexOf(\".\")).toLowerCase();\r\n\tif(ext.match(/^\\.[a-z]+$/)) o.bookType = ext.slice(1);\r\n\to.bookType = _BT[o.bookType] || o.bookType;\r\n}\r\n\r\nfunction writeFileSync(wb, filename, opts) {\r\n\tvar o = opts||{}; o.type = 'file';\r\n\to.file = filename;\r\n\tresolve_book_type(o);\r\n\treturn writeSync(wb, o);\r\n}\r\n\r\nfunction writeFileAsync(filename, wb, opts, cb) {\r\n\tvar o = opts||{}; o.type = 'file';\r\n\to.file = filename;\r\n\tresolve_book_type(o);\r\n\to.type = 'buffer';\r\n\tvar _cb = cb; if(!(_cb instanceof Function)) _cb = (opts);\r\n\treturn _fs.writeFile(filename, writeSync(wb, o), _cb);\r\n}\r\nfunction sheet_to_json(sheet, opts) {\r\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\r\n\tvar val = {t:'n',v:0}, header = 0, offset = 1, hdr = [], isempty = true, v=0, vv=\"\";\r\n\tvar r = {s:{r:0,c:0},e:{r:0,c:0}};\r\n\tvar o = opts || {};\r\n\tvar raw = o.raw;\r\n\tvar defval = o.defval;\r\n\tvar range = o.range != null ? o.range : sheet[\"!ref\"];\r\n\tif(o.header === 1) header = 1;\r\n\telse if(o.header === \"A\") header = 2;\r\n\telse if(Array.isArray(o.header)) header = 3;\r\n\tswitch(typeof range) {\r\n\t\tcase 'string': r = safe_decode_range(range); break;\r\n\t\tcase 'number': r = safe_decode_range(sheet[\"!ref\"]); r.s.r = range; break;\r\n\t\tdefault: r = range;\r\n\t}\r\n\tif(header > 0) offset = 0;\r\n\tvar rr = encode_row(r.s.r);\r\n\tvar cols = [];\r\n\tvar out = [];\r\n\tvar outi = 0, counter = 0;\r\n\tvar dense = Array.isArray(sheet);\r\n\tvar R = r.s.r, C = 0, CC = 0;\r\n\tif(dense && !sheet[R]) sheet[R] = [];\r\n\tfor(C = r.s.c; C <= r.e.c; ++C) {\r\n\t\tcols[C] = encode_col(C);\r\n\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\r\n\t\tswitch(header) {\r\n\t\t\tcase 1: hdr[C] = C - r.s.c; break;\r\n\t\t\tcase 2: hdr[C] = cols[C]; break;\r\n\t\t\tcase 3: hdr[C] = o.header[C - r.s.c]; break;\r\n\t\t\tdefault:\r\n\t\t\t\tif(val == null) val = {w: \"__EMPTY\", t: \"s\"};\r\n\t\t\t\tvv = v = format_cell(val, null, o);\r\n\t\t\t\tcounter = 0;\r\n\t\t\t\tfor(CC = 0; CC < hdr.length; ++CC) if(hdr[CC] == vv) vv = v + \"_\" + (++counter);\r\n\t\t\t\thdr[C] = vv;\r\n\t\t}\r\n\t}\r\n\tvar row = (header === 1) ? [] : {};\r\n\tfor (R = r.s.r + offset; R <= r.e.r; ++R) {\r\n\t\trr = encode_row(R);\r\n\t\tisempty = true;\r\n\t\tif(header === 1) row = [];\r\n\t\telse {\r\n\t\t\trow = {};\r\n\t\t\tif(Object.defineProperty) try { Object.defineProperty(row, '__rowNum__', {value:R, enumerable:false}); } catch(e) { row.__rowNum__ = R; }\r\n\t\t\telse row.__rowNum__ = R;\r\n\t\t}\r\n\t\tif(!dense || sheet[R]) for (C = r.s.c; C <= r.e.c; ++C) {\r\n\t\t\tval = dense ? sheet[R][C] : sheet[cols[C] + rr];\r\n\t\t\tif(val === undefined || val.t === undefined) {\r\n\t\t\t\tif(defval === undefined) continue;\r\n\t\t\t\tif(hdr[C] != null) { row[hdr[C]] = defval; isempty = false; }\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tv = val.v;\r\n\t\t\tswitch(val.t){\r\n\t\t\t\tcase 'z': if(v == null) break; continue;\r\n\t\t\t\tcase 'e': v = void 0; break;\r\n\t\t\t\tcase 's': case 'd': case 'b': case 'n': break;\r\n\t\t\t\tdefault: throw new Error('unrecognized type ' + val.t);\r\n\t\t\t}\r\n\t\t\tif(hdr[C] != null) {\r\n\t\t\t\tif(v == null) {\r\n\t\t\t\t\tif(defval !== undefined) row[hdr[C]] = defval;\r\n\t\t\t\t\telse if(raw && v === null) row[hdr[C]] = null;\r\n\t\t\t\t\telse continue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trow[hdr[C]] = raw ? v : format_cell(val,v,o);\r\n\t\t\t\t}\r\n\t\t\t\tisempty = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif((isempty === false) || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row;\r\n\t}\r\n\tout.length = outi;\r\n\treturn out;\r\n}\r\n\r\nvar qreg = /\"/g;\r\nfunction make_csv_row(sheet, r, R, cols, fs, rs, FS, o) {\r\n\tvar isempty = true;\r\n\tvar row = [], txt = \"\", rr = encode_row(R);\r\n\tfor(var C = r.s.c; C <= r.e.c; ++C) {\r\n\t\tif (!cols[C]) continue;\r\n\t\tvar val = o.dense ? (sheet[R]||[])[C]: sheet[cols[C] + rr];\r\n\t\tif(val == null) txt = \"\";\r\n\t\telse if(val.v != null) {\r\n\t\t\tisempty = false;\r\n\t\t\ttxt = ''+format_cell(val, null, o);\r\n\t\t\tfor(var i = 0, cc = 0; i !== txt.length; ++i) if((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34) {txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\"; break; }\r\n\t\t\tif(txt == \"ID\") txt = '\"ID\"';\r\n\t\t} else if(val.f != null && !val.F) {\r\n\t\t\tisempty = false;\r\n\t\t\ttxt = '=' + val.f; if(txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\r\n\t\t} else txt = \"\";\r\n\t\t/* NOTE: Excel CSV does not support array formulae */\r\n\t\trow.push(txt);\r\n\t}\r\n\tif(o.blankrows === false && isempty) return null;\r\n\treturn row.join(FS);\r\n}\r\n\r\nfunction sheet_to_csv(sheet, opts) {\r\n\tvar out = [];\r\n\tvar o = opts == null ? {} : opts;\r\n\tif(sheet == null || sheet[\"!ref\"] == null) return \"\";\r\n\tvar r = safe_decode_range(sheet[\"!ref\"]);\r\n\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\r\n\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\r\n\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\r\n\tvar row = \"\", cols = [];\r\n\to.dense = Array.isArray(sheet);\r\n\tvar colinfo = o.skipHidden && sheet[\"!cols\"] || [];\r\n\tvar rowinfo = o.skipHidden && sheet[\"!rows\"] || [];\r\n\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\r\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\r\n\t\tif ((rowinfo[R]||{}).hidden) continue;\r\n\t\trow = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\r\n\t\tif(row == null) { continue; }\r\n\t\tif(o.strip) row = row.replace(endregex,\"\");\r\n\t\tout.push(row + RS);\r\n\t}\r\n\tdelete o.dense;\r\n\treturn out.join(\"\");\r\n}\r\n\r\nfunction sheet_to_txt(sheet, opts) {\r\n\tif(!opts) opts = {}; opts.FS = \"\\t\"; opts.RS = \"\\n\";\r\n\tvar s = sheet_to_csv(sheet, opts);\r\n\tif(typeof cptable == 'undefined' || opts.type == 'string') return s;\r\n\tvar o = cptable.utils.encode(1200, s, 'str');\r\n\treturn String.fromCharCode(255) + String.fromCharCode(254) + o;\r\n}\r\n\r\nfunction sheet_to_formulae(sheet) {\r\n\tvar y = \"\", x, val=\"\";\r\n\tif(sheet == null || sheet[\"!ref\"] == null) return [];\r\n\tvar r = safe_decode_range(sheet['!ref']), rr = \"\", cols = [], C;\r\n\tvar cmds = [];\r\n\tvar dense = Array.isArray(sheet);\r\n\tfor(C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\r\n\tfor(var R = r.s.r; R <= r.e.r; ++R) {\r\n\t\trr = encode_row(R);\r\n\t\tfor(C = r.s.c; C <= r.e.c; ++C) {\r\n\t\t\ty = cols[C] + rr;\r\n\t\t\tx = dense ? (sheet[R]||[])[C] : sheet[y];\r\n\t\t\tval = \"\";\r\n\t\t\tif(x === undefined) continue;\r\n\t\t\telse if(x.F != null) {\r\n\t\t\t\ty = x.F;\r\n\t\t\t\tif(!x.f) continue;\r\n\t\t\t\tval = x.f;\r\n\t\t\t\tif(y.indexOf(\":\") == -1) y = y + \":\" + y;\r\n\t\t\t}\r\n\t\t\tif(x.f != null) val = x.f;\r\n\t\t\telse if(x.t == 'z') continue;\r\n\t\t\telse if(x.t == 'n' && x.v != null) val = \"\" + x.v;\r\n\t\t\telse if(x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";\r\n\t\t\telse if(x.w !== undefined) val = \"'\" + x.w;\r\n\t\t\telse if(x.v === undefined) continue;\r\n\t\t\telse if(x.t == 's') val = \"'\" + x.v;\r\n\t\t\telse val = \"\"+x.v;\r\n\t\t\tcmds[cmds.length] = y + \"=\" + val;\r\n\t\t}\r\n\t}\r\n\treturn cmds;\r\n}\r\n\r\nfunction sheet_add_json(_ws, js, opts) {\r\n\tvar o = opts || {};\r\n\tvar offset = +!o.skipHeader;\r\n\tvar ws = _ws || ({});\r\n\tvar _R = 0, _C = 0;\r\n\tif(ws && o.origin != null) {\r\n\t\tif(typeof o.origin == 'number') _R = o.origin;\r\n\t\telse {\r\n\t\t\tvar _origin = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\r\n\t\t\t_R = _origin.r; _C = _origin.c;\r\n\t\t}\r\n\t}\r\n\tvar cell;\r\n\tvar range = ({s: {c:0, r:0}, e: {c:_C, r:_R + js.length - 1 + offset}});\r\n\tif(ws['!ref']) {\r\n\t\tvar _range = safe_decode_range(ws['!ref']);\r\n\t\trange.e.c = Math.max(range.e.c, _range.e.c);\r\n\t\trange.e.r = Math.max(range.e.r, _range.e.r);\r\n\t\tif(_R == -1) { _R = range.e.r + 1; range.e.r = _R + js.length - 1 + offset; }\r\n\t}\r\n\tvar hdr = o.header || [], C = 0;\r\n\r\n\tjs.forEach(function (JS, R) {\r\n\t\tkeys(JS).forEach(function(k) {\r\n\t\t\tif((C=hdr.indexOf(k)) == -1) hdr[C=hdr.length] = k;\r\n\t\t\tvar v = JS[k];\r\n\t\t\tvar t = 'z';\r\n\t\t\tvar z = \"\";\r\n\t\t\tif(typeof v == 'number') t = 'n';\r\n\t\t\telse if(typeof v == 'boolean') t = 'b';\r\n\t\t\telse if(typeof v == 'string') t = 's';\r\n\t\t\telse if(v instanceof Date) {\r\n\t\t\t\tt = 'd';\r\n\t\t\t\tif(!o.cellDates) { t = 'n'; v = datenum(v); }\r\n\t\t\t\tz = o.dateNF || SSF._table[14];\r\n\t\t\t}\r\n\t\t\tws[encode_cell({c:_C + C,r:_R + R + offset})] = cell = ({t:t, v:v});\r\n\t\t\tif(z) cell.z = z;\r\n\t\t});\r\n\t});\r\n\trange.e.c = Math.max(range.e.c, _C + hdr.length - 1);\r\n\tvar __R = encode_row(_R);\r\n\tif(offset) for(C = 0; C < hdr.length; ++C) ws[encode_col(C + _C) + __R] = {t:'s', v:hdr[C]};\r\n\tws['!ref'] = encode_range(range);\r\n\treturn ws;\r\n}\r\nfunction json_to_sheet(js, opts) { return sheet_add_json(null, js, opts); }\r\n\r\nvar utils = {\r\n\tencode_col: encode_col,\r\n\tencode_row: encode_row,\r\n\tencode_cell: encode_cell,\r\n\tencode_range: encode_range,\r\n\tdecode_col: decode_col,\r\n\tdecode_row: decode_row,\r\n\tsplit_cell: split_cell,\r\n\tdecode_cell: decode_cell,\r\n\tdecode_range: decode_range,\r\n\tformat_cell: format_cell,\r\n\tget_formulae: sheet_to_formulae,\r\n\tmake_csv: sheet_to_csv,\r\n\tmake_json: sheet_to_json,\r\n\tmake_formulae: sheet_to_formulae,\r\n\tsheet_add_aoa: sheet_add_aoa,\r\n\tsheet_add_json: sheet_add_json,\r\n\taoa_to_sheet: aoa_to_sheet,\r\n\tjson_to_sheet: json_to_sheet,\r\n\ttable_to_sheet: parse_dom_table,\r\n\ttable_to_book: table_to_book,\r\n\tsheet_to_csv: sheet_to_csv,\r\n\tsheet_to_txt: sheet_to_txt,\r\n\tsheet_to_json: sheet_to_json,\r\n\tsheet_to_html: HTML_.from_sheet,\r\n\tsheet_to_dif: DIF.from_sheet,\r\n\tsheet_to_slk: SYLK.from_sheet,\r\n\tsheet_to_eth: ETH.from_sheet,\r\n\tsheet_to_formulae: sheet_to_formulae,\r\n\tsheet_to_row_object_array: sheet_to_json\r\n};\r\n\r\n(function(utils) {\r\nutils.consts = utils.consts || {};\r\nfunction add_consts(R/*Array<any>*/) { R.forEach(function(a){ utils.consts[a[0]] = a[1]; }); }\r\n\r\nfunction get_default(x, y, z) { return x[y] != null ? x[y] : (x[y] = z); }\r\n\r\n/* get cell, creating a stub if necessary */\r\nfunction ws_get_cell_stub(ws, R, C) {\r\n\t/* A1 cell address */\r\n\tif(typeof R == \"string\") return ws[R] || (ws[R] = {t:'z'});\r\n\t/* cell address object */\r\n\tif(typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\r\n\t/* R and C are 0-based indices */\r\n\treturn ws_get_cell_stub(ws, encode_cell({r:R,c:C||0}));\r\n}\r\n\r\n/* find sheet index for given name / validate index */\r\nfunction wb_sheet_idx(wb, sh) {\r\n\tif(typeof sh == \"number\") {\r\n\t\tif(sh >= 0 && wb.SheetNames.length > sh) return sh;\r\n\t\tthrow new Error(\"Cannot find sheet # \" + sh);\r\n\t} else if(typeof sh == \"string\") {\r\n\t\tvar idx = wb.SheetNames.indexOf(sh);\r\n\t\tif(idx > -1) return idx;\r\n\t\tthrow new Error(\"Cannot find sheet name |\" + sh + \"|\");\r\n\t} else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\r\n}\r\n\r\n/* simple blank workbook object */\r\nutils.book_new = function() {\r\n\treturn { SheetNames: [], Sheets: {} };\r\n};\r\n\r\n/* add a worksheet to the end of a given workbook */\r\nutils.book_append_sheet = function(wb, ws, name) {\r\n\tif(!name) for(var i = 1; i <= 0xFFFF; ++i) if(wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\r\n\tif(!name) throw new Error(\"Too many worksheets\");\r\n\tcheck_ws_name(name);\r\n\tif(wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\r\n\r\n\twb.SheetNames.push(name);\r\n\twb.Sheets[name] = ws;\r\n};\r\n\r\n/* set sheet visibility (visible/hidden/very hidden) */\r\nutils.book_set_sheet_visibility = function(wb, sh, vis) {\r\n\tget_default(wb,\"Workbook\",{});\r\n\tget_default(wb.Workbook,\"Sheets\",[]);\r\n\r\n\tvar idx = wb_sheet_idx(wb, sh);\r\n\t// $FlowIgnore\r\n\tget_default(wb.Workbook.Sheets,idx, {});\r\n\r\n\tswitch(vis) {\r\n\t\tcase 0: case 1: case 2: break;\r\n\t\tdefault: throw new Error(\"Bad sheet visibility setting \" + vis);\r\n\t}\r\n\t// $FlowIgnore\r\n\twb.Workbook.Sheets[idx].Hidden = vis;\r\n};\r\nadd_consts([\r\n\t[\"SHEET_VISIBLE\", 0],\r\n\t[\"SHEET_HIDDEN\", 1],\r\n\t[\"SHEET_VERY_HIDDEN\", 2]\r\n]);\r\n\r\n/* set number format */\r\nutils.cell_set_number_format = function(cell, fmt) {\r\n\tcell.z = fmt;\r\n\treturn cell;\r\n};\r\n\r\n/* set cell hyperlink */\r\nutils.cell_set_hyperlink = function(cell, target, tooltip) {\r\n\tif(!target) {\r\n\t\tdelete cell.l;\r\n\t} else {\r\n\t\tcell.l = ({ Target: target });\r\n\t\tif(tooltip) cell.l.Tooltip = tooltip;\r\n\t}\r\n\treturn cell;\r\n};\r\nutils.cell_set_internal_link = function(cell, range, tooltip) { return utils.cell_set_hyperlink(cell, \"#\" + range, tooltip); };\r\n\r\n/* add to cell comments */\r\nutils.cell_add_comment = function(cell, text, author) {\r\n\tif(!cell.c) cell.c = [];\r\n\tcell.c.push({t:text, a:author||\"SheetJS\"});\r\n};\r\n\r\n/* set array formula and flush related cells */\r\nutils.sheet_set_array_formula = function(ws, range, formula) {\r\n\tvar rng = typeof range != \"string\" ? range : safe_decode_range(range);\r\n\tvar rngstr = typeof range == \"string\" ? range : encode_range(range);\r\n\tfor(var R = rng.s.r; R <= rng.e.r; ++R) for(var C = rng.s.c; C <= rng.e.c; ++C) {\r\n\t\tvar cell = ws_get_cell_stub(ws, R, C);\r\n\t\tcell.t = 'n';\r\n\t\tcell.F = rngstr;\r\n\t\tdelete cell.v;\r\n\t\tif(R == rng.s.r && C == rng.s.c) cell.f = formula;\r\n\t}\r\n\treturn ws;\r\n};\r\n\r\nreturn utils;\r\n})(utils);\r\n\r\nif(has_buf && typeof require != 'undefined') (function() {\r\n\tvar Readable = require('stream').Readable;\r\n\r\n\tvar write_csv_stream = function(sheet, opts) {\r\n\t\tvar stream = Readable();\r\n\t\tvar o = opts == null ? {} : opts;\r\n\t\tif(sheet == null || sheet[\"!ref\"] == null) { stream.push(null); return stream; }\r\n\t\tvar r = safe_decode_range(sheet[\"!ref\"]);\r\n\t\tvar FS = o.FS !== undefined ? o.FS : \",\", fs = FS.charCodeAt(0);\r\n\t\tvar RS = o.RS !== undefined ? o.RS : \"\\n\", rs = RS.charCodeAt(0);\r\n\t\tvar endregex = new RegExp((FS==\"|\" ? \"\\\\|\" : FS)+\"+$\");\r\n\t\tvar row = \"\", cols = [];\r\n\t\to.dense = Array.isArray(sheet);\r\n\t\tvar colinfo = o.skipHidden && sheet[\"!cols\"] || [];\r\n\t\tvar rowinfo = o.skipHidden && sheet[\"!rows\"] || [];\r\n\t\tfor(var C = r.s.c; C <= r.e.c; ++C) if (!((colinfo[C]||{}).hidden)) cols[C] = encode_col(C);\r\n\t\tvar R = r.s.r;\r\n\t\tvar BOM = false;\r\n\t\tstream._read = function() {\r\n\t\t\tif(!BOM) { BOM = true; return stream.push(\"\\uFEFF\"); }\r\n\t\t\tif(R > r.e.r) return stream.push(null);\r\n\t\t\twhile(R <= r.e.r) {\r\n\t\t\t\t++R;\r\n\t\t\t\tif ((rowinfo[R-1]||{}).hidden) continue;\r\n\t\t\t\trow = make_csv_row(sheet, r, R-1, cols, fs, rs, FS, o);\r\n\t\t\t\tif(row != null) {\r\n\t\t\t\t\tif(o.strip) row = row.replace(endregex,\"\");\r\n\t\t\t\t\tstream.push(row + RS);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn stream;\r\n\t};\r\n\r\n\tvar write_html_stream = function(ws, opts) {\r\n\t\tvar stream = Readable();\r\n\r\n\t\tvar o = opts || {};\r\n\t\tvar header = o.header != null ? o.header : HTML_.BEGIN;\r\n\t\tvar footer = o.footer != null ? o.footer : HTML_.END;\r\n\t\tstream.push(header);\r\n\t\tvar r = decode_range(ws['!ref']);\r\n\t\to.dense = Array.isArray(ws);\r\n\t\tstream.push(HTML_._preamble(ws, r, o));\r\n\t\tvar R = r.s.r;\r\n\t\tvar end = false;\r\n\t\tstream._read = function() {\r\n\t\t\tif(R > r.e.r) {\r\n\t\t\t\tif(!end) { end = true; stream.push(\"</table>\" + footer); }\r\n\t\t\t\treturn stream.push(null);\r\n\t\t\t}\r\n\t\t\twhile(R <= r.e.r) {\r\n\t\t\t\tstream.push(HTML_._row(ws, r, R, o));\r\n\t\t\t\t++R;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn stream;\r\n\t};\r\n\r\n\tXLSX.stream = {\r\n\t\tto_html: write_html_stream,\r\n\t\tto_csv: write_csv_stream\r\n\t};\r\n})();\r\n\r\nXLSX.parse_xlscfb = parse_xlscfb;\r\nXLSX.parse_ods = parse_ods;\r\nXLSX.parse_fods = parse_fods;\r\nXLSX.write_ods = write_ods;\r\nXLSX.parse_zip = parse_zip;\r\nXLSX.read = readSync; //xlsread\r\nXLSX.readFile = readFileSync; //readFile\r\nXLSX.readFileSync = readFileSync;\r\nXLSX.write = writeSync;\r\nXLSX.writeFile = writeFileSync;\r\nXLSX.writeFileSync = writeFileSync;\r\nXLSX.writeFileAsync = writeFileAsync;\r\nXLSX.utils = utils;\r\nXLSX.SSF = SSF;\r\nXLSX.CFB = CFB;\r\n})(typeof exports !== 'undefined' ? exports : XLSX);\r\n/*exported XLS, ODS */\r\nvar XLS = XLSX, ODS = XLSX;\r\n",null]}